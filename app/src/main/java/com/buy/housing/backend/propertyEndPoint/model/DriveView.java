/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2018-10-08 17:45:39 UTC)
 * on 2019-11-29 at 11:12:27 UTC 
 * Modify at your own risk.
 */

package com.buy.housing.backend.propertyEndPoint.model;

/**
 * Model definition for DriveView.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the propertyEndPoint. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DriveView extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Double endLat;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Double endLong;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private Long id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String kml;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String latLongUrl;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String name;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String nearbyUrl;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Image projectLogo;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Double startLat;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Double startLong;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String thumb;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String videoURL;

  /**
   * @return value or {@code null} for none
   */
  public Double getEndLat() {
    return endLat;
  }

  /**
   * @param endLat endLat or {@code null} for none
   */
  public DriveView setEndLat(Double endLat) {
    this.endLat = endLat;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Double getEndLong() {
    return endLong;
  }

  /**
   * @param endLong endLong or {@code null} for none
   */
  public DriveView setEndLong(Double endLong) {
    this.endLong = endLong;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Long getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public DriveView setId(Long id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public String getKml() {
    return kml;
  }

  /**
   * @param kml kml or {@code null} for none
   */
  public DriveView setKml(String kml) {
    this.kml = kml;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public String getLatLongUrl() {
    return latLongUrl;
  }

  /**
   * @param latLongUrl latLongUrl or {@code null} for none
   */
  public DriveView setLatLongUrl(String latLongUrl) {
    this.latLongUrl = latLongUrl;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public String getName() {
    return name;
  }

  /**
   * @param name name or {@code null} for none
   */
  public DriveView setName(String name) {
    this.name = name;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public String getNearbyUrl() {
    return nearbyUrl;
  }

  /**
   * @param nearbyUrl nearbyUrl or {@code null} for none
   */
  public DriveView setNearbyUrl(String nearbyUrl) {
    this.nearbyUrl = nearbyUrl;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Image getProjectLogo() {
    return projectLogo;
  }

  /**
   * @param projectLogo projectLogo or {@code null} for none
   */
  public DriveView setProjectLogo(Image projectLogo) {
    this.projectLogo = projectLogo;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Double getStartLat() {
    return startLat;
  }

  /**
   * @param startLat startLat or {@code null} for none
   */
  public DriveView setStartLat(Double startLat) {
    this.startLat = startLat;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Double getStartLong() {
    return startLong;
  }

  /**
   * @param startLong startLong or {@code null} for none
   */
  public DriveView setStartLong(Double startLong) {
    this.startLong = startLong;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public String getThumb() {
    return thumb;
  }

  /**
   * @param thumb thumb or {@code null} for none
   */
  public DriveView setThumb(String thumb) {
    this.thumb = thumb;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public String getVideoURL() {
    return videoURL;
  }

  /**
   * @param videoURL videoURL or {@code null} for none
   */
  public DriveView setVideoURL(String videoURL) {
    this.videoURL = videoURL;
    return this;
  }

  @Override
  public DriveView set(String fieldName, Object value) {
    return (DriveView) super.set(fieldName, value);
  }

  @Override
  public DriveView clone() {
    return (DriveView) super.clone();
  }

}
