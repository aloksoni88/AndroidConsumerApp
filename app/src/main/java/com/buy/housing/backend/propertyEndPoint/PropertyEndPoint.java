/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2018-10-08 17:45:39 UTC)
 * on 2019-11-29 at 11:12:27 UTC 
 * Modify at your own risk.
 */

package com.buy.housing.backend.propertyEndPoint;

/**
 * Service definition for PropertyEndPoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link PropertyEndPointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class PropertyEndPoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.25.0 of the propertyEndPoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://housingtestserver.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "propertyEndPoint/v1/";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public PropertyEndPoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  PropertyEndPoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addActiveAgent".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link AddActiveAgent#execute()} method to invoke the remote
   * operation.
   *
   * @param agntId
   * @param token
   * @param projectId
   * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.AddActiveAgentRequest}
   * @return the request
   */
  public AddActiveAgent addActiveAgent(Long agntId, String token, Long projectId, com.buy.housing.backend.propertyEndPoint.model.AddActiveAgentRequest content) throws java.io.IOException {
    AddActiveAgent result = new AddActiveAgent(agntId, token, projectId, content);
    initialize(result);
    return result;
  }

  public class AddActiveAgent extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "addActiveAgent/{agntId}/{token}/{projectId}";

    /**
     * Create a request for the method "addActiveAgent".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link AddActiveAgent#execute()} method to invoke the remote
     * operation. <p> {@link AddActiveAgent#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param agntId
     * @param token
     * @param projectId
     * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.AddActiveAgentRequest}
     * @since 1.13
     */
    protected AddActiveAgent(Long agntId, String token, Long projectId, com.buy.housing.backend.propertyEndPoint.model.AddActiveAgentRequest content) {
      super(PropertyEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.propertyEndPoint.model.CommonResponse.class);
      this.agntId = com.google.api.client.util.Preconditions.checkNotNull(agntId, "Required parameter agntId must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
      this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
    }

    @Override
    public AddActiveAgent setAlt(String alt) {
      return (AddActiveAgent) super.setAlt(alt);
    }

    @Override
    public AddActiveAgent setFields(String fields) {
      return (AddActiveAgent) super.setFields(fields);
    }

    @Override
    public AddActiveAgent setKey(String key) {
      return (AddActiveAgent) super.setKey(key);
    }

    @Override
    public AddActiveAgent setOauthToken(String oauthToken) {
      return (AddActiveAgent) super.setOauthToken(oauthToken);
    }

    @Override
    public AddActiveAgent setPrettyPrint(Boolean prettyPrint) {
      return (AddActiveAgent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddActiveAgent setQuotaUser(String quotaUser) {
      return (AddActiveAgent) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddActiveAgent setUserIp(String userIp) {
      return (AddActiveAgent) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long agntId;

    /**

     */
    public Long getAgntId() {
      return agntId;
    }

    public AddActiveAgent setAgntId(Long agntId) {
      this.agntId = agntId;
      return this;
    }

    @com.google.api.client.util.Key
    private String token;

    /**

     */
    public String getToken() {
      return token;
    }

    public AddActiveAgent setToken(String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private Long projectId;

    /**

     */
    public Long getProjectId() {
      return projectId;
    }

    public AddActiveAgent setProjectId(Long projectId) {
      this.projectId = projectId;
      return this;
    }

    @Override
    public AddActiveAgent set(String parameterName, Object value) {
      return (AddActiveAgent) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addOffer".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link AddOffer#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.AddOfferRequest}
   * @return the request
   */
  public AddOffer addOffer(com.buy.housing.backend.propertyEndPoint.model.AddOfferRequest content) throws java.io.IOException {
    AddOffer result = new AddOffer(content);
    initialize(result);
    return result;
  }

  public class AddOffer extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "addOffer";

    /**
     * Create a request for the method "addOffer".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link AddOffer#execute()} method to invoke the remote operation.
     * <p> {@link
     * AddOffer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.AddOfferRequest}
     * @since 1.13
     */
    protected AddOffer(com.buy.housing.backend.propertyEndPoint.model.AddOfferRequest content) {
      super(PropertyEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.propertyEndPoint.model.CommonResponse.class);
    }

    @Override
    public AddOffer setAlt(String alt) {
      return (AddOffer) super.setAlt(alt);
    }

    @Override
    public AddOffer setFields(String fields) {
      return (AddOffer) super.setFields(fields);
    }

    @Override
    public AddOffer setKey(String key) {
      return (AddOffer) super.setKey(key);
    }

    @Override
    public AddOffer setOauthToken(String oauthToken) {
      return (AddOffer) super.setOauthToken(oauthToken);
    }

    @Override
    public AddOffer setPrettyPrint(Boolean prettyPrint) {
      return (AddOffer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddOffer setQuotaUser(String quotaUser) {
      return (AddOffer) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddOffer setUserIp(String userIp) {
      return (AddOffer) super.setUserIp(userIp);
    }

    @Override
    public AddOffer set(String parameterName, Object value) {
      return (AddOffer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "autoComplete".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link AutoComplete#execute()} method to invoke the remote
   * operation.
   *
   * @param keyword
   * @return the request
   */
  public AutoComplete autoComplete(String keyword) throws java.io.IOException {
    AutoComplete result = new AutoComplete(keyword);
    initialize(result);
    return result;
  }

  public class AutoComplete extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.AreaCollection> {

    private static final String REST_PATH = "autoComplete/{keyword}";

    /**
     * Create a request for the method "autoComplete".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link AutoComplete#execute()} method to invoke the remote
     * operation. <p> {@link
     * AutoComplete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param keyword
     * @since 1.13
     */
    protected AutoComplete(String keyword) {
      super(PropertyEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.AreaCollection.class);
      this.keyword = com.google.api.client.util.Preconditions.checkNotNull(keyword, "Required parameter keyword must be specified.");
    }

    @Override
    public AutoComplete setAlt(String alt) {
      return (AutoComplete) super.setAlt(alt);
    }

    @Override
    public AutoComplete setFields(String fields) {
      return (AutoComplete) super.setFields(fields);
    }

    @Override
    public AutoComplete setKey(String key) {
      return (AutoComplete) super.setKey(key);
    }

    @Override
    public AutoComplete setOauthToken(String oauthToken) {
      return (AutoComplete) super.setOauthToken(oauthToken);
    }

    @Override
    public AutoComplete setPrettyPrint(Boolean prettyPrint) {
      return (AutoComplete) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AutoComplete setQuotaUser(String quotaUser) {
      return (AutoComplete) super.setQuotaUser(quotaUser);
    }

    @Override
    public AutoComplete setUserIp(String userIp) {
      return (AutoComplete) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private String keyword;

    /**

     */
    public String getKeyword() {
      return keyword;
    }

    public AutoComplete setKeyword(String keyword) {
      this.keyword = keyword;
      return this;
    }

    @com.google.api.client.util.Key
    private Long cityId;

    /**

     */
    public Long getCityId() {
      return cityId;
    }

    public AutoComplete setCityId(Long cityId) {
      this.cityId = cityId;
      return this;
    }

    @Override
    public AutoComplete set(String parameterName, Object value) {
      return (AutoComplete) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteOffer".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link DeleteOffer#execute()} method to invoke the remote
   * operation.
   *
   * @param projectId
   * @return the request
   */
  public DeleteOffer deleteOffer(Long projectId) throws java.io.IOException {
    DeleteOffer result = new DeleteOffer(projectId);
    initialize(result);
    return result;
  }

  public class DeleteOffer extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "offer/{projectId}";

    /**
     * Create a request for the method "deleteOffer".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link DeleteOffer#execute()} method to invoke the remote
     * operation. <p> {@link
     * DeleteOffer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param projectId
     * @since 1.13
     */
    protected DeleteOffer(Long projectId) {
      super(PropertyEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.CommonResponse.class);
      this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
    }

    @Override
    public DeleteOffer setAlt(String alt) {
      return (DeleteOffer) super.setAlt(alt);
    }

    @Override
    public DeleteOffer setFields(String fields) {
      return (DeleteOffer) super.setFields(fields);
    }

    @Override
    public DeleteOffer setKey(String key) {
      return (DeleteOffer) super.setKey(key);
    }

    @Override
    public DeleteOffer setOauthToken(String oauthToken) {
      return (DeleteOffer) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteOffer setPrettyPrint(Boolean prettyPrint) {
      return (DeleteOffer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteOffer setQuotaUser(String quotaUser) {
      return (DeleteOffer) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteOffer setUserIp(String userIp) {
      return (DeleteOffer) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long projectId;

    /**

     */
    public Long getProjectId() {
      return projectId;
    }

    public DeleteOffer setProjectId(Long projectId) {
      this.projectId = projectId;
      return this;
    }

    @Override
    public DeleteOffer set(String parameterName, Object value) {
      return (DeleteOffer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "enquirySendOtp".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link EnquirySendOtp#execute()} method to invoke the remote
   * operation.
   *
   * @param phoneNumber
   * @return the request
   */
  public EnquirySendOtp enquirySendOtp(String phoneNumber) throws java.io.IOException {
    EnquirySendOtp result = new EnquirySendOtp(phoneNumber);
    initialize(result);
    return result;
  }

  public class EnquirySendOtp extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.SendOTPToPhoneNumberResponse> {

    private static final String REST_PATH = "enquirySendOtp/{phoneNumber}";

    /**
     * Create a request for the method "enquirySendOtp".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link EnquirySendOtp#execute()} method to invoke the remote
     * operation. <p> {@link EnquirySendOtp#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param phoneNumber
     * @since 1.13
     */
    protected EnquirySendOtp(String phoneNumber) {
      super(PropertyEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.SendOTPToPhoneNumberResponse.class);
      this.phoneNumber = com.google.api.client.util.Preconditions.checkNotNull(phoneNumber, "Required parameter phoneNumber must be specified.");
    }

    @Override
    public EnquirySendOtp setAlt(String alt) {
      return (EnquirySendOtp) super.setAlt(alt);
    }

    @Override
    public EnquirySendOtp setFields(String fields) {
      return (EnquirySendOtp) super.setFields(fields);
    }

    @Override
    public EnquirySendOtp setKey(String key) {
      return (EnquirySendOtp) super.setKey(key);
    }

    @Override
    public EnquirySendOtp setOauthToken(String oauthToken) {
      return (EnquirySendOtp) super.setOauthToken(oauthToken);
    }

    @Override
    public EnquirySendOtp setPrettyPrint(Boolean prettyPrint) {
      return (EnquirySendOtp) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public EnquirySendOtp setQuotaUser(String quotaUser) {
      return (EnquirySendOtp) super.setQuotaUser(quotaUser);
    }

    @Override
    public EnquirySendOtp setUserIp(String userIp) {
      return (EnquirySendOtp) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private String phoneNumber;

    /**

     */
    public String getPhoneNumber() {
      return phoneNumber;
    }

    public EnquirySendOtp setPhoneNumber(String phoneNumber) {
      this.phoneNumber = phoneNumber;
      return this;
    }

    @com.google.api.client.util.Key
    private String email;

    /**

     */
    public String getEmail() {
      return email;
    }

    public EnquirySendOtp setEmail(String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private String name;

    /**

     */
    public String getName() {
      return name;
    }

    public EnquirySendOtp setName(String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private String countrySTDCode;

    /**

     */
    public String getCountrySTDCode() {
      return countrySTDCode;
    }

    public EnquirySendOtp setCountrySTDCode(String countrySTDCode) {
      this.countrySTDCode = countrySTDCode;
      return this;
    }

    @com.google.api.client.util.Key
    private Long projectId;

    /**

     */
    public Long getProjectId() {
      return projectId;
    }

    public EnquirySendOtp setProjectId(Long projectId) {
      this.projectId = projectId;
      return this;
    }

    @com.google.api.client.util.Key
    private String projectName;

    /**

     */
    public String getProjectName() {
      return projectName;
    }

    public EnquirySendOtp setProjectName(String projectName) {
      this.projectName = projectName;
      return this;
    }

    @com.google.api.client.util.Key
    private Long cityId;

    /**

     */
    public Long getCityId() {
      return cityId;
    }

    public EnquirySendOtp setCityId(Long cityId) {
      this.cityId = cityId;
      return this;
    }

    @com.google.api.client.util.Key
    private String cityName;

    /**

     */
    public String getCityName() {
      return cityName;
    }

    public EnquirySendOtp setCityName(String cityName) {
      this.cityName = cityName;
      return this;
    }

    @com.google.api.client.util.Key
    private String source;

    /**

     */
    public String getSource() {
      return source;
    }

    public EnquirySendOtp setSource(String source) {
      this.source = source;
      return this;
    }

    @com.google.api.client.util.Key("utm_source")
    private String utmSource;

    /**

     */
    public String getUtmSource() {
      return utmSource;
    }

    public EnquirySendOtp setUtmSource(String utmSource) {
      this.utmSource = utmSource;
      return this;
    }

    @com.google.api.client.util.Key("utm_medium")
    private String utmMedium;

    /**

     */
    public String getUtmMedium() {
      return utmMedium;
    }

    public EnquirySendOtp setUtmMedium(String utmMedium) {
      this.utmMedium = utmMedium;
      return this;
    }

    @com.google.api.client.util.Key("utm_campaign")
    private String utmCampaign;

    /**

     */
    public String getUtmCampaign() {
      return utmCampaign;
    }

    public EnquirySendOtp setUtmCampaign(String utmCampaign) {
      this.utmCampaign = utmCampaign;
      return this;
    }

    @com.google.api.client.util.Key("utm_adgroup")
    private String utmAdgroup;

    /**

     */
    public String getUtmAdgroup() {
      return utmAdgroup;
    }

    public EnquirySendOtp setUtmAdgroup(String utmAdgroup) {
      this.utmAdgroup = utmAdgroup;
      return this;
    }

    @com.google.api.client.util.Key("utm_network")
    private String utmNetwork;

    /**

     */
    public String getUtmNetwork() {
      return utmNetwork;
    }

    public EnquirySendOtp setUtmNetwork(String utmNetwork) {
      this.utmNetwork = utmNetwork;
      return this;
    }

    @com.google.api.client.util.Key("utm_site_target")
    private String utmSiteTarget;

    /**

     */
    public String getUtmSiteTarget() {
      return utmSiteTarget;
    }

    public EnquirySendOtp setUtmSiteTarget(String utmSiteTarget) {
      this.utmSiteTarget = utmSiteTarget;
      return this;
    }

    @com.google.api.client.util.Key("utm_device")
    private String utmDevice;

    /**

     */
    public String getUtmDevice() {
      return utmDevice;
    }

    public EnquirySendOtp setUtmDevice(String utmDevice) {
      this.utmDevice = utmDevice;
      return this;
    }

    @com.google.api.client.util.Key("utm_term")
    private String utmTerm;

    /**

     */
    public String getUtmTerm() {
      return utmTerm;
    }

    public EnquirySendOtp setUtmTerm(String utmTerm) {
      this.utmTerm = utmTerm;
      return this;
    }

    @com.google.api.client.util.Key("utm_content")
    private String utmContent;

    /**

     */
    public String getUtmContent() {
      return utmContent;
    }

    public EnquirySendOtp setUtmContent(String utmContent) {
      this.utmContent = utmContent;
      return this;
    }

    @com.google.api.client.util.Key("utm_campaign_id")
    private String utmCampaignId;

    /**

     */
    public String getUtmCampaignId() {
      return utmCampaignId;
    }

    public EnquirySendOtp setUtmCampaignId(String utmCampaignId) {
      this.utmCampaignId = utmCampaignId;
      return this;
    }

    @com.google.api.client.util.Key("utm_account_id")
    private String utmAccountId;

    /**

     */
    public String getUtmAccountId() {
      return utmAccountId;
    }

    public EnquirySendOtp setUtmAccountId(String utmAccountId) {
      this.utmAccountId = utmAccountId;
      return this;
    }

    @com.google.api.client.util.Key("utm_sub_source")
    private String utmSubSource;

    /**

     */
    public String getUtmSubSource() {
      return utmSubSource;
    }

    public EnquirySendOtp setUtmSubSource(String utmSubSource) {
      this.utmSubSource = utmSubSource;
      return this;
    }

    @Override
    public EnquirySendOtp set(String parameterName, Object value) {
      return (EnquirySendOtp) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getBuilderList".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetBuilderList#execute()} method to invoke the remote
   * operation.
   *
   * @param agntId
   * @param token
   * @return the request
   */
  public GetBuilderList getBuilderList(Long agntId, String token) throws java.io.IOException {
    GetBuilderList result = new GetBuilderList(agntId, token);
    initialize(result);
    return result;
  }

  public class GetBuilderList extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.BuilderCollection> {

    private static final String REST_PATH = "buildercollection/{agntId}/{token}";

    /**
     * Create a request for the method "getBuilderList".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetBuilderList#execute()} method to invoke the remote
     * operation. <p> {@link GetBuilderList#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param agntId
     * @param token
     * @since 1.13
     */
    protected GetBuilderList(Long agntId, String token) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.BuilderCollection.class);
      this.agntId = com.google.api.client.util.Preconditions.checkNotNull(agntId, "Required parameter agntId must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetBuilderList setAlt(String alt) {
      return (GetBuilderList) super.setAlt(alt);
    }

    @Override
    public GetBuilderList setFields(String fields) {
      return (GetBuilderList) super.setFields(fields);
    }

    @Override
    public GetBuilderList setKey(String key) {
      return (GetBuilderList) super.setKey(key);
    }

    @Override
    public GetBuilderList setOauthToken(String oauthToken) {
      return (GetBuilderList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetBuilderList setPrettyPrint(Boolean prettyPrint) {
      return (GetBuilderList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetBuilderList setQuotaUser(String quotaUser) {
      return (GetBuilderList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetBuilderList setUserIp(String userIp) {
      return (GetBuilderList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long agntId;

    /**

     */
    public Long getAgntId() {
      return agntId;
    }

    public GetBuilderList setAgntId(Long agntId) {
      this.agntId = agntId;
      return this;
    }

    @com.google.api.client.util.Key
    private String token;

    /**

     */
    public String getToken() {
      return token;
    }

    public GetBuilderList setToken(String token) {
      this.token = token;
      return this;
    }

    @Override
    public GetBuilderList set(String parameterName, Object value) {
      return (GetBuilderList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getFooterLink".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetFooterLink#execute()} method to invoke the remote
   * operation.
   *
   * @param cityId
   * @return the request
   */
  public GetFooterLink getFooterLink(Long cityId) throws java.io.IOException {
    GetFooterLink result = new GetFooterLink(cityId);
    initialize(result);
    return result;
  }

  public class GetFooterLink extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.FooterLinkListResponse> {

    private static final String REST_PATH = "footerlinklistresponse/{cityId}";

    /**
     * Create a request for the method "getFooterLink".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetFooterLink#execute()} method to invoke the remote
     * operation. <p> {@link GetFooterLink#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param cityId
     * @since 1.13
     */
    protected GetFooterLink(Long cityId) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.FooterLinkListResponse.class);
      this.cityId = com.google.api.client.util.Preconditions.checkNotNull(cityId, "Required parameter cityId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetFooterLink setAlt(String alt) {
      return (GetFooterLink) super.setAlt(alt);
    }

    @Override
    public GetFooterLink setFields(String fields) {
      return (GetFooterLink) super.setFields(fields);
    }

    @Override
    public GetFooterLink setKey(String key) {
      return (GetFooterLink) super.setKey(key);
    }

    @Override
    public GetFooterLink setOauthToken(String oauthToken) {
      return (GetFooterLink) super.setOauthToken(oauthToken);
    }

    @Override
    public GetFooterLink setPrettyPrint(Boolean prettyPrint) {
      return (GetFooterLink) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetFooterLink setQuotaUser(String quotaUser) {
      return (GetFooterLink) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetFooterLink setUserIp(String userIp) {
      return (GetFooterLink) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long cityId;

    /**

     */
    public Long getCityId() {
      return cityId;
    }

    public GetFooterLink setCityId(Long cityId) {
      this.cityId = cityId;
      return this;
    }

    @Override
    public GetFooterLink set(String parameterName, Object value) {
      return (GetFooterLink) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMicroSitesProjectList".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetMicroSitesProjectList#execute()} method to invoke the
   * remote operation.
   *
   * @param id
   * @param token
   * @param microSiteType
   * @return the request
   */
  public GetMicroSitesProjectList getMicroSitesProjectList(Long id, String token, String microSiteType) throws java.io.IOException {
    GetMicroSitesProjectList result = new GetMicroSitesProjectList(id, token, microSiteType);
    initialize(result);
    return result;
  }

  public class GetMicroSitesProjectList extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.MicroSiteProjectListResponse> {

    private static final String REST_PATH = "micrositeprojectlistresponse/{id}/{token}/{microSiteType}";

    /**
     * Create a request for the method "getMicroSitesProjectList".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetMicroSitesProjectList#execute()} method to invoke the
     * remote operation. <p> {@link GetMicroSitesProjectList#initialize(com.google.api.client.googleap
     * is.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param microSiteType
     * @since 1.13
     */
    protected GetMicroSitesProjectList(Long id, String token, String microSiteType) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.MicroSiteProjectListResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
      this.microSiteType = com.google.api.client.util.Preconditions.checkNotNull(microSiteType, "Required parameter microSiteType must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMicroSitesProjectList setAlt(String alt) {
      return (GetMicroSitesProjectList) super.setAlt(alt);
    }

    @Override
    public GetMicroSitesProjectList setFields(String fields) {
      return (GetMicroSitesProjectList) super.setFields(fields);
    }

    @Override
    public GetMicroSitesProjectList setKey(String key) {
      return (GetMicroSitesProjectList) super.setKey(key);
    }

    @Override
    public GetMicroSitesProjectList setOauthToken(String oauthToken) {
      return (GetMicroSitesProjectList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMicroSitesProjectList setPrettyPrint(Boolean prettyPrint) {
      return (GetMicroSitesProjectList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMicroSitesProjectList setQuotaUser(String quotaUser) {
      return (GetMicroSitesProjectList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMicroSitesProjectList setUserIp(String userIp) {
      return (GetMicroSitesProjectList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long id;

    /**

     */
    public Long getId() {
      return id;
    }

    public GetMicroSitesProjectList setId(Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private String token;

    /**

     */
    public String getToken() {
      return token;
    }

    public GetMicroSitesProjectList setToken(String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private String microSiteType;

    /**

     */
    public String getMicroSiteType() {
      return microSiteType;
    }

    public GetMicroSitesProjectList setMicroSiteType(String microSiteType) {
      this.microSiteType = microSiteType;
      return this;
    }

    @Override
    public GetMicroSitesProjectList set(String parameterName, Object value) {
      return (GetMicroSitesProjectList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMicroSitesProperties".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetMicroSitesProperties#execute()} method to invoke the
   * remote operation.
   *
   * @param microSiteType
   * @return the request
   */
  public GetMicroSitesProperties getMicroSitesProperties(String microSiteType) throws java.io.IOException {
    GetMicroSitesProperties result = new GetMicroSitesProperties(microSiteType);
    initialize(result);
    return result;
  }

  public class GetMicroSitesProperties extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.MicroSitePropertySearchResponse> {

    private static final String REST_PATH = "micrositepropertysearchresponse/{microSiteType}";

    /**
     * Create a request for the method "getMicroSitesProperties".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetMicroSitesProperties#execute()} method to invoke the
     * remote operation. <p> {@link GetMicroSitesProperties#initialize(com.google.api.client.googleapi
     * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param microSiteType
     * @since 1.13
     */
    protected GetMicroSitesProperties(String microSiteType) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.MicroSitePropertySearchResponse.class);
      this.microSiteType = com.google.api.client.util.Preconditions.checkNotNull(microSiteType, "Required parameter microSiteType must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMicroSitesProperties setAlt(String alt) {
      return (GetMicroSitesProperties) super.setAlt(alt);
    }

    @Override
    public GetMicroSitesProperties setFields(String fields) {
      return (GetMicroSitesProperties) super.setFields(fields);
    }

    @Override
    public GetMicroSitesProperties setKey(String key) {
      return (GetMicroSitesProperties) super.setKey(key);
    }

    @Override
    public GetMicroSitesProperties setOauthToken(String oauthToken) {
      return (GetMicroSitesProperties) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMicroSitesProperties setPrettyPrint(Boolean prettyPrint) {
      return (GetMicroSitesProperties) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMicroSitesProperties setQuotaUser(String quotaUser) {
      return (GetMicroSitesProperties) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMicroSitesProperties setUserIp(String userIp) {
      return (GetMicroSitesProperties) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private String microSiteType;

    /**

     */
    public String getMicroSiteType() {
      return microSiteType;
    }

    public GetMicroSitesProperties setMicroSiteType(String microSiteType) {
      this.microSiteType = microSiteType;
      return this;
    }

    @com.google.api.client.util.Key
    private Long cityId;

    /**

     */
    public Long getCityId() {
      return cityId;
    }

    public GetMicroSitesProperties setCityId(Long cityId) {
      this.cityId = cityId;
      return this;
    }

    @com.google.api.client.util.Key
    private Long requestId;

    /**

     */
    public Long getRequestId() {
      return requestId;
    }

    public GetMicroSitesProperties setRequestId(Long requestId) {
      this.requestId = requestId;
      return this;
    }

    @Override
    public GetMicroSitesProperties set(String parameterName, Object value) {
      return (GetMicroSitesProperties) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getNearby".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetNearby#execute()} method to invoke the remote operation.
   *
   * @param latitude
   * @param longitude
   * @param nearbyType
   * @return the request
   */
  public GetNearby getNearby(Double latitude, Double longitude, String nearbyType) throws java.io.IOException {
    GetNearby result = new GetNearby(latitude, longitude, nearbyType);
    initialize(result);
    return result;
  }

  public class GetNearby extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.NearbyResponse> {

    private static final String REST_PATH = "nearbyresponse/{latitude}/{longitude}/{nearbyType}";

    /**
     * Create a request for the method "getNearby".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetNearby#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetNearby#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param latitude
     * @param longitude
     * @param nearbyType
     * @since 1.13
     */
    protected GetNearby(Double latitude, Double longitude, String nearbyType) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.NearbyResponse.class);
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.longitude = com.google.api.client.util.Preconditions.checkNotNull(longitude, "Required parameter longitude must be specified.");
      this.nearbyType = com.google.api.client.util.Preconditions.checkNotNull(nearbyType, "Required parameter nearbyType must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetNearby setAlt(String alt) {
      return (GetNearby) super.setAlt(alt);
    }

    @Override
    public GetNearby setFields(String fields) {
      return (GetNearby) super.setFields(fields);
    }

    @Override
    public GetNearby setKey(String key) {
      return (GetNearby) super.setKey(key);
    }

    @Override
    public GetNearby setOauthToken(String oauthToken) {
      return (GetNearby) super.setOauthToken(oauthToken);
    }

    @Override
    public GetNearby setPrettyPrint(Boolean prettyPrint) {
      return (GetNearby) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetNearby setQuotaUser(String quotaUser) {
      return (GetNearby) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetNearby setUserIp(String userIp) {
      return (GetNearby) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Double latitude;

    /**

     */
    public Double getLatitude() {
      return latitude;
    }

    public GetNearby setLatitude(Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private Double longitude;

    /**

     */
    public Double getLongitude() {
      return longitude;
    }

    public GetNearby setLongitude(Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @com.google.api.client.util.Key
    private String nearbyType;

    /**

     */
    public String getNearbyType() {
      return nearbyType;
    }

    public GetNearby setNearbyType(String nearbyType) {
      this.nearbyType = nearbyType;
      return this;
    }

    @Override
    public GetNearby set(String parameterName, Object value) {
      return (GetNearby) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getOfferProjectList".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetOfferProjectList#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetOfferProjectList getOfferProjectList() throws java.io.IOException {
    GetOfferProjectList result = new GetOfferProjectList();
    initialize(result);
    return result;
  }

  public class GetOfferProjectList extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.GetProjectListResponse> {

    private static final String REST_PATH = "getprojectlistresponse";

    /**
     * Create a request for the method "getOfferProjectList".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetOfferProjectList#execute()} method to invoke the remote
     * operation. <p> {@link GetOfferProjectList#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetOfferProjectList() {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.GetProjectListResponse.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetOfferProjectList setAlt(String alt) {
      return (GetOfferProjectList) super.setAlt(alt);
    }

    @Override
    public GetOfferProjectList setFields(String fields) {
      return (GetOfferProjectList) super.setFields(fields);
    }

    @Override
    public GetOfferProjectList setKey(String key) {
      return (GetOfferProjectList) super.setKey(key);
    }

    @Override
    public GetOfferProjectList setOauthToken(String oauthToken) {
      return (GetOfferProjectList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetOfferProjectList setPrettyPrint(Boolean prettyPrint) {
      return (GetOfferProjectList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetOfferProjectList setQuotaUser(String quotaUser) {
      return (GetOfferProjectList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetOfferProjectList setUserIp(String userIp) {
      return (GetOfferProjectList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Integer limitCount;

    /**

     */
    public Integer getLimitCount() {
      return limitCount;
    }

    public GetOfferProjectList setLimitCount(Integer limitCount) {
      this.limitCount = limitCount;
      return this;
    }

    @com.google.api.client.util.Key
    private String offerFilter;

    /**

     */
    public String getOfferFilter() {
      return offerFilter;
    }

    public GetOfferProjectList setOfferFilter(String offerFilter) {
      this.offerFilter = offerFilter;
      return this;
    }

    @com.google.api.client.util.Key
    private Integer lastCount;

    /**

     */
    public Integer getLastCount() {
      return lastCount;
    }

    public GetOfferProjectList setLastCount(Integer lastCount) {
      this.lastCount = lastCount;
      return this;
    }

    @Override
    public GetOfferProjectList set(String parameterName, Object value) {
      return (GetOfferProjectList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getOurPickProjects".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetOurPickProjects#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetOurPickProjects getOurPickProjects() throws java.io.IOException {
    GetOurPickProjects result = new GetOurPickProjects();
    initialize(result);
    return result;
  }

  public class GetOurPickProjects extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.PropertySearchResponse> {

    private static final String REST_PATH = "propertysearchresponse";

    /**
     * Create a request for the method "getOurPickProjects".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetOurPickProjects#execute()} method to invoke the remote
     * operation. <p> {@link GetOurPickProjects#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetOurPickProjects() {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.PropertySearchResponse.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetOurPickProjects setAlt(String alt) {
      return (GetOurPickProjects) super.setAlt(alt);
    }

    @Override
    public GetOurPickProjects setFields(String fields) {
      return (GetOurPickProjects) super.setFields(fields);
    }

    @Override
    public GetOurPickProjects setKey(String key) {
      return (GetOurPickProjects) super.setKey(key);
    }

    @Override
    public GetOurPickProjects setOauthToken(String oauthToken) {
      return (GetOurPickProjects) super.setOauthToken(oauthToken);
    }

    @Override
    public GetOurPickProjects setPrettyPrint(Boolean prettyPrint) {
      return (GetOurPickProjects) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetOurPickProjects setQuotaUser(String quotaUser) {
      return (GetOurPickProjects) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetOurPickProjects setUserIp(String userIp) {
      return (GetOurPickProjects) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private String city;

    /**

     */
    public String getCity() {
      return city;
    }

    public GetOurPickProjects setCity(String city) {
      this.city = city;
      return this;
    }

    @com.google.api.client.util.Key
    private String browserVersion;

    /**

     */
    public String getBrowserVersion() {
      return browserVersion;
    }

    public GetOurPickProjects setBrowserVersion(String browserVersion) {
      this.browserVersion = browserVersion;
      return this;
    }

    @com.google.api.client.util.Key
    private Boolean topCityProjects;

    /**

     */
    public Boolean getTopCityProjects() {
      return topCityProjects;
    }

    public GetOurPickProjects setTopCityProjects(Boolean topCityProjects) {
      this.topCityProjects = topCityProjects;
      return this;
    }

    @com.google.api.client.util.Key
    private String browserType;

    /**

     */
    public String getBrowserType() {
      return browserType;
    }

    public GetOurPickProjects setBrowserType(String browserType) {
      this.browserType = browserType;
      return this;
    }

    @com.google.api.client.util.Key
    private Long userId;

    /**

     */
    public Long getUserId() {
      return userId;
    }

    public GetOurPickProjects setUserId(Long userId) {
      this.userId = userId;
      return this;
    }

    @com.google.api.client.util.Key
    private String appVersion;

    /**

     */
    public String getAppVersion() {
      return appVersion;
    }

    public GetOurPickProjects setAppVersion(String appVersion) {
      this.appVersion = appVersion;
      return this;
    }

    @com.google.api.client.util.Key
    private Long cityId;

    /**

     */
    public Long getCityId() {
      return cityId;
    }

    public GetOurPickProjects setCityId(Long cityId) {
      this.cityId = cityId;
      return this;
    }

    @com.google.api.client.util.Key
    private String source;

    /**

     */
    public String getSource() {
      return source;
    }

    public GetOurPickProjects setSource(String source) {
      this.source = source;
      return this;
    }

    @com.google.api.client.util.Key
    private Long requestId;

    /**

     */
    public Long getRequestId() {
      return requestId;
    }

    public GetOurPickProjects setRequestId(Long requestId) {
      this.requestId = requestId;
      return this;
    }

    @com.google.api.client.util.Key
    private Boolean requiredPopularProject;

    /**

     */
    public Boolean getRequiredPopularProject() {
      return requiredPopularProject;
    }

    public GetOurPickProjects setRequiredPopularProject(Boolean requiredPopularProject) {
      this.requiredPopularProject = requiredPopularProject;
      return this;
    }

    @com.google.api.client.util.Key
    private Long virtualId;

    /**

     */
    public Long getVirtualId() {
      return virtualId;
    }

    public GetOurPickProjects setVirtualId(Long virtualId) {
      this.virtualId = virtualId;
      return this;
    }

    @com.google.api.client.util.Key
    private String browser;

    /**

     */
    public String getBrowser() {
      return browser;
    }

    public GetOurPickProjects setBrowser(String browser) {
      this.browser = browser;
      return this;
    }

    @Override
    public GetOurPickProjects set(String parameterName, Object value) {
      return (GetOurPickProjects) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getProjectBuilderListCityWise".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetProjectBuilderListCityWise#execute()} method to invoke
   * the remote operation.
   *
   * @param cityId
   * @return the request
   */
  public GetProjectBuilderListCityWise getProjectBuilderListCityWise(Long cityId) throws java.io.IOException {
    GetProjectBuilderListCityWise result = new GetProjectBuilderListCityWise(cityId);
    initialize(result);
    return result;
  }

  public class GetProjectBuilderListCityWise extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.ProjectCollection> {

    private static final String REST_PATH = "projectcollection/{cityId}";

    /**
     * Create a request for the method "getProjectBuilderListCityWise".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetProjectBuilderListCityWise#execute()} method to invoke
     * the remote operation. <p> {@link GetProjectBuilderListCityWise#initialize(com.google.api.client
     * .googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param cityId
     * @since 1.13
     */
    protected GetProjectBuilderListCityWise(Long cityId) {
      super(PropertyEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.ProjectCollection.class);
      this.cityId = com.google.api.client.util.Preconditions.checkNotNull(cityId, "Required parameter cityId must be specified.");
    }

    @Override
    public GetProjectBuilderListCityWise setAlt(String alt) {
      return (GetProjectBuilderListCityWise) super.setAlt(alt);
    }

    @Override
    public GetProjectBuilderListCityWise setFields(String fields) {
      return (GetProjectBuilderListCityWise) super.setFields(fields);
    }

    @Override
    public GetProjectBuilderListCityWise setKey(String key) {
      return (GetProjectBuilderListCityWise) super.setKey(key);
    }

    @Override
    public GetProjectBuilderListCityWise setOauthToken(String oauthToken) {
      return (GetProjectBuilderListCityWise) super.setOauthToken(oauthToken);
    }

    @Override
    public GetProjectBuilderListCityWise setPrettyPrint(Boolean prettyPrint) {
      return (GetProjectBuilderListCityWise) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetProjectBuilderListCityWise setQuotaUser(String quotaUser) {
      return (GetProjectBuilderListCityWise) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetProjectBuilderListCityWise setUserIp(String userIp) {
      return (GetProjectBuilderListCityWise) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long cityId;

    /**

     */
    public Long getCityId() {
      return cityId;
    }

    public GetProjectBuilderListCityWise setCityId(Long cityId) {
      this.cityId = cityId;
      return this;
    }

    @com.google.api.client.util.Key
    private String city;

    /**

     */
    public String getCity() {
      return city;
    }

    public GetProjectBuilderListCityWise setCity(String city) {
      this.city = city;
      return this;
    }

    @Override
    public GetProjectBuilderListCityWise set(String parameterName, Object value) {
      return (GetProjectBuilderListCityWise) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getProjectDetail".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetProjectDetail#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetProjectDetail getProjectDetail(Long id) throws java.io.IOException {
    GetProjectDetail result = new GetProjectDetail(id);
    initialize(result);
    return result;
  }

  public class GetProjectDetail extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.GetProjectDetailResponse> {

    private static final String REST_PATH = "getprojectdetailresponse/{Id}";

    /**
     * Create a request for the method "getProjectDetail".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetProjectDetail#execute()} method to invoke the remote
     * operation. <p> {@link GetProjectDetail#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetProjectDetail(Long id) {
      super(PropertyEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.GetProjectDetailResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public GetProjectDetail setAlt(String alt) {
      return (GetProjectDetail) super.setAlt(alt);
    }

    @Override
    public GetProjectDetail setFields(String fields) {
      return (GetProjectDetail) super.setFields(fields);
    }

    @Override
    public GetProjectDetail setKey(String key) {
      return (GetProjectDetail) super.setKey(key);
    }

    @Override
    public GetProjectDetail setOauthToken(String oauthToken) {
      return (GetProjectDetail) super.setOauthToken(oauthToken);
    }

    @Override
    public GetProjectDetail setPrettyPrint(Boolean prettyPrint) {
      return (GetProjectDetail) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetProjectDetail setQuotaUser(String quotaUser) {
      return (GetProjectDetail) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetProjectDetail setUserIp(String userIp) {
      return (GetProjectDetail) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private Long id;

    /**

     */
    public Long getId() {
      return id;
    }

    public GetProjectDetail setId(Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private Boolean isPreview;

    /**

     */
    public Boolean getIsPreview() {
      return isPreview;
    }

    public GetProjectDetail setIsPreview(Boolean isPreview) {
      this.isPreview = isPreview;
      return this;
    }

    @com.google.api.client.util.Key
    private Long userId;

    /**

     */
    public Long getUserId() {
      return userId;
    }

    public GetProjectDetail setUserId(Long userId) {
      this.userId = userId;
      return this;
    }

    @Override
    public GetProjectDetail set(String parameterName, Object value) {
      return (GetProjectDetail) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getProjectDetails".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetProjectDetails#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetProjectDetails getProjectDetails(Long id) throws java.io.IOException {
    GetProjectDetails result = new GetProjectDetails(id);
    initialize(result);
    return result;
  }

  public class GetProjectDetails extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.GetProjectDetailResponse> {

    private static final String REST_PATH = "getprojectdetailresponse/{Id}";

    /**
     * Create a request for the method "getProjectDetails".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetProjectDetails#execute()} method to invoke the remote
     * operation. <p> {@link GetProjectDetails#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetProjectDetails(Long id) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.GetProjectDetailResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetProjectDetails setAlt(String alt) {
      return (GetProjectDetails) super.setAlt(alt);
    }

    @Override
    public GetProjectDetails setFields(String fields) {
      return (GetProjectDetails) super.setFields(fields);
    }

    @Override
    public GetProjectDetails setKey(String key) {
      return (GetProjectDetails) super.setKey(key);
    }

    @Override
    public GetProjectDetails setOauthToken(String oauthToken) {
      return (GetProjectDetails) super.setOauthToken(oauthToken);
    }

    @Override
    public GetProjectDetails setPrettyPrint(Boolean prettyPrint) {
      return (GetProjectDetails) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetProjectDetails setQuotaUser(String quotaUser) {
      return (GetProjectDetails) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetProjectDetails setUserIp(String userIp) {
      return (GetProjectDetails) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private Long id;

    /**

     */
    public Long getId() {
      return id;
    }

    public GetProjectDetails setId(Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private Boolean isPreview;

    /**

     */
    public Boolean getIsPreview() {
      return isPreview;
    }

    public GetProjectDetails setIsPreview(Boolean isPreview) {
      this.isPreview = isPreview;
      return this;
    }

    @com.google.api.client.util.Key
    private Long userId;

    /**

     */
    public Long getUserId() {
      return userId;
    }

    public GetProjectDetails setUserId(Long userId) {
      this.userId = userId;
      return this;
    }

    @Override
    public GetProjectDetails set(String parameterName, Object value) {
      return (GetProjectDetails) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getProjectInfo".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetProjectInfo#execute()} method to invoke the remote
   * operation.
   *
   * @param prjId
   * @param needFullInfo
   * @return the request
   */
  public GetProjectInfo getProjectInfo(Long prjId, Boolean needFullInfo) throws java.io.IOException {
    GetProjectInfo result = new GetProjectInfo(prjId, needFullInfo);
    initialize(result);
    return result;
  }

  public class GetProjectInfo extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.Project> {

    private static final String REST_PATH = "project/{prjId}/{needFullInfo}";

    /**
     * Create a request for the method "getProjectInfo".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetProjectInfo#execute()} method to invoke the remote
     * operation. <p> {@link GetProjectInfo#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param prjId
     * @param needFullInfo
     * @since 1.13
     */
    protected GetProjectInfo(Long prjId, Boolean needFullInfo) {
      super(PropertyEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.Project.class);
      this.prjId = com.google.api.client.util.Preconditions.checkNotNull(prjId, "Required parameter prjId must be specified.");
      this.needFullInfo = com.google.api.client.util.Preconditions.checkNotNull(needFullInfo, "Required parameter needFullInfo must be specified.");
    }

    @Override
    public GetProjectInfo setAlt(String alt) {
      return (GetProjectInfo) super.setAlt(alt);
    }

    @Override
    public GetProjectInfo setFields(String fields) {
      return (GetProjectInfo) super.setFields(fields);
    }

    @Override
    public GetProjectInfo setKey(String key) {
      return (GetProjectInfo) super.setKey(key);
    }

    @Override
    public GetProjectInfo setOauthToken(String oauthToken) {
      return (GetProjectInfo) super.setOauthToken(oauthToken);
    }

    @Override
    public GetProjectInfo setPrettyPrint(Boolean prettyPrint) {
      return (GetProjectInfo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetProjectInfo setQuotaUser(String quotaUser) {
      return (GetProjectInfo) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetProjectInfo setUserIp(String userIp) {
      return (GetProjectInfo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long prjId;

    /**

     */
    public Long getPrjId() {
      return prjId;
    }

    public GetProjectInfo setPrjId(Long prjId) {
      this.prjId = prjId;
      return this;
    }

    @com.google.api.client.util.Key
    private Boolean needFullInfo;

    /**

     */
    public Boolean getNeedFullInfo() {
      return needFullInfo;
    }

    public GetProjectInfo setNeedFullInfo(Boolean needFullInfo) {
      this.needFullInfo = needFullInfo;
      return this;
    }

    @Override
    public GetProjectInfo set(String parameterName, Object value) {
      return (GetProjectInfo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getProjectList".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetProjectList#execute()} method to invoke the remote
   * operation.
   *
   * @param lastCount
   * @param limitCount
   * @return the request
   */
  public GetProjectList getProjectList(Integer lastCount, Integer limitCount) throws java.io.IOException {
    GetProjectList result = new GetProjectList(lastCount, limitCount);
    initialize(result);
    return result;
  }

  public class GetProjectList extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.GetProjectListResponse> {

    private static final String REST_PATH = "getprojectlistresponse/{lastCount}/{limitCount}";

    /**
     * Create a request for the method "getProjectList".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetProjectList#execute()} method to invoke the remote
     * operation. <p> {@link GetProjectList#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param lastCount
     * @param limitCount
     * @since 1.13
     */
    protected GetProjectList(Integer lastCount, Integer limitCount) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.GetProjectListResponse.class);
      this.lastCount = com.google.api.client.util.Preconditions.checkNotNull(lastCount, "Required parameter lastCount must be specified.");
      this.limitCount = com.google.api.client.util.Preconditions.checkNotNull(limitCount, "Required parameter limitCount must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetProjectList setAlt(String alt) {
      return (GetProjectList) super.setAlt(alt);
    }

    @Override
    public GetProjectList setFields(String fields) {
      return (GetProjectList) super.setFields(fields);
    }

    @Override
    public GetProjectList setKey(String key) {
      return (GetProjectList) super.setKey(key);
    }

    @Override
    public GetProjectList setOauthToken(String oauthToken) {
      return (GetProjectList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetProjectList setPrettyPrint(Boolean prettyPrint) {
      return (GetProjectList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetProjectList setQuotaUser(String quotaUser) {
      return (GetProjectList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetProjectList setUserIp(String userIp) {
      return (GetProjectList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Integer lastCount;

    /**

     */
    public Integer getLastCount() {
      return lastCount;
    }

    public GetProjectList setLastCount(Integer lastCount) {
      this.lastCount = lastCount;
      return this;
    }

    @com.google.api.client.util.Key
    private Integer limitCount;

    /**

     */
    public Integer getLimitCount() {
      return limitCount;
    }

    public GetProjectList setLimitCount(Integer limitCount) {
      this.limitCount = limitCount;
      return this;
    }

    @com.google.api.client.util.Key
    private String projectName;

    /**

     */
    public String getProjectName() {
      return projectName;
    }

    public GetProjectList setProjectName(String projectName) {
      this.projectName = projectName;
      return this;
    }

    @com.google.api.client.util.Key
    private String builderName;

    /**

     */
    public String getBuilderName() {
      return builderName;
    }

    public GetProjectList setBuilderName(String builderName) {
      this.builderName = builderName;
      return this;
    }

    @com.google.api.client.util.Key
    private Boolean offer;

    /**

     */
    public Boolean getOffer() {
      return offer;
    }

    public GetProjectList setOffer(Boolean offer) {
      this.offer = offer;
      return this;
    }

    @Override
    public GetProjectList set(String parameterName, Object value) {
      return (GetProjectList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getProjectScoreList".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetProjectScoreList#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @param token
   * @param cityId
   * @return the request
   */
  public GetProjectScoreList getProjectScoreList(Long id, String token, Long cityId) throws java.io.IOException {
    GetProjectScoreList result = new GetProjectScoreList(id, token, cityId);
    initialize(result);
    return result;
  }

  public class GetProjectScoreList extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.ProjectScoreListResponse> {

    private static final String REST_PATH = "projectscorelistresponse/{id}/{token}/{cityId}";

    /**
     * Create a request for the method "getProjectScoreList".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetProjectScoreList#execute()} method to invoke the remote
     * operation. <p> {@link GetProjectScoreList#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param cityId
     * @since 1.13
     */
    protected GetProjectScoreList(Long id, String token, Long cityId) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.ProjectScoreListResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
      this.cityId = com.google.api.client.util.Preconditions.checkNotNull(cityId, "Required parameter cityId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetProjectScoreList setAlt(String alt) {
      return (GetProjectScoreList) super.setAlt(alt);
    }

    @Override
    public GetProjectScoreList setFields(String fields) {
      return (GetProjectScoreList) super.setFields(fields);
    }

    @Override
    public GetProjectScoreList setKey(String key) {
      return (GetProjectScoreList) super.setKey(key);
    }

    @Override
    public GetProjectScoreList setOauthToken(String oauthToken) {
      return (GetProjectScoreList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetProjectScoreList setPrettyPrint(Boolean prettyPrint) {
      return (GetProjectScoreList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetProjectScoreList setQuotaUser(String quotaUser) {
      return (GetProjectScoreList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetProjectScoreList setUserIp(String userIp) {
      return (GetProjectScoreList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long id;

    /**

     */
    public Long getId() {
      return id;
    }

    public GetProjectScoreList setId(Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private String token;

    /**

     */
    public String getToken() {
      return token;
    }

    public GetProjectScoreList setToken(String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private Long cityId;

    /**

     */
    public Long getCityId() {
      return cityId;
    }

    public GetProjectScoreList setCityId(Long cityId) {
      this.cityId = cityId;
      return this;
    }

    @Override
    public GetProjectScoreList set(String parameterName, Object value) {
      return (GetProjectScoreList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getProjectSortDetail".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetProjectSortDetail#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetProjectSortDetail getProjectSortDetail(Long id) throws java.io.IOException {
    GetProjectSortDetail result = new GetProjectSortDetail(id);
    initialize(result);
    return result;
  }

  public class GetProjectSortDetail extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.GetProjectSortDetailResponse> {

    private static final String REST_PATH = "getprojectsortdetailresponse/{id}";

    /**
     * Create a request for the method "getProjectSortDetail".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetProjectSortDetail#execute()} method to invoke the
     * remote operation. <p> {@link GetProjectSortDetail#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetProjectSortDetail(Long id) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.GetProjectSortDetailResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetProjectSortDetail setAlt(String alt) {
      return (GetProjectSortDetail) super.setAlt(alt);
    }

    @Override
    public GetProjectSortDetail setFields(String fields) {
      return (GetProjectSortDetail) super.setFields(fields);
    }

    @Override
    public GetProjectSortDetail setKey(String key) {
      return (GetProjectSortDetail) super.setKey(key);
    }

    @Override
    public GetProjectSortDetail setOauthToken(String oauthToken) {
      return (GetProjectSortDetail) super.setOauthToken(oauthToken);
    }

    @Override
    public GetProjectSortDetail setPrettyPrint(Boolean prettyPrint) {
      return (GetProjectSortDetail) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetProjectSortDetail setQuotaUser(String quotaUser) {
      return (GetProjectSortDetail) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetProjectSortDetail setUserIp(String userIp) {
      return (GetProjectSortDetail) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long id;

    /**

     */
    public Long getId() {
      return id;
    }

    public GetProjectSortDetail setId(Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetProjectSortDetail set(String parameterName, Object value) {
      return (GetProjectSortDetail) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getProjectsByCity".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetProjectsByCity#execute()} method to invoke the remote
   * operation.
   *
   * @param cityId
   * @return the request
   */
  public GetProjectsByCity getProjectsByCity(Long cityId) throws java.io.IOException {
    GetProjectsByCity result = new GetProjectsByCity(cityId);
    initialize(result);
    return result;
  }

  public class GetProjectsByCity extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.PropertySearchResponse> {

    private static final String REST_PATH = "propertysearchresponse/{cityId}";

    /**
     * Create a request for the method "getProjectsByCity".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetProjectsByCity#execute()} method to invoke the remote
     * operation. <p> {@link GetProjectsByCity#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param cityId
     * @since 1.13
     */
    protected GetProjectsByCity(Long cityId) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.PropertySearchResponse.class);
      this.cityId = com.google.api.client.util.Preconditions.checkNotNull(cityId, "Required parameter cityId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetProjectsByCity setAlt(String alt) {
      return (GetProjectsByCity) super.setAlt(alt);
    }

    @Override
    public GetProjectsByCity setFields(String fields) {
      return (GetProjectsByCity) super.setFields(fields);
    }

    @Override
    public GetProjectsByCity setKey(String key) {
      return (GetProjectsByCity) super.setKey(key);
    }

    @Override
    public GetProjectsByCity setOauthToken(String oauthToken) {
      return (GetProjectsByCity) super.setOauthToken(oauthToken);
    }

    @Override
    public GetProjectsByCity setPrettyPrint(Boolean prettyPrint) {
      return (GetProjectsByCity) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetProjectsByCity setQuotaUser(String quotaUser) {
      return (GetProjectsByCity) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetProjectsByCity setUserIp(String userIp) {
      return (GetProjectsByCity) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long cityId;

    /**

     */
    public Long getCityId() {
      return cityId;
    }

    public GetProjectsByCity setCityId(Long cityId) {
      this.cityId = cityId;
      return this;
    }

    @com.google.api.client.util.Key
    private Long requestId;

    /**

     */
    public Long getRequestId() {
      return requestId;
    }

    public GetProjectsByCity setRequestId(Long requestId) {
      this.requestId = requestId;
      return this;
    }

    @com.google.api.client.util.Key
    private String city;

    /**

     */
    public String getCity() {
      return city;
    }

    public GetProjectsByCity setCity(String city) {
      this.city = city;
      return this;
    }

    @com.google.api.client.util.Key
    private String appVersion;

    /**

     */
    public String getAppVersion() {
      return appVersion;
    }

    public GetProjectsByCity setAppVersion(String appVersion) {
      this.appVersion = appVersion;
      return this;
    }

    @com.google.api.client.util.Key
    private Long userId;

    /**

     */
    public Long getUserId() {
      return userId;
    }

    public GetProjectsByCity setUserId(Long userId) {
      this.userId = userId;
      return this;
    }

    @com.google.api.client.util.Key
    private Long virtualId;

    /**

     */
    public Long getVirtualId() {
      return virtualId;
    }

    public GetProjectsByCity setVirtualId(Long virtualId) {
      this.virtualId = virtualId;
      return this;
    }

    @com.google.api.client.util.Key
    private String source;

    /**

     */
    public String getSource() {
      return source;
    }

    public GetProjectsByCity setSource(String source) {
      this.source = source;
      return this;
    }

    @com.google.api.client.util.Key
    private String browser;

    /**

     */
    public String getBrowser() {
      return browser;
    }

    public GetProjectsByCity setBrowser(String browser) {
      this.browser = browser;
      return this;
    }

    @com.google.api.client.util.Key
    private String browserVersion;

    /**

     */
    public String getBrowserVersion() {
      return browserVersion;
    }

    public GetProjectsByCity setBrowserVersion(String browserVersion) {
      this.browserVersion = browserVersion;
      return this;
    }

    @com.google.api.client.util.Key
    private String browserType;

    /**

     */
    public String getBrowserType() {
      return browserType;
    }

    public GetProjectsByCity setBrowserType(String browserType) {
      this.browserType = browserType;
      return this;
    }

    @com.google.api.client.util.Key
    private Integer offset;

    /**

     */
    public Integer getOffset() {
      return offset;
    }

    public GetProjectsByCity setOffset(Integer offset) {
      this.offset = offset;
      return this;
    }

    @com.google.api.client.util.Key
    private Integer limit;

    /**

     */
    public Integer getLimit() {
      return limit;
    }

    public GetProjectsByCity setLimit(Integer limit) {
      this.limit = limit;
      return this;
    }

    @com.google.api.client.util.Key
    private Boolean getSummary;

    /**

     */
    public Boolean getGetSummary() {
      return getSummary;
    }

    public GetProjectsByCity setGetSummary(Boolean getSummary) {
      this.getSummary = getSummary;
      return this;
    }

    @Override
    public GetProjectsByCity set(String parameterName, Object value) {
      return (GetProjectsByCity) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getProjectsByDistance".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetProjectsByDistance#execute()} method to invoke the remote
   * operation.
   *
   * @param latitude
   * @param longitude
   * @param distanceInMeters
   * @return the request
   */
  public GetProjectsByDistance getProjectsByDistance(Double latitude, Double longitude, Long distanceInMeters) throws java.io.IOException {
    GetProjectsByDistance result = new GetProjectsByDistance(latitude, longitude, distanceInMeters);
    initialize(result);
    return result;
  }

  public class GetProjectsByDistance extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.PropertySearchResponse> {

    private static final String REST_PATH = "propertysearchresponse/{latitude}/{longitude}/{distanceInMeters}";

    /**
     * Create a request for the method "getProjectsByDistance".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetProjectsByDistance#execute()} method to invoke the
     * remote operation. <p> {@link GetProjectsByDistance#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param latitude
     * @param longitude
     * @param distanceInMeters
     * @since 1.13
     */
    protected GetProjectsByDistance(Double latitude, Double longitude, Long distanceInMeters) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.PropertySearchResponse.class);
      this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
      this.longitude = com.google.api.client.util.Preconditions.checkNotNull(longitude, "Required parameter longitude must be specified.");
      this.distanceInMeters = com.google.api.client.util.Preconditions.checkNotNull(distanceInMeters, "Required parameter distanceInMeters must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetProjectsByDistance setAlt(String alt) {
      return (GetProjectsByDistance) super.setAlt(alt);
    }

    @Override
    public GetProjectsByDistance setFields(String fields) {
      return (GetProjectsByDistance) super.setFields(fields);
    }

    @Override
    public GetProjectsByDistance setKey(String key) {
      return (GetProjectsByDistance) super.setKey(key);
    }

    @Override
    public GetProjectsByDistance setOauthToken(String oauthToken) {
      return (GetProjectsByDistance) super.setOauthToken(oauthToken);
    }

    @Override
    public GetProjectsByDistance setPrettyPrint(Boolean prettyPrint) {
      return (GetProjectsByDistance) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetProjectsByDistance setQuotaUser(String quotaUser) {
      return (GetProjectsByDistance) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetProjectsByDistance setUserIp(String userIp) {
      return (GetProjectsByDistance) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Double latitude;

    /**

     */
    public Double getLatitude() {
      return latitude;
    }

    public GetProjectsByDistance setLatitude(Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private Double longitude;

    /**

     */
    public Double getLongitude() {
      return longitude;
    }

    public GetProjectsByDistance setLongitude(Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @com.google.api.client.util.Key
    private Long distanceInMeters;

    /**

     */
    public Long getDistanceInMeters() {
      return distanceInMeters;
    }

    public GetProjectsByDistance setDistanceInMeters(Long distanceInMeters) {
      this.distanceInMeters = distanceInMeters;
      return this;
    }

    @com.google.api.client.util.Key
    private Integer resultCount;

    /**

     */
    public Integer getResultCount() {
      return resultCount;
    }

    public GetProjectsByDistance setResultCount(Integer resultCount) {
      this.resultCount = resultCount;
      return this;
    }

    @com.google.api.client.util.Key
    private Long requestId;

    /**

     */
    public Long getRequestId() {
      return requestId;
    }

    public GetProjectsByDistance setRequestId(Long requestId) {
      this.requestId = requestId;
      return this;
    }

    @com.google.api.client.util.Key
    private String searchText;

    /**

     */
    public String getSearchText() {
      return searchText;
    }

    public GetProjectsByDistance setSearchText(String searchText) {
      this.searchText = searchText;
      return this;
    }

    @com.google.api.client.util.Key
    private Long cityId;

    /**

     */
    public Long getCityId() {
      return cityId;
    }

    public GetProjectsByDistance setCityId(Long cityId) {
      this.cityId = cityId;
      return this;
    }

    @com.google.api.client.util.Key
    private String city;

    /**

     */
    public String getCity() {
      return city;
    }

    public GetProjectsByDistance setCity(String city) {
      this.city = city;
      return this;
    }

    @com.google.api.client.util.Key
    private String appVersion;

    /**

     */
    public String getAppVersion() {
      return appVersion;
    }

    public GetProjectsByDistance setAppVersion(String appVersion) {
      this.appVersion = appVersion;
      return this;
    }

    @com.google.api.client.util.Key
    private Long userId;

    /**

     */
    public Long getUserId() {
      return userId;
    }

    public GetProjectsByDistance setUserId(Long userId) {
      this.userId = userId;
      return this;
    }

    @com.google.api.client.util.Key
    private Long virtualId;

    /**

     */
    public Long getVirtualId() {
      return virtualId;
    }

    public GetProjectsByDistance setVirtualId(Long virtualId) {
      this.virtualId = virtualId;
      return this;
    }

    @com.google.api.client.util.Key
    private String source;

    /**

     */
    public String getSource() {
      return source;
    }

    public GetProjectsByDistance setSource(String source) {
      this.source = source;
      return this;
    }

    @com.google.api.client.util.Key
    private String browser;

    /**

     */
    public String getBrowser() {
      return browser;
    }

    public GetProjectsByDistance setBrowser(String browser) {
      this.browser = browser;
      return this;
    }

    @com.google.api.client.util.Key
    private String browserVersion;

    /**

     */
    public String getBrowserVersion() {
      return browserVersion;
    }

    public GetProjectsByDistance setBrowserVersion(String browserVersion) {
      this.browserVersion = browserVersion;
      return this;
    }

    @com.google.api.client.util.Key
    private String browserType;

    /**

     */
    public String getBrowserType() {
      return browserType;
    }

    public GetProjectsByDistance setBrowserType(String browserType) {
      this.browserType = browserType;
      return this;
    }

    @com.google.api.client.util.Key
    private Integer offset;

    /**

     */
    public Integer getOffset() {
      return offset;
    }

    public GetProjectsByDistance setOffset(Integer offset) {
      this.offset = offset;
      return this;
    }

    @Override
    public GetProjectsByDistance set(String parameterName, Object value) {
      return (GetProjectsByDistance) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getProjectsByIdList".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetProjectsByIdList#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetProjectsByIdList getProjectsByIdList() throws java.io.IOException {
    GetProjectsByIdList result = new GetProjectsByIdList();
    initialize(result);
    return result;
  }

  public class GetProjectsByIdList extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.PropertySearchListResponse> {

    private static final String REST_PATH = "propertysearchlistresponse";

    /**
     * Create a request for the method "getProjectsByIdList".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetProjectsByIdList#execute()} method to invoke the remote
     * operation. <p> {@link GetProjectsByIdList#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetProjectsByIdList() {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.PropertySearchListResponse.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetProjectsByIdList setAlt(String alt) {
      return (GetProjectsByIdList) super.setAlt(alt);
    }

    @Override
    public GetProjectsByIdList setFields(String fields) {
      return (GetProjectsByIdList) super.setFields(fields);
    }

    @Override
    public GetProjectsByIdList setKey(String key) {
      return (GetProjectsByIdList) super.setKey(key);
    }

    @Override
    public GetProjectsByIdList setOauthToken(String oauthToken) {
      return (GetProjectsByIdList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetProjectsByIdList setPrettyPrint(Boolean prettyPrint) {
      return (GetProjectsByIdList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetProjectsByIdList setQuotaUser(String quotaUser) {
      return (GetProjectsByIdList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetProjectsByIdList setUserIp(String userIp) {
      return (GetProjectsByIdList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.util.List<Long> idList;

    /**

     */
    public java.util.List<Long> getIdList() {
      return idList;
    }

    public GetProjectsByIdList setIdList(java.util.List<Long> idList) {
      this.idList = idList;
      return this;
    }

    @Override
    public GetProjectsByIdList set(String parameterName, Object value) {
      return (GetProjectsByIdList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getPropertiesByBuilder".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetPropertiesByBuilder#execute()} method to invoke the
   * remote operation.
   *
   * @param builderId
   * @param builderName
   * @return the request
   */
  public GetPropertiesByBuilder getPropertiesByBuilder(Long builderId, String builderName) throws java.io.IOException {
    GetPropertiesByBuilder result = new GetPropertiesByBuilder(builderId, builderName);
    initialize(result);
    return result;
  }

  public class GetPropertiesByBuilder extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.PropertySearchResponse> {

    private static final String REST_PATH = "propertysearchresponse/{builderId}/{builderName}";

    /**
     * Create a request for the method "getPropertiesByBuilder".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetPropertiesByBuilder#execute()} method to invoke the
     * remote operation. <p> {@link GetPropertiesByBuilder#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param builderId
     * @param builderName
     * @since 1.13
     */
    protected GetPropertiesByBuilder(Long builderId, String builderName) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.PropertySearchResponse.class);
      this.builderId = com.google.api.client.util.Preconditions.checkNotNull(builderId, "Required parameter builderId must be specified.");
      this.builderName = com.google.api.client.util.Preconditions.checkNotNull(builderName, "Required parameter builderName must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetPropertiesByBuilder setAlt(String alt) {
      return (GetPropertiesByBuilder) super.setAlt(alt);
    }

    @Override
    public GetPropertiesByBuilder setFields(String fields) {
      return (GetPropertiesByBuilder) super.setFields(fields);
    }

    @Override
    public GetPropertiesByBuilder setKey(String key) {
      return (GetPropertiesByBuilder) super.setKey(key);
    }

    @Override
    public GetPropertiesByBuilder setOauthToken(String oauthToken) {
      return (GetPropertiesByBuilder) super.setOauthToken(oauthToken);
    }

    @Override
    public GetPropertiesByBuilder setPrettyPrint(Boolean prettyPrint) {
      return (GetPropertiesByBuilder) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetPropertiesByBuilder setQuotaUser(String quotaUser) {
      return (GetPropertiesByBuilder) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetPropertiesByBuilder setUserIp(String userIp) {
      return (GetPropertiesByBuilder) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long builderId;

    /**

     */
    public Long getBuilderId() {
      return builderId;
    }

    public GetPropertiesByBuilder setBuilderId(Long builderId) {
      this.builderId = builderId;
      return this;
    }

    @com.google.api.client.util.Key
    private String builderName;

    /**

     */
    public String getBuilderName() {
      return builderName;
    }

    public GetPropertiesByBuilder setBuilderName(String builderName) {
      this.builderName = builderName;
      return this;
    }

    @com.google.api.client.util.Key
    private Long cityId;

    /**

     */
    public Long getCityId() {
      return cityId;
    }

    public GetPropertiesByBuilder setCityId(Long cityId) {
      this.cityId = cityId;
      return this;
    }

    @com.google.api.client.util.Key
    private String city;

    /**

     */
    public String getCity() {
      return city;
    }

    public GetPropertiesByBuilder setCity(String city) {
      this.city = city;
      return this;
    }

    @com.google.api.client.util.Key
    private String appVersion;

    /**

     */
    public String getAppVersion() {
      return appVersion;
    }

    public GetPropertiesByBuilder setAppVersion(String appVersion) {
      this.appVersion = appVersion;
      return this;
    }

    @com.google.api.client.util.Key
    private Long userId;

    /**

     */
    public Long getUserId() {
      return userId;
    }

    public GetPropertiesByBuilder setUserId(Long userId) {
      this.userId = userId;
      return this;
    }

    @com.google.api.client.util.Key
    private Long virtualId;

    /**

     */
    public Long getVirtualId() {
      return virtualId;
    }

    public GetPropertiesByBuilder setVirtualId(Long virtualId) {
      this.virtualId = virtualId;
      return this;
    }

    @com.google.api.client.util.Key
    private String source;

    /**

     */
    public String getSource() {
      return source;
    }

    public GetPropertiesByBuilder setSource(String source) {
      this.source = source;
      return this;
    }

    @com.google.api.client.util.Key
    private String browser;

    /**

     */
    public String getBrowser() {
      return browser;
    }

    public GetPropertiesByBuilder setBrowser(String browser) {
      this.browser = browser;
      return this;
    }

    @com.google.api.client.util.Key
    private String browserVersion;

    /**

     */
    public String getBrowserVersion() {
      return browserVersion;
    }

    public GetPropertiesByBuilder setBrowserVersion(String browserVersion) {
      this.browserVersion = browserVersion;
      return this;
    }

    @com.google.api.client.util.Key
    private String browserType;

    /**

     */
    public String getBrowserType() {
      return browserType;
    }

    public GetPropertiesByBuilder setBrowserType(String browserType) {
      this.browserType = browserType;
      return this;
    }

    @com.google.api.client.util.Key
    private Integer offset;

    /**

     */
    public Integer getOffset() {
      return offset;
    }

    public GetPropertiesByBuilder setOffset(Integer offset) {
      this.offset = offset;
      return this;
    }

    @com.google.api.client.util.Key
    private Integer limit;

    /**

     */
    public Integer getLimit() {
      return limit;
    }

    public GetPropertiesByBuilder setLimit(Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public GetPropertiesByBuilder set(String parameterName, Object value) {
      return (GetPropertiesByBuilder) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUnitListFromBlock".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetUnitListFromBlock#execute()} method to invoke the remote
   * operation.
   *
   * @param blockId
   * @return the request
   */
  public GetUnitListFromBlock getUnitListFromBlock(Long blockId) throws java.io.IOException {
    GetUnitListFromBlock result = new GetUnitListFromBlock(blockId);
    initialize(result);
    return result;
  }

  public class GetUnitListFromBlock extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.PropertyUnitCollection> {

    private static final String REST_PATH = "propertyunitcollection/{blockId}";

    /**
     * Create a request for the method "getUnitListFromBlock".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetUnitListFromBlock#execute()} method to invoke the
     * remote operation. <p> {@link GetUnitListFromBlock#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param blockId
     * @since 1.13
     */
    protected GetUnitListFromBlock(Long blockId) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.PropertyUnitCollection.class);
      this.blockId = com.google.api.client.util.Preconditions.checkNotNull(blockId, "Required parameter blockId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUnitListFromBlock setAlt(String alt) {
      return (GetUnitListFromBlock) super.setAlt(alt);
    }

    @Override
    public GetUnitListFromBlock setFields(String fields) {
      return (GetUnitListFromBlock) super.setFields(fields);
    }

    @Override
    public GetUnitListFromBlock setKey(String key) {
      return (GetUnitListFromBlock) super.setKey(key);
    }

    @Override
    public GetUnitListFromBlock setOauthToken(String oauthToken) {
      return (GetUnitListFromBlock) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUnitListFromBlock setPrettyPrint(Boolean prettyPrint) {
      return (GetUnitListFromBlock) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUnitListFromBlock setQuotaUser(String quotaUser) {
      return (GetUnitListFromBlock) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUnitListFromBlock setUserIp(String userIp) {
      return (GetUnitListFromBlock) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long blockId;

    /**

     */
    public Long getBlockId() {
      return blockId;
    }

    public GetUnitListFromBlock setBlockId(Long blockId) {
      this.blockId = blockId;
      return this;
    }

    @Override
    public GetUnitListFromBlock set(String parameterName, Object value) {
      return (GetUnitListFromBlock) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getVirtualTourProjects".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link GetVirtualTourProjects#execute()} method to invoke the
   * remote operation.
   *
   * @return the request
   */
  public GetVirtualTourProjects getVirtualTourProjects() throws java.io.IOException {
    GetVirtualTourProjects result = new GetVirtualTourProjects();
    initialize(result);
    return result;
  }

  public class GetVirtualTourProjects extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.VirtualTourProjectListResponse> {

    private static final String REST_PATH = "virtualtourprojectlistresponse";

    /**
     * Create a request for the method "getVirtualTourProjects".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link GetVirtualTourProjects#execute()} method to invoke the
     * remote operation. <p> {@link GetVirtualTourProjects#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetVirtualTourProjects() {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.VirtualTourProjectListResponse.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetVirtualTourProjects setAlt(String alt) {
      return (GetVirtualTourProjects) super.setAlt(alt);
    }

    @Override
    public GetVirtualTourProjects setFields(String fields) {
      return (GetVirtualTourProjects) super.setFields(fields);
    }

    @Override
    public GetVirtualTourProjects setKey(String key) {
      return (GetVirtualTourProjects) super.setKey(key);
    }

    @Override
    public GetVirtualTourProjects setOauthToken(String oauthToken) {
      return (GetVirtualTourProjects) super.setOauthToken(oauthToken);
    }

    @Override
    public GetVirtualTourProjects setPrettyPrint(Boolean prettyPrint) {
      return (GetVirtualTourProjects) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetVirtualTourProjects setQuotaUser(String quotaUser) {
      return (GetVirtualTourProjects) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetVirtualTourProjects setUserIp(String userIp) {
      return (GetVirtualTourProjects) super.setUserIp(userIp);
    }

    @Override
    public GetVirtualTourProjects set(String parameterName, Object value) {
      return (GetVirtualTourProjects) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "makeProjectExclusive".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link MakeProjectExclusive#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @param exclusive
   * @return the request
   */
  public MakeProjectExclusive makeProjectExclusive(Long id, Boolean exclusive) throws java.io.IOException {
    MakeProjectExclusive result = new MakeProjectExclusive(id, exclusive);
    initialize(result);
    return result;
  }

  public class MakeProjectExclusive extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.AgentLoginResponse> {

    private static final String REST_PATH = "makeProjectExclusive/{id}/{exclusive}";

    /**
     * Create a request for the method "makeProjectExclusive".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link MakeProjectExclusive#execute()} method to invoke the
     * remote operation. <p> {@link MakeProjectExclusive#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @param exclusive
     * @since 1.13
     */
    protected MakeProjectExclusive(Long id, Boolean exclusive) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.AgentLoginResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.exclusive = com.google.api.client.util.Preconditions.checkNotNull(exclusive, "Required parameter exclusive must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public MakeProjectExclusive setAlt(String alt) {
      return (MakeProjectExclusive) super.setAlt(alt);
    }

    @Override
    public MakeProjectExclusive setFields(String fields) {
      return (MakeProjectExclusive) super.setFields(fields);
    }

    @Override
    public MakeProjectExclusive setKey(String key) {
      return (MakeProjectExclusive) super.setKey(key);
    }

    @Override
    public MakeProjectExclusive setOauthToken(String oauthToken) {
      return (MakeProjectExclusive) super.setOauthToken(oauthToken);
    }

    @Override
    public MakeProjectExclusive setPrettyPrint(Boolean prettyPrint) {
      return (MakeProjectExclusive) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public MakeProjectExclusive setQuotaUser(String quotaUser) {
      return (MakeProjectExclusive) super.setQuotaUser(quotaUser);
    }

    @Override
    public MakeProjectExclusive setUserIp(String userIp) {
      return (MakeProjectExclusive) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long id;

    /**

     */
    public Long getId() {
      return id;
    }

    public MakeProjectExclusive setId(Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private Boolean exclusive;

    /**

     */
    public Boolean getExclusive() {
      return exclusive;
    }

    public MakeProjectExclusive setExclusive(Boolean exclusive) {
      this.exclusive = exclusive;
      return this;
    }

    @Override
    public MakeProjectExclusive set(String parameterName, Object value) {
      return (MakeProjectExclusive) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "projectBuilderList".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link ProjectBuilderList#execute()} method to invoke the remote
   * operation.
   *
   * @param cityId
   * @return the request
   */
  public ProjectBuilderList projectBuilderList(Long cityId) throws java.io.IOException {
    ProjectBuilderList result = new ProjectBuilderList(cityId);
    initialize(result);
    return result;
  }

  public class ProjectBuilderList extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.ProjectCollection> {

    private static final String REST_PATH = "projectBuilderList/{cityId}";

    /**
     * Create a request for the method "projectBuilderList".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link ProjectBuilderList#execute()} method to invoke the remote
     * operation. <p> {@link ProjectBuilderList#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param cityId
     * @since 1.13
     */
    protected ProjectBuilderList(Long cityId) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.ProjectCollection.class);
      this.cityId = com.google.api.client.util.Preconditions.checkNotNull(cityId, "Required parameter cityId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ProjectBuilderList setAlt(String alt) {
      return (ProjectBuilderList) super.setAlt(alt);
    }

    @Override
    public ProjectBuilderList setFields(String fields) {
      return (ProjectBuilderList) super.setFields(fields);
    }

    @Override
    public ProjectBuilderList setKey(String key) {
      return (ProjectBuilderList) super.setKey(key);
    }

    @Override
    public ProjectBuilderList setOauthToken(String oauthToken) {
      return (ProjectBuilderList) super.setOauthToken(oauthToken);
    }

    @Override
    public ProjectBuilderList setPrettyPrint(Boolean prettyPrint) {
      return (ProjectBuilderList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ProjectBuilderList setQuotaUser(String quotaUser) {
      return (ProjectBuilderList) super.setQuotaUser(quotaUser);
    }

    @Override
    public ProjectBuilderList setUserIp(String userIp) {
      return (ProjectBuilderList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long cityId;

    /**

     */
    public Long getCityId() {
      return cityId;
    }

    public ProjectBuilderList setCityId(Long cityId) {
      this.cityId = cityId;
      return this;
    }

    @com.google.api.client.util.Key
    private String city;

    /**

     */
    public String getCity() {
      return city;
    }

    public ProjectBuilderList setCity(String city) {
      this.city = city;
      return this;
    }

    @Override
    public ProjectBuilderList set(String parameterName, Object value) {
      return (ProjectBuilderList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "projectBuilderListCityWise".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link ProjectBuilderListCityWise#execute()} method to invoke the
   * remote operation.
   *
   * @param cityId
   * @return the request
   */
  public ProjectBuilderListCityWise projectBuilderListCityWise(Long cityId) throws java.io.IOException {
    ProjectBuilderListCityWise result = new ProjectBuilderListCityWise(cityId);
    initialize(result);
    return result;
  }

  public class ProjectBuilderListCityWise extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.GetProjectListResponse> {

    private static final String REST_PATH = "projectBuilderListCityWise/{cityId}";

    /**
     * Create a request for the method "projectBuilderListCityWise".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link ProjectBuilderListCityWise#execute()} method to invoke the
     * remote operation. <p> {@link ProjectBuilderListCityWise#initialize(com.google.api.client.google
     * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param cityId
     * @since 1.13
     */
    protected ProjectBuilderListCityWise(Long cityId) {
      super(PropertyEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.GetProjectListResponse.class);
      this.cityId = com.google.api.client.util.Preconditions.checkNotNull(cityId, "Required parameter cityId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ProjectBuilderListCityWise setAlt(String alt) {
      return (ProjectBuilderListCityWise) super.setAlt(alt);
    }

    @Override
    public ProjectBuilderListCityWise setFields(String fields) {
      return (ProjectBuilderListCityWise) super.setFields(fields);
    }

    @Override
    public ProjectBuilderListCityWise setKey(String key) {
      return (ProjectBuilderListCityWise) super.setKey(key);
    }

    @Override
    public ProjectBuilderListCityWise setOauthToken(String oauthToken) {
      return (ProjectBuilderListCityWise) super.setOauthToken(oauthToken);
    }

    @Override
    public ProjectBuilderListCityWise setPrettyPrint(Boolean prettyPrint) {
      return (ProjectBuilderListCityWise) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ProjectBuilderListCityWise setQuotaUser(String quotaUser) {
      return (ProjectBuilderListCityWise) super.setQuotaUser(quotaUser);
    }

    @Override
    public ProjectBuilderListCityWise setUserIp(String userIp) {
      return (ProjectBuilderListCityWise) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long cityId;

    /**

     */
    public Long getCityId() {
      return cityId;
    }

    public ProjectBuilderListCityWise setCityId(Long cityId) {
      this.cityId = cityId;
      return this;
    }

    @com.google.api.client.util.Key
    private String city;

    /**

     */
    public String getCity() {
      return city;
    }

    public ProjectBuilderListCityWise setCity(String city) {
      this.city = city;
      return this;
    }

    @com.google.api.client.util.Key
    private Integer offset;

    /**

     */
    public Integer getOffset() {
      return offset;
    }

    public ProjectBuilderListCityWise setOffset(Integer offset) {
      this.offset = offset;
      return this;
    }

    @com.google.api.client.util.Key
    private Integer limit;

    /**

     */
    public Integer getLimit() {
      return limit;
    }

    public ProjectBuilderListCityWise setLimit(Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ProjectBuilderListCityWise set(String parameterName, Object value) {
      return (ProjectBuilderListCityWise) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeActiveAgent".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link RemoveActiveAgent#execute()} method to invoke the remote
   * operation.
   *
   * @param agntId
   * @param token
   * @param projectId
   * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.AddActiveAgentRequest}
   * @return the request
   */
  public RemoveActiveAgent removeActiveAgent(Long agntId, String token, Long projectId, com.buy.housing.backend.propertyEndPoint.model.AddActiveAgentRequest content) throws java.io.IOException {
    RemoveActiveAgent result = new RemoveActiveAgent(agntId, token, projectId, content);
    initialize(result);
    return result;
  }

  public class RemoveActiveAgent extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "activeagent/{agntId}/{token}/{projectId}";

    /**
     * Create a request for the method "removeActiveAgent".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link RemoveActiveAgent#execute()} method to invoke the remote
     * operation. <p> {@link RemoveActiveAgent#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param agntId
     * @param token
     * @param projectId
     * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.AddActiveAgentRequest}
     * @since 1.13
     */
    protected RemoveActiveAgent(Long agntId, String token, Long projectId, com.buy.housing.backend.propertyEndPoint.model.AddActiveAgentRequest content) {
      super(PropertyEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.propertyEndPoint.model.CommonResponse.class);
      this.agntId = com.google.api.client.util.Preconditions.checkNotNull(agntId, "Required parameter agntId must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
      this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
    }

    @Override
    public RemoveActiveAgent setAlt(String alt) {
      return (RemoveActiveAgent) super.setAlt(alt);
    }

    @Override
    public RemoveActiveAgent setFields(String fields) {
      return (RemoveActiveAgent) super.setFields(fields);
    }

    @Override
    public RemoveActiveAgent setKey(String key) {
      return (RemoveActiveAgent) super.setKey(key);
    }

    @Override
    public RemoveActiveAgent setOauthToken(String oauthToken) {
      return (RemoveActiveAgent) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveActiveAgent setPrettyPrint(Boolean prettyPrint) {
      return (RemoveActiveAgent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveActiveAgent setQuotaUser(String quotaUser) {
      return (RemoveActiveAgent) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveActiveAgent setUserIp(String userIp) {
      return (RemoveActiveAgent) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long agntId;

    /**

     */
    public Long getAgntId() {
      return agntId;
    }

    public RemoveActiveAgent setAgntId(Long agntId) {
      this.agntId = agntId;
      return this;
    }

    @com.google.api.client.util.Key
    private String token;

    /**

     */
    public String getToken() {
      return token;
    }

    public RemoveActiveAgent setToken(String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private Long projectId;

    /**

     */
    public Long getProjectId() {
      return projectId;
    }

    public RemoveActiveAgent setProjectId(Long projectId) {
      this.projectId = projectId;
      return this;
    }

    @Override
    public RemoveActiveAgent set(String parameterName, Object value) {
      return (RemoveActiveAgent) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateMicroSitesProjectList".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link UpdateMicroSitesProjectList#execute()} method to invoke the
   * remote operation.
   *
   * @param id
   * @param token
   * @param microSiteType
   * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.MicroSiteProjectListResponse}
   * @return the request
   */
  public UpdateMicroSitesProjectList updateMicroSitesProjectList(Long id, String token, String microSiteType, com.buy.housing.backend.propertyEndPoint.model.MicroSiteProjectListResponse content) throws java.io.IOException {
    UpdateMicroSitesProjectList result = new UpdateMicroSitesProjectList(id, token, microSiteType, content);
    initialize(result);
    return result;
  }

  public class UpdateMicroSitesProjectList extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "commonresponse/{id}/{token}/{microSiteType}";

    /**
     * Create a request for the method "updateMicroSitesProjectList".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateMicroSitesProjectList#execute()} method to invoke
     * the remote operation. <p> {@link UpdateMicroSitesProjectList#initialize(com.google.api.client.g
     * oogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param microSiteType
     * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.MicroSiteProjectListResponse}
     * @since 1.13
     */
    protected UpdateMicroSitesProjectList(Long id, String token, String microSiteType, com.buy.housing.backend.propertyEndPoint.model.MicroSiteProjectListResponse content) {
      super(PropertyEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.propertyEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
      this.microSiteType = com.google.api.client.util.Preconditions.checkNotNull(microSiteType, "Required parameter microSiteType must be specified.");
    }

    @Override
    public UpdateMicroSitesProjectList setAlt(String alt) {
      return (UpdateMicroSitesProjectList) super.setAlt(alt);
    }

    @Override
    public UpdateMicroSitesProjectList setFields(String fields) {
      return (UpdateMicroSitesProjectList) super.setFields(fields);
    }

    @Override
    public UpdateMicroSitesProjectList setKey(String key) {
      return (UpdateMicroSitesProjectList) super.setKey(key);
    }

    @Override
    public UpdateMicroSitesProjectList setOauthToken(String oauthToken) {
      return (UpdateMicroSitesProjectList) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateMicroSitesProjectList setPrettyPrint(Boolean prettyPrint) {
      return (UpdateMicroSitesProjectList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateMicroSitesProjectList setQuotaUser(String quotaUser) {
      return (UpdateMicroSitesProjectList) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateMicroSitesProjectList setUserIp(String userIp) {
      return (UpdateMicroSitesProjectList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long id;

    /**

     */
    public Long getId() {
      return id;
    }

    public UpdateMicroSitesProjectList setId(Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private String token;

    /**

     */
    public String getToken() {
      return token;
    }

    public UpdateMicroSitesProjectList setToken(String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private String microSiteType;

    /**

     */
    public String getMicroSiteType() {
      return microSiteType;
    }

    public UpdateMicroSitesProjectList setMicroSiteType(String microSiteType) {
      this.microSiteType = microSiteType;
      return this;
    }

    @Override
    public UpdateMicroSitesProjectList set(String parameterName, Object value) {
      return (UpdateMicroSitesProjectList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateProjectHTML".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link UpdateProjectHTML#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @param token
   * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.Project}
   * @return the request
   */
  public UpdateProjectHTML updateProjectHTML(Long id, String token, com.buy.housing.backend.propertyEndPoint.model.Project content) throws java.io.IOException {
    UpdateProjectHTML result = new UpdateProjectHTML(id, token, content);
    initialize(result);
    return result;
  }

  public class UpdateProjectHTML extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.AgentLoginResponse> {

    private static final String REST_PATH = "agentloginresponse/{Id}/{token}";

    /**
     * Create a request for the method "updateProjectHTML".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateProjectHTML#execute()} method to invoke the remote
     * operation. <p> {@link UpdateProjectHTML#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.Project}
     * @since 1.13
     */
    protected UpdateProjectHTML(Long id, String token, com.buy.housing.backend.propertyEndPoint.model.Project content) {
      super(PropertyEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.propertyEndPoint.model.AgentLoginResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public UpdateProjectHTML setAlt(String alt) {
      return (UpdateProjectHTML) super.setAlt(alt);
    }

    @Override
    public UpdateProjectHTML setFields(String fields) {
      return (UpdateProjectHTML) super.setFields(fields);
    }

    @Override
    public UpdateProjectHTML setKey(String key) {
      return (UpdateProjectHTML) super.setKey(key);
    }

    @Override
    public UpdateProjectHTML setOauthToken(String oauthToken) {
      return (UpdateProjectHTML) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateProjectHTML setPrettyPrint(Boolean prettyPrint) {
      return (UpdateProjectHTML) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateProjectHTML setQuotaUser(String quotaUser) {
      return (UpdateProjectHTML) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateProjectHTML setUserIp(String userIp) {
      return (UpdateProjectHTML) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private Long id;

    /**

     */
    public Long getId() {
      return id;
    }

    public UpdateProjectHTML setId(Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private String token;

    /**

     */
    public String getToken() {
      return token;
    }

    public UpdateProjectHTML setToken(String token) {
      this.token = token;
      return this;
    }

    @Override
    public UpdateProjectHTML set(String parameterName, Object value) {
      return (UpdateProjectHTML) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateProjectRM".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link UpdateProjectRM#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @param token
   * @return the request
   */
  public UpdateProjectRM updateProjectRM(Long id, String token) throws java.io.IOException {
    UpdateProjectRM result = new UpdateProjectRM(id, token);
    initialize(result);
    return result;
  }

  public class UpdateProjectRM extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.UpdateProjectRMResponse> {

    private static final String REST_PATH = "updateprojectrmresponse/{id}/{token}";

    /**
     * Create a request for the method "updateProjectRM".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateProjectRM#execute()} method to invoke the remote
     * operation. <p> {@link UpdateProjectRM#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @param token
     * @since 1.13
     */
    protected UpdateProjectRM(Long id, String token) {
      super(PropertyEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.UpdateProjectRMResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public UpdateProjectRM setAlt(String alt) {
      return (UpdateProjectRM) super.setAlt(alt);
    }

    @Override
    public UpdateProjectRM setFields(String fields) {
      return (UpdateProjectRM) super.setFields(fields);
    }

    @Override
    public UpdateProjectRM setKey(String key) {
      return (UpdateProjectRM) super.setKey(key);
    }

    @Override
    public UpdateProjectRM setOauthToken(String oauthToken) {
      return (UpdateProjectRM) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateProjectRM setPrettyPrint(Boolean prettyPrint) {
      return (UpdateProjectRM) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateProjectRM setQuotaUser(String quotaUser) {
      return (UpdateProjectRM) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateProjectRM setUserIp(String userIp) {
      return (UpdateProjectRM) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long id;

    /**

     */
    public Long getId() {
      return id;
    }

    public UpdateProjectRM setId(Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private String token;

    /**

     */
    public String getToken() {
      return token;
    }

    public UpdateProjectRM setToken(String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private Long projectId;

    /**

     */
    public Long getProjectId() {
      return projectId;
    }

    public UpdateProjectRM setProjectId(Long projectId) {
      this.projectId = projectId;
      return this;
    }

    @com.google.api.client.util.Key
    private Long agentId;

    /**

     */
    public Long getAgentId() {
      return agentId;
    }

    public UpdateProjectRM setAgentId(Long agentId) {
      this.agentId = agentId;
      return this;
    }

    @com.google.api.client.util.Key
    private String agentName;

    /**

     */
    public String getAgentName() {
      return agentName;
    }

    public UpdateProjectRM setAgentName(String agentName) {
      this.agentName = agentName;
      return this;
    }

    @com.google.api.client.util.Key
    private String agentPhone;

    /**

     */
    public String getAgentPhone() {
      return agentPhone;
    }

    public UpdateProjectRM setAgentPhone(String agentPhone) {
      this.agentPhone = agentPhone;
      return this;
    }

    @Override
    public UpdateProjectRM set(String parameterName, Object value) {
      return (UpdateProjectRM) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateProjectSCEO".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link UpdateProjectSCEO#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @param token
   * @param projectId
   * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.UpdateProjectSCEORequest}
   * @return the request
   */
  public UpdateProjectSCEO updateProjectSCEO(Long id, String token, Long projectId, com.buy.housing.backend.propertyEndPoint.model.UpdateProjectSCEORequest content) throws java.io.IOException {
    UpdateProjectSCEO result = new UpdateProjectSCEO(id, token, projectId, content);
    initialize(result);
    return result;
  }

  public class UpdateProjectSCEO extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.UpdateProjectSCEOResponse> {

    private static final String REST_PATH = "updateprojectsceoresponse/{id}/{token}/{projectId}";

    /**
     * Create a request for the method "updateProjectSCEO".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateProjectSCEO#execute()} method to invoke the remote
     * operation. <p> {@link UpdateProjectSCEO#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param projectId
     * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.UpdateProjectSCEORequest}
     * @since 1.13
     */
    protected UpdateProjectSCEO(Long id, String token, Long projectId, com.buy.housing.backend.propertyEndPoint.model.UpdateProjectSCEORequest content) {
      super(PropertyEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.propertyEndPoint.model.UpdateProjectSCEOResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
      this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
    }

    @Override
    public UpdateProjectSCEO setAlt(String alt) {
      return (UpdateProjectSCEO) super.setAlt(alt);
    }

    @Override
    public UpdateProjectSCEO setFields(String fields) {
      return (UpdateProjectSCEO) super.setFields(fields);
    }

    @Override
    public UpdateProjectSCEO setKey(String key) {
      return (UpdateProjectSCEO) super.setKey(key);
    }

    @Override
    public UpdateProjectSCEO setOauthToken(String oauthToken) {
      return (UpdateProjectSCEO) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateProjectSCEO setPrettyPrint(Boolean prettyPrint) {
      return (UpdateProjectSCEO) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateProjectSCEO setQuotaUser(String quotaUser) {
      return (UpdateProjectSCEO) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateProjectSCEO setUserIp(String userIp) {
      return (UpdateProjectSCEO) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long id;

    /**

     */
    public Long getId() {
      return id;
    }

    public UpdateProjectSCEO setId(Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private String token;

    /**

     */
    public String getToken() {
      return token;
    }

    public UpdateProjectSCEO setToken(String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private Long projectId;

    /**

     */
    public Long getProjectId() {
      return projectId;
    }

    public UpdateProjectSCEO setProjectId(Long projectId) {
      this.projectId = projectId;
      return this;
    }

    @Override
    public UpdateProjectSCEO set(String parameterName, Object value) {
      return (UpdateProjectSCEO) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateProjectScore".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link UpdateProjectScore#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @param token
   * @return the request
   */
  public UpdateProjectScore updateProjectScore(Long id, String token) throws java.io.IOException {
    UpdateProjectScore result = new UpdateProjectScore(id, token);
    initialize(result);
    return result;
  }

  public class UpdateProjectScore extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "commonresponse/{id}/{token}";

    /**
     * Create a request for the method "updateProjectScore".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateProjectScore#execute()} method to invoke the remote
     * operation. <p> {@link UpdateProjectScore#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @since 1.13
     */
    protected UpdateProjectScore(Long id, String token) {
      super(PropertyEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.propertyEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public UpdateProjectScore setAlt(String alt) {
      return (UpdateProjectScore) super.setAlt(alt);
    }

    @Override
    public UpdateProjectScore setFields(String fields) {
      return (UpdateProjectScore) super.setFields(fields);
    }

    @Override
    public UpdateProjectScore setKey(String key) {
      return (UpdateProjectScore) super.setKey(key);
    }

    @Override
    public UpdateProjectScore setOauthToken(String oauthToken) {
      return (UpdateProjectScore) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateProjectScore setPrettyPrint(Boolean prettyPrint) {
      return (UpdateProjectScore) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateProjectScore setQuotaUser(String quotaUser) {
      return (UpdateProjectScore) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateProjectScore setUserIp(String userIp) {
      return (UpdateProjectScore) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long id;

    /**

     */
    public Long getId() {
      return id;
    }

    public UpdateProjectScore setId(Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private String token;

    /**

     */
    public String getToken() {
      return token;
    }

    public UpdateProjectScore setToken(String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private Long projectId;

    /**

     */
    public Long getProjectId() {
      return projectId;
    }

    public UpdateProjectScore setProjectId(Long projectId) {
      this.projectId = projectId;
      return this;
    }

    @com.google.api.client.util.Key
    private Long cityId;

    /**

     */
    public Long getCityId() {
      return cityId;
    }

    public UpdateProjectScore setCityId(Long cityId) {
      this.cityId = cityId;
      return this;
    }

    @com.google.api.client.util.Key
    private Long popularScore;

    /**

     */
    public Long getPopularScore() {
      return popularScore;
    }

    public UpdateProjectScore setPopularScore(Long popularScore) {
      this.popularScore = popularScore;
      return this;
    }

    @com.google.api.client.util.Key
    private Integer ourPicksScore;

    /**

     */
    public Integer getOurPicksScore() {
      return ourPicksScore;
    }

    public UpdateProjectScore setOurPicksScore(Integer ourPicksScore) {
      this.ourPicksScore = ourPicksScore;
      return this;
    }

    @Override
    public UpdateProjectScore set(String parameterName, Object value) {
      return (UpdateProjectScore) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateProjectScoreList".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link UpdateProjectScoreList#execute()} method to invoke the
   * remote operation.
   *
   * @param id
   * @param token
   * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.ProjectScoreListRequest}
   * @return the request
   */
  public UpdateProjectScoreList updateProjectScoreList(Long id, String token, com.buy.housing.backend.propertyEndPoint.model.ProjectScoreListRequest content) throws java.io.IOException {
    UpdateProjectScoreList result = new UpdateProjectScoreList(id, token, content);
    initialize(result);
    return result;
  }

  public class UpdateProjectScoreList extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.ProjectScoreListResponse> {

    private static final String REST_PATH = "projectscorelistresponse/{id}/{token}";

    /**
     * Create a request for the method "updateProjectScoreList".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateProjectScoreList#execute()} method to invoke the
     * remote operation. <p> {@link UpdateProjectScoreList#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.ProjectScoreListRequest}
     * @since 1.13
     */
    protected UpdateProjectScoreList(Long id, String token, com.buy.housing.backend.propertyEndPoint.model.ProjectScoreListRequest content) {
      super(PropertyEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.propertyEndPoint.model.ProjectScoreListResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public UpdateProjectScoreList setAlt(String alt) {
      return (UpdateProjectScoreList) super.setAlt(alt);
    }

    @Override
    public UpdateProjectScoreList setFields(String fields) {
      return (UpdateProjectScoreList) super.setFields(fields);
    }

    @Override
    public UpdateProjectScoreList setKey(String key) {
      return (UpdateProjectScoreList) super.setKey(key);
    }

    @Override
    public UpdateProjectScoreList setOauthToken(String oauthToken) {
      return (UpdateProjectScoreList) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateProjectScoreList setPrettyPrint(Boolean prettyPrint) {
      return (UpdateProjectScoreList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateProjectScoreList setQuotaUser(String quotaUser) {
      return (UpdateProjectScoreList) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateProjectScoreList setUserIp(String userIp) {
      return (UpdateProjectScoreList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long id;

    /**

     */
    public Long getId() {
      return id;
    }

    public UpdateProjectScoreList setId(Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private String token;

    /**

     */
    public String getToken() {
      return token;
    }

    public UpdateProjectScoreList setToken(String token) {
      this.token = token;
      return this;
    }

    @Override
    public UpdateProjectScoreList set(String parameterName, Object value) {
      return (UpdateProjectScoreList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateProjectTargetAndExp".
   *
   * This request holds the parameters needed by the propertyEndPoint server.  After setting any
   * optional parameters, call the {@link UpdateProjectTargetAndExp#execute()} method to invoke the
   * remote operation.
   *
   * @param id
   * @param token
   * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.ProjectStatsMonthWise}
   * @return the request
   */
  public UpdateProjectTargetAndExp updateProjectTargetAndExp(Long id, String token, com.buy.housing.backend.propertyEndPoint.model.ProjectStatsMonthWise content) throws java.io.IOException {
    UpdateProjectTargetAndExp result = new UpdateProjectTargetAndExp(id, token, content);
    initialize(result);
    return result;
  }

  public class UpdateProjectTargetAndExp extends PropertyEndPointRequest<com.buy.housing.backend.propertyEndPoint.model.UpdateProjectTargetResponse> {

    private static final String REST_PATH = "updateprojecttargetresponse/{id}/{token}";

    /**
     * Create a request for the method "updateProjectTargetAndExp".
     *
     * This request holds the parameters needed by the the propertyEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateProjectTargetAndExp#execute()} method to invoke the
     * remote operation. <p> {@link UpdateProjectTargetAndExp#initialize(com.google.api.client.googlea
     * pis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param content the {@link com.buy.housing.backend.propertyEndPoint.model.ProjectStatsMonthWise}
     * @since 1.13
     */
    protected UpdateProjectTargetAndExp(Long id, String token, com.buy.housing.backend.propertyEndPoint.model.ProjectStatsMonthWise content) {
      super(PropertyEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.propertyEndPoint.model.UpdateProjectTargetResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public UpdateProjectTargetAndExp setAlt(String alt) {
      return (UpdateProjectTargetAndExp) super.setAlt(alt);
    }

    @Override
    public UpdateProjectTargetAndExp setFields(String fields) {
      return (UpdateProjectTargetAndExp) super.setFields(fields);
    }

    @Override
    public UpdateProjectTargetAndExp setKey(String key) {
      return (UpdateProjectTargetAndExp) super.setKey(key);
    }

    @Override
    public UpdateProjectTargetAndExp setOauthToken(String oauthToken) {
      return (UpdateProjectTargetAndExp) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateProjectTargetAndExp setPrettyPrint(Boolean prettyPrint) {
      return (UpdateProjectTargetAndExp) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateProjectTargetAndExp setQuotaUser(String quotaUser) {
      return (UpdateProjectTargetAndExp) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateProjectTargetAndExp setUserIp(String userIp) {
      return (UpdateProjectTargetAndExp) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private Long id;

    /**

     */
    public Long getId() {
      return id;
    }

    public UpdateProjectTargetAndExp setId(Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private String token;

    /**

     */
    public String getToken() {
      return token;
    }

    public UpdateProjectTargetAndExp setToken(String token) {
      this.token = token;
      return this;
    }

    @Override
    public UpdateProjectTargetAndExp set(String parameterName, Object value) {
      return (UpdateProjectTargetAndExp) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link PropertyEndPoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
//      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link PropertyEndPoint}. */
    @Override
    public PropertyEndPoint build() {
      return new PropertyEndPoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }


    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link PropertyEndPointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setPropertyEndPointRequestInitializer(
        PropertyEndPointRequestInitializer propertyendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(propertyendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
