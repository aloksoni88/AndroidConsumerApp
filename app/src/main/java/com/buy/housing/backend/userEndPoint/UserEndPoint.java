/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2018-10-08 17:45:39 UTC)
 * on 2019-04-23 at 05:46:42 UTC 
 * Modify at your own risk.
 */

package com.buy.housing.backend.userEndPoint;

/**
 * Service definition for UserEndPoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link UserEndPointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class UserEndPoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.25.0 of the userEndPoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://housingtestserver.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "userEndPoint/v1/";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public UserEndPoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  UserEndPoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addFavouriteProject".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link AddFavouriteProject#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param projectId
   * @return the request
   */
  public AddFavouriteProject addFavouriteProject(java.lang.Long id, java.lang.Long projectId) throws java.io.IOException {
    AddFavouriteProject result = new AddFavouriteProject(id, projectId);
    initialize(result);
    return result;
  }

  public class AddFavouriteProject extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "addFavouriteProject/{id}/{projectId}";

    /**
     * Create a request for the method "addFavouriteProject".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link AddFavouriteProject#execute()} method to invoke the remote
     * operation. <p> {@link AddFavouriteProject#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @param projectId
     * @since 1.13
     */
    protected AddFavouriteProject(java.lang.Long id, java.lang.Long projectId) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
    }

    @Override
    public AddFavouriteProject setAlt(java.lang.String alt) {
      return (AddFavouriteProject) super.setAlt(alt);
    }

    @Override
    public AddFavouriteProject setFields(java.lang.String fields) {
      return (AddFavouriteProject) super.setFields(fields);
    }

    @Override
    public AddFavouriteProject setKey(java.lang.String key) {
      return (AddFavouriteProject) super.setKey(key);
    }

    @Override
    public AddFavouriteProject setOauthToken(java.lang.String oauthToken) {
      return (AddFavouriteProject) super.setOauthToken(oauthToken);
    }

    @Override
    public AddFavouriteProject setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddFavouriteProject) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddFavouriteProject setQuotaUser(java.lang.String quotaUser) {
      return (AddFavouriteProject) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddFavouriteProject setUserIp(java.lang.String userIp) {
      return (AddFavouriteProject) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public AddFavouriteProject setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long projectId;

    /**

     */
    public java.lang.Long getProjectId() {
      return projectId;
    }

    public AddFavouriteProject setProjectId(java.lang.Long projectId) {
      this.projectId = projectId;
      return this;
    }

    @Override
    public AddFavouriteProject set(String parameterName, Object value) {
      return (AddFavouriteProject) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addSearchCriteria".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link AddSearchCriteria#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param content the {@link com.buy.housing.backend.userEndPoint.model.SearchCriteria}
   * @return the request
   */
  public AddSearchCriteria addSearchCriteria(java.lang.Long id, com.buy.housing.backend.userEndPoint.model.SearchCriteria content) throws java.io.IOException {
    AddSearchCriteria result = new AddSearchCriteria(id, content);
    initialize(result);
    return result;
  }

  public class AddSearchCriteria extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "addSearchCriteria/{id}";

    /**
     * Create a request for the method "addSearchCriteria".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link AddSearchCriteria#execute()} method to invoke the remote
     * operation. <p> {@link AddSearchCriteria#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @param content the {@link com.buy.housing.backend.userEndPoint.model.SearchCriteria}
     * @since 1.13
     */
    protected AddSearchCriteria(java.lang.Long id, com.buy.housing.backend.userEndPoint.model.SearchCriteria content) {
      super(UserEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public AddSearchCriteria setAlt(java.lang.String alt) {
      return (AddSearchCriteria) super.setAlt(alt);
    }

    @Override
    public AddSearchCriteria setFields(java.lang.String fields) {
      return (AddSearchCriteria) super.setFields(fields);
    }

    @Override
    public AddSearchCriteria setKey(java.lang.String key) {
      return (AddSearchCriteria) super.setKey(key);
    }

    @Override
    public AddSearchCriteria setOauthToken(java.lang.String oauthToken) {
      return (AddSearchCriteria) super.setOauthToken(oauthToken);
    }

    @Override
    public AddSearchCriteria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddSearchCriteria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddSearchCriteria setQuotaUser(java.lang.String quotaUser) {
      return (AddSearchCriteria) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddSearchCriteria setUserIp(java.lang.String userIp) {
      return (AddSearchCriteria) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public AddSearchCriteria setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public AddSearchCriteria set(String parameterName, Object value) {
      return (AddSearchCriteria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "bookVisit".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link BookVisit#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public BookVisit bookVisit() throws java.io.IOException {
    BookVisit result = new BookVisit();
    initialize(result);
    return result;
  }

  public class BookVisit extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "bookVisit";

    /**
     * Create a request for the method "bookVisit".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link BookVisit#execute()} method to invoke the remote
     * operation. <p> {@link
     * BookVisit#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected BookVisit() {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
    }

    @Override
    public BookVisit setAlt(java.lang.String alt) {
      return (BookVisit) super.setAlt(alt);
    }

    @Override
    public BookVisit setFields(java.lang.String fields) {
      return (BookVisit) super.setFields(fields);
    }

    @Override
    public BookVisit setKey(java.lang.String key) {
      return (BookVisit) super.setKey(key);
    }

    @Override
    public BookVisit setOauthToken(java.lang.String oauthToken) {
      return (BookVisit) super.setOauthToken(oauthToken);
    }

    @Override
    public BookVisit setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (BookVisit) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public BookVisit setQuotaUser(java.lang.String quotaUser) {
      return (BookVisit) super.setQuotaUser(quotaUser);
    }

    @Override
    public BookVisit setUserIp(java.lang.String userIp) {
      return (BookVisit) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public BookVisit setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long projectId;

    /**

     */
    public java.lang.Long getProjectId() {
      return projectId;
    }

    public BookVisit setProjectId(java.lang.Long projectId) {
      this.projectId = projectId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public BookVisit setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public BookVisit setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long time;

    /**

     */
    public java.lang.Long getTime() {
      return time;
    }

    public BookVisit setTime(java.lang.Long time) {
      this.time = time;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public BookVisit setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long propertyId;

    /**

     */
    public java.lang.Long getPropertyId() {
      return propertyId;
    }

    public BookVisit setPropertyId(java.lang.Long propertyId) {
      this.propertyId = propertyId;
      return this;
    }

    @Override
    public BookVisit set(String parameterName, Object value) {
      return (BookVisit) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "callback".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link Callback#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.buy.housing.backend.userEndPoint.model.SearchCriteria}
   * @return the request
   */
  public Callback callback(com.buy.housing.backend.userEndPoint.model.SearchCriteria content) throws java.io.IOException {
    Callback result = new Callback(content);
    initialize(result);
    return result;
  }

  public class Callback extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "callback";

    /**
     * Create a request for the method "callback".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link Callback#execute()} method to invoke the remote operation.
     * <p> {@link
     * Callback#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.buy.housing.backend.userEndPoint.model.SearchCriteria}
     * @since 1.13
     */
    protected Callback(com.buy.housing.backend.userEndPoint.model.SearchCriteria content) {
      super(UserEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
    }

    @Override
    public Callback setAlt(java.lang.String alt) {
      return (Callback) super.setAlt(alt);
    }

    @Override
    public Callback setFields(java.lang.String fields) {
      return (Callback) super.setFields(fields);
    }

    @Override
    public Callback setKey(java.lang.String key) {
      return (Callback) super.setKey(key);
    }

    @Override
    public Callback setOauthToken(java.lang.String oauthToken) {
      return (Callback) super.setOauthToken(oauthToken);
    }

    @Override
    public Callback setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Callback) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Callback setQuotaUser(java.lang.String quotaUser) {
      return (Callback) super.setQuotaUser(quotaUser);
    }

    @Override
    public Callback setUserIp(java.lang.String userIp) {
      return (Callback) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long projectId;

    /**

     */
    public java.lang.Long getProjectId() {
      return projectId;
    }

    public Callback setProjectId(java.lang.Long projectId) {
      this.projectId = projectId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public Callback setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String source;

    /**

     */
    public java.lang.String getSource() {
      return source;
    }

    public Callback setSource(java.lang.String source) {
      this.source = source;
      return this;
    }

    @Override
    public Callback set(String parameterName, Object value) {
      return (Callback) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "changeCustomerNumber".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link ChangeCustomerNumber#execute()} method to invoke the remote
   * operation.
   *
   * @param oldNumber
   * @param newNumber
   * @return the request
   */
  public ChangeCustomerNumber changeCustomerNumber(java.lang.String oldNumber, java.lang.String newNumber) throws java.io.IOException {
    ChangeCustomerNumber result = new ChangeCustomerNumber(oldNumber, newNumber);
    initialize(result);
    return result;
  }

  public class ChangeCustomerNumber extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.AgentLoginResponse> {

    private static final String REST_PATH = "changeCustomerNumber/{oldNumber}/{newNumber}";

    /**
     * Create a request for the method "changeCustomerNumber".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link ChangeCustomerNumber#execute()} method to invoke the
     * remote operation. <p> {@link ChangeCustomerNumber#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param oldNumber
     * @param newNumber
     * @since 1.13
     */
    protected ChangeCustomerNumber(java.lang.String oldNumber, java.lang.String newNumber) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.AgentLoginResponse.class);
      this.oldNumber = com.google.api.client.util.Preconditions.checkNotNull(oldNumber, "Required parameter oldNumber must be specified.");
      this.newNumber = com.google.api.client.util.Preconditions.checkNotNull(newNumber, "Required parameter newNumber must be specified.");
    }

    @Override
    public ChangeCustomerNumber setAlt(java.lang.String alt) {
      return (ChangeCustomerNumber) super.setAlt(alt);
    }

    @Override
    public ChangeCustomerNumber setFields(java.lang.String fields) {
      return (ChangeCustomerNumber) super.setFields(fields);
    }

    @Override
    public ChangeCustomerNumber setKey(java.lang.String key) {
      return (ChangeCustomerNumber) super.setKey(key);
    }

    @Override
    public ChangeCustomerNumber setOauthToken(java.lang.String oauthToken) {
      return (ChangeCustomerNumber) super.setOauthToken(oauthToken);
    }

    @Override
    public ChangeCustomerNumber setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ChangeCustomerNumber) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ChangeCustomerNumber setQuotaUser(java.lang.String quotaUser) {
      return (ChangeCustomerNumber) super.setQuotaUser(quotaUser);
    }

    @Override
    public ChangeCustomerNumber setUserIp(java.lang.String userIp) {
      return (ChangeCustomerNumber) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String oldNumber;

    /**

     */
    public java.lang.String getOldNumber() {
      return oldNumber;
    }

    public ChangeCustomerNumber setOldNumber(java.lang.String oldNumber) {
      this.oldNumber = oldNumber;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String newNumber;

    /**

     */
    public java.lang.String getNewNumber() {
      return newNumber;
    }

    public ChangeCustomerNumber setNewNumber(java.lang.String newNumber) {
      this.newNumber = newNumber;
      return this;
    }

    @Override
    public ChangeCustomerNumber set(String parameterName, Object value) {
      return (ChangeCustomerNumber) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "changePassword".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link ChangePassword#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param newPassword
   * @return the request
   */
  public ChangePassword changePassword(java.lang.Long id, java.lang.String newPassword) throws java.io.IOException {
    ChangePassword result = new ChangePassword(id, newPassword);
    initialize(result);
    return result;
  }

  public class ChangePassword extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "changePassword/{id}/{newPassword}";

    /**
     * Create a request for the method "changePassword".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link ChangePassword#execute()} method to invoke the remote
     * operation. <p> {@link ChangePassword#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @param newPassword
     * @since 1.13
     */
    protected ChangePassword(java.lang.Long id, java.lang.String newPassword) {
      super(UserEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.newPassword = com.google.api.client.util.Preconditions.checkNotNull(newPassword, "Required parameter newPassword must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ChangePassword setAlt(java.lang.String alt) {
      return (ChangePassword) super.setAlt(alt);
    }

    @Override
    public ChangePassword setFields(java.lang.String fields) {
      return (ChangePassword) super.setFields(fields);
    }

    @Override
    public ChangePassword setKey(java.lang.String key) {
      return (ChangePassword) super.setKey(key);
    }

    @Override
    public ChangePassword setOauthToken(java.lang.String oauthToken) {
      return (ChangePassword) super.setOauthToken(oauthToken);
    }

    @Override
    public ChangePassword setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ChangePassword) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ChangePassword setQuotaUser(java.lang.String quotaUser) {
      return (ChangePassword) super.setQuotaUser(quotaUser);
    }

    @Override
    public ChangePassword setUserIp(java.lang.String userIp) {
      return (ChangePassword) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public ChangePassword setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String newPassword;

    /**

     */
    public java.lang.String getNewPassword() {
      return newPassword;
    }

    public ChangePassword setNewPassword(java.lang.String newPassword) {
      this.newPassword = newPassword;
      return this;
    }

    @Override
    public ChangePassword set(String parameterName, Object value) {
      return (ChangePassword) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteFavouriteProject".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link DeleteFavouriteProject#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @param projectId
   * @return the request
   */
  public DeleteFavouriteProject deleteFavouriteProject(java.lang.Long id, java.lang.Long projectId) throws java.io.IOException {
    DeleteFavouriteProject result = new DeleteFavouriteProject(id, projectId);
    initialize(result);
    return result;
  }

  public class DeleteFavouriteProject extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "favouriteproject/{id}/{projectId}";

    /**
     * Create a request for the method "deleteFavouriteProject".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link DeleteFavouriteProject#execute()} method to invoke the
     * remote operation. <p> {@link DeleteFavouriteProject#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @param projectId
     * @since 1.13
     */
    protected DeleteFavouriteProject(java.lang.Long id, java.lang.Long projectId) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
    }

    @Override
    public DeleteFavouriteProject setAlt(java.lang.String alt) {
      return (DeleteFavouriteProject) super.setAlt(alt);
    }

    @Override
    public DeleteFavouriteProject setFields(java.lang.String fields) {
      return (DeleteFavouriteProject) super.setFields(fields);
    }

    @Override
    public DeleteFavouriteProject setKey(java.lang.String key) {
      return (DeleteFavouriteProject) super.setKey(key);
    }

    @Override
    public DeleteFavouriteProject setOauthToken(java.lang.String oauthToken) {
      return (DeleteFavouriteProject) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteFavouriteProject setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteFavouriteProject) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteFavouriteProject setQuotaUser(java.lang.String quotaUser) {
      return (DeleteFavouriteProject) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteFavouriteProject setUserIp(java.lang.String userIp) {
      return (DeleteFavouriteProject) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public DeleteFavouriteProject setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long projectId;

    /**

     */
    public java.lang.Long getProjectId() {
      return projectId;
    }

    public DeleteFavouriteProject setProjectId(java.lang.Long projectId) {
      this.projectId = projectId;
      return this;
    }

    @Override
    public DeleteFavouriteProject set(String parameterName, Object value) {
      return (DeleteFavouriteProject) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteLeadAndTasks".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link DeleteLeadAndTasks#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public DeleteLeadAndTasks deleteLeadAndTasks(java.lang.Long id) throws java.io.IOException {
    DeleteLeadAndTasks result = new DeleteLeadAndTasks(id);
    initialize(result);
    return result;
  }

  public class DeleteLeadAndTasks extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "leadandtasks/{id}";

    /**
     * Create a request for the method "deleteLeadAndTasks".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link DeleteLeadAndTasks#execute()} method to invoke the remote
     * operation. <p> {@link DeleteLeadAndTasks#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected DeleteLeadAndTasks(java.lang.Long id) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public DeleteLeadAndTasks setAlt(java.lang.String alt) {
      return (DeleteLeadAndTasks) super.setAlt(alt);
    }

    @Override
    public DeleteLeadAndTasks setFields(java.lang.String fields) {
      return (DeleteLeadAndTasks) super.setFields(fields);
    }

    @Override
    public DeleteLeadAndTasks setKey(java.lang.String key) {
      return (DeleteLeadAndTasks) super.setKey(key);
    }

    @Override
    public DeleteLeadAndTasks setOauthToken(java.lang.String oauthToken) {
      return (DeleteLeadAndTasks) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteLeadAndTasks setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteLeadAndTasks) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteLeadAndTasks setQuotaUser(java.lang.String quotaUser) {
      return (DeleteLeadAndTasks) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteLeadAndTasks setUserIp(java.lang.String userIp) {
      return (DeleteLeadAndTasks) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public DeleteLeadAndTasks setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public DeleteLeadAndTasks set(String parameterName, Object value) {
      return (DeleteLeadAndTasks) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteSearchCriteria".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link DeleteSearchCriteria#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @param content the {@link com.buy.housing.backend.userEndPoint.model.SearchCriteria}
   * @return the request
   */
  public DeleteSearchCriteria deleteSearchCriteria(java.lang.Long id, com.buy.housing.backend.userEndPoint.model.SearchCriteria content) throws java.io.IOException {
    DeleteSearchCriteria result = new DeleteSearchCriteria(id, content);
    initialize(result);
    return result;
  }

  public class DeleteSearchCriteria extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "searchcriteria/{id}";

    /**
     * Create a request for the method "deleteSearchCriteria".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link DeleteSearchCriteria#execute()} method to invoke the
     * remote operation. <p> {@link DeleteSearchCriteria#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @param content the {@link com.buy.housing.backend.userEndPoint.model.SearchCriteria}
     * @since 1.13
     */
    protected DeleteSearchCriteria(java.lang.Long id, com.buy.housing.backend.userEndPoint.model.SearchCriteria content) {
      super(UserEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public DeleteSearchCriteria setAlt(java.lang.String alt) {
      return (DeleteSearchCriteria) super.setAlt(alt);
    }

    @Override
    public DeleteSearchCriteria setFields(java.lang.String fields) {
      return (DeleteSearchCriteria) super.setFields(fields);
    }

    @Override
    public DeleteSearchCriteria setKey(java.lang.String key) {
      return (DeleteSearchCriteria) super.setKey(key);
    }

    @Override
    public DeleteSearchCriteria setOauthToken(java.lang.String oauthToken) {
      return (DeleteSearchCriteria) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteSearchCriteria setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteSearchCriteria) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteSearchCriteria setQuotaUser(java.lang.String quotaUser) {
      return (DeleteSearchCriteria) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteSearchCriteria setUserIp(java.lang.String userIp) {
      return (DeleteSearchCriteria) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public DeleteSearchCriteria setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public DeleteSearchCriteria set(String parameterName, Object value) {
      return (DeleteSearchCriteria) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteSearchCriteriaList".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link DeleteSearchCriteriaList#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @param content the {@link com.buy.housing.backend.userEndPoint.model.SearchCriteriaNameList}
   * @return the request
   */
  public DeleteSearchCriteriaList deleteSearchCriteriaList(java.lang.Long id, com.buy.housing.backend.userEndPoint.model.SearchCriteriaNameList content) throws java.io.IOException {
    DeleteSearchCriteriaList result = new DeleteSearchCriteriaList(id, content);
    initialize(result);
    return result;
  }

  public class DeleteSearchCriteriaList extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "searchcriterialist/{id}";

    /**
     * Create a request for the method "deleteSearchCriteriaList".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link DeleteSearchCriteriaList#execute()} method to invoke the
     * remote operation. <p> {@link DeleteSearchCriteriaList#initialize(com.google.api.client.googleap
     * is.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param id
     * @param content the {@link com.buy.housing.backend.userEndPoint.model.SearchCriteriaNameList}
     * @since 1.13
     */
    protected DeleteSearchCriteriaList(java.lang.Long id, com.buy.housing.backend.userEndPoint.model.SearchCriteriaNameList content) {
      super(UserEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public DeleteSearchCriteriaList setAlt(java.lang.String alt) {
      return (DeleteSearchCriteriaList) super.setAlt(alt);
    }

    @Override
    public DeleteSearchCriteriaList setFields(java.lang.String fields) {
      return (DeleteSearchCriteriaList) super.setFields(fields);
    }

    @Override
    public DeleteSearchCriteriaList setKey(java.lang.String key) {
      return (DeleteSearchCriteriaList) super.setKey(key);
    }

    @Override
    public DeleteSearchCriteriaList setOauthToken(java.lang.String oauthToken) {
      return (DeleteSearchCriteriaList) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteSearchCriteriaList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteSearchCriteriaList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteSearchCriteriaList setQuotaUser(java.lang.String quotaUser) {
      return (DeleteSearchCriteriaList) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteSearchCriteriaList setUserIp(java.lang.String userIp) {
      return (DeleteSearchCriteriaList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public DeleteSearchCriteriaList setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public DeleteSearchCriteriaList set(String parameterName, Object value) {
      return (DeleteSearchCriteriaList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteUserLeadAndTasks".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link DeleteUserLeadAndTasks#execute()} method to invoke the remote
   * operation.
   *
   * @param phone
   * @return the request
   */
  public DeleteUserLeadAndTasks deleteUserLeadAndTasks(java.lang.String phone) throws java.io.IOException {
    DeleteUserLeadAndTasks result = new DeleteUserLeadAndTasks(phone);
    initialize(result);
    return result;
  }

  public class DeleteUserLeadAndTasks extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "userleadandtasks/{phone}";

    /**
     * Create a request for the method "deleteUserLeadAndTasks".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link DeleteUserLeadAndTasks#execute()} method to invoke the
     * remote operation. <p> {@link DeleteUserLeadAndTasks#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param phone
     * @since 1.13
     */
    protected DeleteUserLeadAndTasks(java.lang.String phone) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.phone = com.google.api.client.util.Preconditions.checkNotNull(phone, "Required parameter phone must be specified.");
    }

    @Override
    public DeleteUserLeadAndTasks setAlt(java.lang.String alt) {
      return (DeleteUserLeadAndTasks) super.setAlt(alt);
    }

    @Override
    public DeleteUserLeadAndTasks setFields(java.lang.String fields) {
      return (DeleteUserLeadAndTasks) super.setFields(fields);
    }

    @Override
    public DeleteUserLeadAndTasks setKey(java.lang.String key) {
      return (DeleteUserLeadAndTasks) super.setKey(key);
    }

    @Override
    public DeleteUserLeadAndTasks setOauthToken(java.lang.String oauthToken) {
      return (DeleteUserLeadAndTasks) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteUserLeadAndTasks setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteUserLeadAndTasks) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteUserLeadAndTasks setQuotaUser(java.lang.String quotaUser) {
      return (DeleteUserLeadAndTasks) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteUserLeadAndTasks setUserIp(java.lang.String userIp) {
      return (DeleteUserLeadAndTasks) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public DeleteUserLeadAndTasks setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @Override
    public DeleteUserLeadAndTasks set(String parameterName, Object value) {
      return (DeleteUserLeadAndTasks) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "favouriteProjectList".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link FavouriteProjectList#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public FavouriteProjectList favouriteProjectList(java.lang.Long id) throws java.io.IOException {
    FavouriteProjectList result = new FavouriteProjectList(id);
    initialize(result);
    return result;
  }

  public class FavouriteProjectList extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.PropertySearchResponse> {

    private static final String REST_PATH = "favouriteProjectList/{id}";

    /**
     * Create a request for the method "favouriteProjectList".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link FavouriteProjectList#execute()} method to invoke the
     * remote operation. <p> {@link FavouriteProjectList#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected FavouriteProjectList(java.lang.Long id) {
      super(UserEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.PropertySearchResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public FavouriteProjectList setAlt(java.lang.String alt) {
      return (FavouriteProjectList) super.setAlt(alt);
    }

    @Override
    public FavouriteProjectList setFields(java.lang.String fields) {
      return (FavouriteProjectList) super.setFields(fields);
    }

    @Override
    public FavouriteProjectList setKey(java.lang.String key) {
      return (FavouriteProjectList) super.setKey(key);
    }

    @Override
    public FavouriteProjectList setOauthToken(java.lang.String oauthToken) {
      return (FavouriteProjectList) super.setOauthToken(oauthToken);
    }

    @Override
    public FavouriteProjectList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (FavouriteProjectList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public FavouriteProjectList setQuotaUser(java.lang.String quotaUser) {
      return (FavouriteProjectList) super.setQuotaUser(quotaUser);
    }

    @Override
    public FavouriteProjectList setUserIp(java.lang.String userIp) {
      return (FavouriteProjectList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public FavouriteProjectList setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer offset;

    /**

     */
    public java.lang.Integer getOffset() {
      return offset;
    }

    public FavouriteProjectList setOffset(java.lang.Integer offset) {
      this.offset = offset;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public FavouriteProjectList setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public FavouriteProjectList set(String parameterName, Object value) {
      return (FavouriteProjectList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "forgotPassword".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link ForgotPassword#execute()} method to invoke the remote operation.
   *
   * @param email
   * @return the request
   */
  public ForgotPassword forgotPassword(java.lang.String email) throws java.io.IOException {
    ForgotPassword result = new ForgotPassword(email);
    initialize(result);
    return result;
  }

  public class ForgotPassword extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "forgotPassword/{email}";

    /**
     * Create a request for the method "forgotPassword".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link ForgotPassword#execute()} method to invoke the remote
     * operation. <p> {@link ForgotPassword#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param email
     * @since 1.13
     */
    protected ForgotPassword(java.lang.String email) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
    }

    @Override
    public ForgotPassword setAlt(java.lang.String alt) {
      return (ForgotPassword) super.setAlt(alt);
    }

    @Override
    public ForgotPassword setFields(java.lang.String fields) {
      return (ForgotPassword) super.setFields(fields);
    }

    @Override
    public ForgotPassword setKey(java.lang.String key) {
      return (ForgotPassword) super.setKey(key);
    }

    @Override
    public ForgotPassword setOauthToken(java.lang.String oauthToken) {
      return (ForgotPassword) super.setOauthToken(oauthToken);
    }

    @Override
    public ForgotPassword setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ForgotPassword) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ForgotPassword setQuotaUser(java.lang.String quotaUser) {
      return (ForgotPassword) super.setQuotaUser(quotaUser);
    }

    @Override
    public ForgotPassword setUserIp(java.lang.String userIp) {
      return (ForgotPassword) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public ForgotPassword setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String countrySTDCode;

    /**

     */
    public java.lang.String getCountrySTDCode() {
      return countrySTDCode;
    }

    public ForgotPassword setCountrySTDCode(java.lang.String countrySTDCode) {
      this.countrySTDCode = countrySTDCode;
      return this;
    }

    @Override
    public ForgotPassword set(String parameterName, Object value) {
      return (ForgotPassword) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getAgentById".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link GetAgentById#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param agentId
   * @return the request
   */
  public GetAgentById getAgentById(java.lang.Long id, java.lang.Long agentId) throws java.io.IOException {
    GetAgentById result = new GetAgentById(id, agentId);
    initialize(result);
    return result;
  }

  public class GetAgentById extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.Agent> {

    private static final String REST_PATH = "agent/{id}/{agentId}";

    /**
     * Create a request for the method "getAgentById".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link GetAgentById#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetAgentById#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param agentId
     * @since 1.13
     */
    protected GetAgentById(java.lang.Long id, java.lang.Long agentId) {
      super(UserEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.Agent.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.agentId = com.google.api.client.util.Preconditions.checkNotNull(agentId, "Required parameter agentId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetAgentById setAlt(java.lang.String alt) {
      return (GetAgentById) super.setAlt(alt);
    }

    @Override
    public GetAgentById setFields(java.lang.String fields) {
      return (GetAgentById) super.setFields(fields);
    }

    @Override
    public GetAgentById setKey(java.lang.String key) {
      return (GetAgentById) super.setKey(key);
    }

    @Override
    public GetAgentById setOauthToken(java.lang.String oauthToken) {
      return (GetAgentById) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAgentById setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAgentById) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAgentById setQuotaUser(java.lang.String quotaUser) {
      return (GetAgentById) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAgentById setUserIp(java.lang.String userIp) {
      return (GetAgentById) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetAgentById setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long agentId;

    /**

     */
    public java.lang.Long getAgentId() {
      return agentId;
    }

    public GetAgentById setAgentId(java.lang.Long agentId) {
      this.agentId = agentId;
      return this;
    }

    @Override
    public GetAgentById set(String parameterName, Object value) {
      return (GetAgentById) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getCityListAll".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link GetCityListAll#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetCityListAll getCityListAll() throws java.io.IOException {
    GetCityListAll result = new GetCityListAll();
    initialize(result);
    return result;
  }

  public class GetCityListAll extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CityCollection> {

    private static final String REST_PATH = "citycollection";

    /**
     * Create a request for the method "getCityListAll".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link GetCityListAll#execute()} method to invoke the remote
     * operation. <p> {@link GetCityListAll#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected GetCityListAll() {
      super(UserEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CityCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetCityListAll setAlt(java.lang.String alt) {
      return (GetCityListAll) super.setAlt(alt);
    }

    @Override
    public GetCityListAll setFields(java.lang.String fields) {
      return (GetCityListAll) super.setFields(fields);
    }

    @Override
    public GetCityListAll setKey(java.lang.String key) {
      return (GetCityListAll) super.setKey(key);
    }

    @Override
    public GetCityListAll setOauthToken(java.lang.String oauthToken) {
      return (GetCityListAll) super.setOauthToken(oauthToken);
    }

    @Override
    public GetCityListAll setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetCityListAll) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetCityListAll setQuotaUser(java.lang.String quotaUser) {
      return (GetCityListAll) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetCityListAll setUserIp(java.lang.String userIp) {
      return (GetCityListAll) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean live;

    /**

     */
    public java.lang.Boolean getLive() {
      return live;
    }

    public GetCityListAll setLive(java.lang.Boolean live) {
      this.live = live;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean estimate;

    /**

     */
    public java.lang.Boolean getEstimate() {
      return estimate;
    }

    public GetCityListAll setEstimate(java.lang.Boolean estimate) {
      this.estimate = estimate;
      return this;
    }

    @Override
    public GetCityListAll set(String parameterName, Object value) {
      return (GetCityListAll) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getConciergeAndAgent".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link GetConciergeAndAgent#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetConciergeAndAgent getConciergeAndAgent(java.lang.Long id) throws java.io.IOException {
    GetConciergeAndAgent result = new GetConciergeAndAgent(id);
    initialize(result);
    return result;
  }

  public class GetConciergeAndAgent extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.GetConciergeAndAgentResponse> {

    private static final String REST_PATH = "getconciergeandagentresponse/{id}";

    /**
     * Create a request for the method "getConciergeAndAgent".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link GetConciergeAndAgent#execute()} method to invoke the
     * remote operation. <p> {@link GetConciergeAndAgent#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetConciergeAndAgent(java.lang.Long id) {
      super(UserEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.GetConciergeAndAgentResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetConciergeAndAgent setAlt(java.lang.String alt) {
      return (GetConciergeAndAgent) super.setAlt(alt);
    }

    @Override
    public GetConciergeAndAgent setFields(java.lang.String fields) {
      return (GetConciergeAndAgent) super.setFields(fields);
    }

    @Override
    public GetConciergeAndAgent setKey(java.lang.String key) {
      return (GetConciergeAndAgent) super.setKey(key);
    }

    @Override
    public GetConciergeAndAgent setOauthToken(java.lang.String oauthToken) {
      return (GetConciergeAndAgent) super.setOauthToken(oauthToken);
    }

    @Override
    public GetConciergeAndAgent setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetConciergeAndAgent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetConciergeAndAgent setQuotaUser(java.lang.String quotaUser) {
      return (GetConciergeAndAgent) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetConciergeAndAgent setUserIp(java.lang.String userIp) {
      return (GetConciergeAndAgent) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetConciergeAndAgent setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetConciergeAndAgent set(String parameterName, Object value) {
      return (GetConciergeAndAgent) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getFavouriteProjectList".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link GetFavouriteProjectList#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetFavouriteProjectList getFavouriteProjectList(java.lang.Long id) throws java.io.IOException {
    GetFavouriteProjectList result = new GetFavouriteProjectList(id);
    initialize(result);
    return result;
  }

  public class GetFavouriteProjectList extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.SearchPropertyCollection> {

    private static final String REST_PATH = "searchpropertycollection/{id}";

    /**
     * Create a request for the method "getFavouriteProjectList".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link GetFavouriteProjectList#execute()} method to invoke the
     * remote operation. <p> {@link GetFavouriteProjectList#initialize(com.google.api.client.googleapi
     * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetFavouriteProjectList(java.lang.Long id) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.SearchPropertyCollection.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public GetFavouriteProjectList setAlt(java.lang.String alt) {
      return (GetFavouriteProjectList) super.setAlt(alt);
    }

    @Override
    public GetFavouriteProjectList setFields(java.lang.String fields) {
      return (GetFavouriteProjectList) super.setFields(fields);
    }

    @Override
    public GetFavouriteProjectList setKey(java.lang.String key) {
      return (GetFavouriteProjectList) super.setKey(key);
    }

    @Override
    public GetFavouriteProjectList setOauthToken(java.lang.String oauthToken) {
      return (GetFavouriteProjectList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetFavouriteProjectList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetFavouriteProjectList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetFavouriteProjectList setQuotaUser(java.lang.String quotaUser) {
      return (GetFavouriteProjectList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetFavouriteProjectList setUserIp(java.lang.String userIp) {
      return (GetFavouriteProjectList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetFavouriteProjectList setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer offset;

    /**

     */
    public java.lang.Integer getOffset() {
      return offset;
    }

    public GetFavouriteProjectList setOffset(java.lang.Integer offset) {
      this.offset = offset;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public GetFavouriteProjectList setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public GetFavouriteProjectList set(String parameterName, Object value) {
      return (GetFavouriteProjectList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMyConcierge".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link GetMyConcierge#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetMyConcierge getMyConcierge(java.lang.Long id) throws java.io.IOException {
    GetMyConcierge result = new GetMyConcierge(id);
    initialize(result);
    return result;
  }

  public class GetMyConcierge extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.Agent> {

    private static final String REST_PATH = "agent/{id}";

    /**
     * Create a request for the method "getMyConcierge".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link GetMyConcierge#execute()} method to invoke the remote
     * operation. <p> {@link GetMyConcierge#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetMyConcierge(java.lang.Long id) {
      super(UserEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.Agent.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMyConcierge setAlt(java.lang.String alt) {
      return (GetMyConcierge) super.setAlt(alt);
    }

    @Override
    public GetMyConcierge setFields(java.lang.String fields) {
      return (GetMyConcierge) super.setFields(fields);
    }

    @Override
    public GetMyConcierge setKey(java.lang.String key) {
      return (GetMyConcierge) super.setKey(key);
    }

    @Override
    public GetMyConcierge setOauthToken(java.lang.String oauthToken) {
      return (GetMyConcierge) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMyConcierge setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMyConcierge) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMyConcierge setQuotaUser(java.lang.String quotaUser) {
      return (GetMyConcierge) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMyConcierge setUserIp(java.lang.String userIp) {
      return (GetMyConcierge) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetMyConcierge setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetMyConcierge set(String parameterName, Object value) {
      return (GetMyConcierge) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMyPropertyList".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link GetMyPropertyList#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetMyPropertyList getMyPropertyList(java.lang.Long id) throws java.io.IOException {
    GetMyPropertyList result = new GetMyPropertyList(id);
    initialize(result);
    return result;
  }

  public class GetMyPropertyList extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.GetMyPropertyListResponse> {

    private static final String REST_PATH = "getmypropertylistresponse/{id}";

    /**
     * Create a request for the method "getMyPropertyList".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link GetMyPropertyList#execute()} method to invoke the remote
     * operation. <p> {@link GetMyPropertyList#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetMyPropertyList(java.lang.Long id) {
      super(UserEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.GetMyPropertyListResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMyPropertyList setAlt(java.lang.String alt) {
      return (GetMyPropertyList) super.setAlt(alt);
    }

    @Override
    public GetMyPropertyList setFields(java.lang.String fields) {
      return (GetMyPropertyList) super.setFields(fields);
    }

    @Override
    public GetMyPropertyList setKey(java.lang.String key) {
      return (GetMyPropertyList) super.setKey(key);
    }

    @Override
    public GetMyPropertyList setOauthToken(java.lang.String oauthToken) {
      return (GetMyPropertyList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMyPropertyList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMyPropertyList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMyPropertyList setQuotaUser(java.lang.String quotaUser) {
      return (GetMyPropertyList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMyPropertyList setUserIp(java.lang.String userIp) {
      return (GetMyPropertyList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetMyPropertyList setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean loaninfo;

    /**

     */
    public java.lang.Boolean getLoaninfo() {
      return loaninfo;
    }

    public GetMyPropertyList setLoaninfo(java.lang.Boolean loaninfo) {
      this.loaninfo = loaninfo;
      return this;
    }

    @Override
    public GetMyPropertyList set(String parameterName, Object value) {
      return (GetMyPropertyList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMyTaskList".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link GetMyTaskList#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetMyTaskList getMyTaskList(java.lang.Long id) throws java.io.IOException {
    GetMyTaskList result = new GetMyTaskList(id);
    initialize(result);
    return result;
  }

  public class GetMyTaskList extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.TaskCollection> {

    private static final String REST_PATH = "taskcollection/{id}";

    /**
     * Create a request for the method "getMyTaskList".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link GetMyTaskList#execute()} method to invoke the remote
     * operation. <p> {@link GetMyTaskList#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetMyTaskList(java.lang.Long id) {
      super(UserEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.TaskCollection.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMyTaskList setAlt(java.lang.String alt) {
      return (GetMyTaskList) super.setAlt(alt);
    }

    @Override
    public GetMyTaskList setFields(java.lang.String fields) {
      return (GetMyTaskList) super.setFields(fields);
    }

    @Override
    public GetMyTaskList setKey(java.lang.String key) {
      return (GetMyTaskList) super.setKey(key);
    }

    @Override
    public GetMyTaskList setOauthToken(java.lang.String oauthToken) {
      return (GetMyTaskList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMyTaskList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMyTaskList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMyTaskList setQuotaUser(java.lang.String quotaUser) {
      return (GetMyTaskList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMyTaskList setUserIp(java.lang.String userIp) {
      return (GetMyTaskList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetMyTaskList setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long bookingId;

    /**

     */
    public java.lang.Long getBookingId() {
      return bookingId;
    }

    public GetMyTaskList setBookingId(java.lang.Long bookingId) {
      this.bookingId = bookingId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String taskCategory;

    /**

     */
    public java.lang.String getTaskCategory() {
      return taskCategory;
    }

    public GetMyTaskList setTaskCategory(java.lang.String taskCategory) {
      this.taskCategory = taskCategory;
      return this;
    }

    @Override
    public GetMyTaskList set(String parameterName, Object value) {
      return (GetMyTaskList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getPropertyDetail".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link GetPropertyDetail#execute()} method to invoke the remote operation.
   *
   * @param propertyId
   * @return the request
   */
  public GetPropertyDetail getPropertyDetail(java.lang.Long propertyId) throws java.io.IOException {
    GetPropertyDetail result = new GetPropertyDetail(propertyId);
    initialize(result);
    return result;
  }

  public class GetPropertyDetail extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.GetPropertyDetailResponse> {

    private static final String REST_PATH = "getpropertydetailresponse/{propertyId}";

    /**
     * Create a request for the method "getPropertyDetail".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link GetPropertyDetail#execute()} method to invoke the remote
     * operation. <p> {@link GetPropertyDetail#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param propertyId
     * @since 1.13
     */
    protected GetPropertyDetail(java.lang.Long propertyId) {
      super(UserEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.GetPropertyDetailResponse.class);
      this.propertyId = com.google.api.client.util.Preconditions.checkNotNull(propertyId, "Required parameter propertyId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetPropertyDetail setAlt(java.lang.String alt) {
      return (GetPropertyDetail) super.setAlt(alt);
    }

    @Override
    public GetPropertyDetail setFields(java.lang.String fields) {
      return (GetPropertyDetail) super.setFields(fields);
    }

    @Override
    public GetPropertyDetail setKey(java.lang.String key) {
      return (GetPropertyDetail) super.setKey(key);
    }

    @Override
    public GetPropertyDetail setOauthToken(java.lang.String oauthToken) {
      return (GetPropertyDetail) super.setOauthToken(oauthToken);
    }

    @Override
    public GetPropertyDetail setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetPropertyDetail) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetPropertyDetail setQuotaUser(java.lang.String quotaUser) {
      return (GetPropertyDetail) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetPropertyDetail setUserIp(java.lang.String userIp) {
      return (GetPropertyDetail) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long propertyId;

    /**

     */
    public java.lang.Long getPropertyId() {
      return propertyId;
    }

    public GetPropertyDetail setPropertyId(java.lang.Long propertyId) {
      this.propertyId = propertyId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean loaninfo;

    /**

     */
    public java.lang.Boolean getLoaninfo() {
      return loaninfo;
    }

    public GetPropertyDetail setLoaninfo(java.lang.Boolean loaninfo) {
      this.loaninfo = loaninfo;
      return this;
    }

    @Override
    public GetPropertyDetail set(String parameterName, Object value) {
      return (GetPropertyDetail) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getSearchCriteriaList".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link GetSearchCriteriaList#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetSearchCriteriaList getSearchCriteriaList(java.lang.Long id) throws java.io.IOException {
    GetSearchCriteriaList result = new GetSearchCriteriaList(id);
    initialize(result);
    return result;
  }

  public class GetSearchCriteriaList extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.SearchCriteriaCollection> {

    private static final String REST_PATH = "searchcriteriacollection/{id}";

    /**
     * Create a request for the method "getSearchCriteriaList".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link GetSearchCriteriaList#execute()} method to invoke the
     * remote operation. <p> {@link GetSearchCriteriaList#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetSearchCriteriaList(java.lang.Long id) {
      super(UserEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.SearchCriteriaCollection.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetSearchCriteriaList setAlt(java.lang.String alt) {
      return (GetSearchCriteriaList) super.setAlt(alt);
    }

    @Override
    public GetSearchCriteriaList setFields(java.lang.String fields) {
      return (GetSearchCriteriaList) super.setFields(fields);
    }

    @Override
    public GetSearchCriteriaList setKey(java.lang.String key) {
      return (GetSearchCriteriaList) super.setKey(key);
    }

    @Override
    public GetSearchCriteriaList setOauthToken(java.lang.String oauthToken) {
      return (GetSearchCriteriaList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetSearchCriteriaList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetSearchCriteriaList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetSearchCriteriaList setQuotaUser(java.lang.String quotaUser) {
      return (GetSearchCriteriaList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetSearchCriteriaList setUserIp(java.lang.String userIp) {
      return (GetSearchCriteriaList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetSearchCriteriaList setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetSearchCriteriaList set(String parameterName, Object value) {
      return (GetSearchCriteriaList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTaskFromUserIdAndProjectId".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link GetTaskFromUserIdAndProjectId#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @param projectId
   * @return the request
   */
  public GetTaskFromUserIdAndProjectId getTaskFromUserIdAndProjectId(java.lang.Long id, java.lang.Long projectId) throws java.io.IOException {
    GetTaskFromUserIdAndProjectId result = new GetTaskFromUserIdAndProjectId(id, projectId);
    initialize(result);
    return result;
  }

  public class GetTaskFromUserIdAndProjectId extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.Task> {

    private static final String REST_PATH = "task/{id}/{projectId}";

    /**
     * Create a request for the method "getTaskFromUserIdAndProjectId".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link GetTaskFromUserIdAndProjectId#execute()} method to invoke
     * the remote operation. <p> {@link GetTaskFromUserIdAndProjectId#initialize(com.google.api.client
     * .googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param id
     * @param projectId
     * @since 1.13
     */
    protected GetTaskFromUserIdAndProjectId(java.lang.Long id, java.lang.Long projectId) {
      super(UserEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.Task.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetTaskFromUserIdAndProjectId setAlt(java.lang.String alt) {
      return (GetTaskFromUserIdAndProjectId) super.setAlt(alt);
    }

    @Override
    public GetTaskFromUserIdAndProjectId setFields(java.lang.String fields) {
      return (GetTaskFromUserIdAndProjectId) super.setFields(fields);
    }

    @Override
    public GetTaskFromUserIdAndProjectId setKey(java.lang.String key) {
      return (GetTaskFromUserIdAndProjectId) super.setKey(key);
    }

    @Override
    public GetTaskFromUserIdAndProjectId setOauthToken(java.lang.String oauthToken) {
      return (GetTaskFromUserIdAndProjectId) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTaskFromUserIdAndProjectId setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTaskFromUserIdAndProjectId) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTaskFromUserIdAndProjectId setQuotaUser(java.lang.String quotaUser) {
      return (GetTaskFromUserIdAndProjectId) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTaskFromUserIdAndProjectId setUserIp(java.lang.String userIp) {
      return (GetTaskFromUserIdAndProjectId) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetTaskFromUserIdAndProjectId setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long projectId;

    /**

     */
    public java.lang.Long getProjectId() {
      return projectId;
    }

    public GetTaskFromUserIdAndProjectId setProjectId(java.lang.Long projectId) {
      this.projectId = projectId;
      return this;
    }

    @Override
    public GetTaskFromUserIdAndProjectId set(String parameterName, Object value) {
      return (GetTaskFromUserIdAndProjectId) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUserCount".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link GetUserCount#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetUserCount getUserCount() throws java.io.IOException {
    GetUserCount result = new GetUserCount();
    initialize(result);
    return result;
  }

  public class GetUserCount extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.UserCountResponse> {

    private static final String REST_PATH = "usercountresponse";

    /**
     * Create a request for the method "getUserCount".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link GetUserCount#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetUserCount#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetUserCount() {
      super(UserEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.UserCountResponse.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUserCount setAlt(java.lang.String alt) {
      return (GetUserCount) super.setAlt(alt);
    }

    @Override
    public GetUserCount setFields(java.lang.String fields) {
      return (GetUserCount) super.setFields(fields);
    }

    @Override
    public GetUserCount setKey(java.lang.String key) {
      return (GetUserCount) super.setKey(key);
    }

    @Override
    public GetUserCount setOauthToken(java.lang.String oauthToken) {
      return (GetUserCount) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUserCount setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUserCount) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUserCount setQuotaUser(java.lang.String quotaUser) {
      return (GetUserCount) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUserCount setUserIp(java.lang.String userIp) {
      return (GetUserCount) super.setUserIp(userIp);
    }

    @Override
    public GetUserCount set(String parameterName, Object value) {
      return (GetUserCount) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUserNotificationList".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link GetUserNotificationList#execute()} method to invoke the remote
   * operation.
   *
   * @param userId
   * @return the request
   */
  public GetUserNotificationList getUserNotificationList(java.lang.Long userId) throws java.io.IOException {
    GetUserNotificationList result = new GetUserNotificationList(userId);
    initialize(result);
    return result;
  }

  public class GetUserNotificationList extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.UserNotificationCollection> {

    private static final String REST_PATH = "usernotificationcollection/{userId}";

    /**
     * Create a request for the method "getUserNotificationList".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link GetUserNotificationList#execute()} method to invoke the
     * remote operation. <p> {@link GetUserNotificationList#initialize(com.google.api.client.googleapi
     * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param userId
     * @since 1.13
     */
    protected GetUserNotificationList(java.lang.Long userId) {
      super(UserEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.UserNotificationCollection.class);
      this.userId = com.google.api.client.util.Preconditions.checkNotNull(userId, "Required parameter userId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUserNotificationList setAlt(java.lang.String alt) {
      return (GetUserNotificationList) super.setAlt(alt);
    }

    @Override
    public GetUserNotificationList setFields(java.lang.String fields) {
      return (GetUserNotificationList) super.setFields(fields);
    }

    @Override
    public GetUserNotificationList setKey(java.lang.String key) {
      return (GetUserNotificationList) super.setKey(key);
    }

    @Override
    public GetUserNotificationList setOauthToken(java.lang.String oauthToken) {
      return (GetUserNotificationList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUserNotificationList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUserNotificationList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUserNotificationList setQuotaUser(java.lang.String quotaUser) {
      return (GetUserNotificationList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUserNotificationList setUserIp(java.lang.String userIp) {
      return (GetUserNotificationList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long userId;

    /**

     */
    public java.lang.Long getUserId() {
      return userId;
    }

    public GetUserNotificationList setUserId(java.lang.Long userId) {
      this.userId = userId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long time;

    /**

     */
    public java.lang.Long getTime() {
      return time;
    }

    public GetUserNotificationList setTime(java.lang.Long time) {
      this.time = time;
      return this;
    }

    @Override
    public GetUserNotificationList set(String parameterName, Object value) {
      return (GetUserNotificationList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUserProfileResponse".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link GetUserProfileResponse#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetUserProfileResponse getUserProfileResponse(java.lang.Long id) throws java.io.IOException {
    GetUserProfileResponse result = new GetUserProfileResponse(id);
    initialize(result);
    return result;
  }

  public class GetUserProfileResponse extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.UserProfileResponse> {

    private static final String REST_PATH = "userprofileresponse/{id}";

    /**
     * Create a request for the method "getUserProfileResponse".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link GetUserProfileResponse#execute()} method to invoke the
     * remote operation. <p> {@link GetUserProfileResponse#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetUserProfileResponse(java.lang.Long id) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.UserProfileResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public GetUserProfileResponse setAlt(java.lang.String alt) {
      return (GetUserProfileResponse) super.setAlt(alt);
    }

    @Override
    public GetUserProfileResponse setFields(java.lang.String fields) {
      return (GetUserProfileResponse) super.setFields(fields);
    }

    @Override
    public GetUserProfileResponse setKey(java.lang.String key) {
      return (GetUserProfileResponse) super.setKey(key);
    }

    @Override
    public GetUserProfileResponse setOauthToken(java.lang.String oauthToken) {
      return (GetUserProfileResponse) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUserProfileResponse setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUserProfileResponse) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUserProfileResponse setQuotaUser(java.lang.String quotaUser) {
      return (GetUserProfileResponse) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUserProfileResponse setUserIp(java.lang.String userIp) {
      return (GetUserProfileResponse) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetUserProfileResponse setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetUserProfileResponse set(String parameterName, Object value) {
      return (GetUserProfileResponse) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getVersionInfo".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link GetVersionInfo#execute()} method to invoke the remote operation.
   *
   * @param osType
   * @param appType
   * @return the request
   */
  public GetVersionInfo getVersionInfo(java.lang.String osType, java.lang.String appType) throws java.io.IOException {
    GetVersionInfo result = new GetVersionInfo(osType, appType);
    initialize(result);
    return result;
  }

  public class GetVersionInfo extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.VersionResponse> {

    private static final String REST_PATH = "versionresponse/{osType}/{appType}";

    /**
     * Create a request for the method "getVersionInfo".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link GetVersionInfo#execute()} method to invoke the remote
     * operation. <p> {@link GetVersionInfo#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param osType
     * @param appType
     * @since 1.13
     */
    protected GetVersionInfo(java.lang.String osType, java.lang.String appType) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.VersionResponse.class);
      this.osType = com.google.api.client.util.Preconditions.checkNotNull(osType, "Required parameter osType must be specified.");
      this.appType = com.google.api.client.util.Preconditions.checkNotNull(appType, "Required parameter appType must be specified.");
    }

    @Override
    public GetVersionInfo setAlt(java.lang.String alt) {
      return (GetVersionInfo) super.setAlt(alt);
    }

    @Override
    public GetVersionInfo setFields(java.lang.String fields) {
      return (GetVersionInfo) super.setFields(fields);
    }

    @Override
    public GetVersionInfo setKey(java.lang.String key) {
      return (GetVersionInfo) super.setKey(key);
    }

    @Override
    public GetVersionInfo setOauthToken(java.lang.String oauthToken) {
      return (GetVersionInfo) super.setOauthToken(oauthToken);
    }

    @Override
    public GetVersionInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetVersionInfo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetVersionInfo setQuotaUser(java.lang.String quotaUser) {
      return (GetVersionInfo) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetVersionInfo setUserIp(java.lang.String userIp) {
      return (GetVersionInfo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String osType;

    /**

     */
    public java.lang.String getOsType() {
      return osType;
    }

    public GetVersionInfo setOsType(java.lang.String osType) {
      this.osType = osType;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String appType;

    /**

     */
    public java.lang.String getAppType() {
      return appType;
    }

    public GetVersionInfo setAppType(java.lang.String appType) {
      this.appType = appType;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long userId;

    /**

     */
    public java.lang.Long getUserId() {
      return userId;
    }

    public GetVersionInfo setUserId(java.lang.Long userId) {
      this.userId = userId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long time;

    /**

     */
    public java.lang.Long getTime() {
      return time;
    }

    public GetVersionInfo setTime(java.lang.Long time) {
      this.time = time;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long agentId;

    /**

     */
    public java.lang.Long getAgentId() {
      return agentId;
    }

    public GetVersionInfo setAgentId(java.lang.Long agentId) {
      this.agentId = agentId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String deviceModel;

    /**

     */
    public java.lang.String getDeviceModel() {
      return deviceModel;
    }

    public GetVersionInfo setDeviceModel(java.lang.String deviceModel) {
      this.deviceModel = deviceModel;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String deviceManufacturer;

    /**

     */
    public java.lang.String getDeviceManufacturer() {
      return deviceManufacturer;
    }

    public GetVersionInfo setDeviceManufacturer(java.lang.String deviceManufacturer) {
      this.deviceManufacturer = deviceManufacturer;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String osVersion;

    /**

     */
    public java.lang.String getOsVersion() {
      return osVersion;
    }

    public GetVersionInfo setOsVersion(java.lang.String osVersion) {
      this.osVersion = osVersion;
      return this;
    }

    @Override
    public GetVersionInfo set(String parameterName, Object value) {
      return (GetVersionInfo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "login".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link Login#execute()} method to invoke the remote operation.
   *
   * @param rLoginType
   * @param email
   * @return the request
   */
  public Login login(java.lang.String rLoginType, java.lang.String email) throws java.io.IOException {
    Login result = new Login(rLoginType, email);
    initialize(result);
    return result;
  }

  public class Login extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.UserLoginResponse> {

    private static final String REST_PATH = "login/{rLoginType}/{email}";

    /**
     * Create a request for the method "login".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link Login#execute()} method to invoke the remote operation.
     * <p> {@link
     * Login#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param rLoginType
     * @param email
     * @since 1.13
     */
    protected Login(java.lang.String rLoginType, java.lang.String email) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.UserLoginResponse.class);
      this.rLoginType = com.google.api.client.util.Preconditions.checkNotNull(rLoginType, "Required parameter rLoginType must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
    }

    @Override
    public Login setAlt(java.lang.String alt) {
      return (Login) super.setAlt(alt);
    }

    @Override
    public Login setFields(java.lang.String fields) {
      return (Login) super.setFields(fields);
    }

    @Override
    public Login setKey(java.lang.String key) {
      return (Login) super.setKey(key);
    }

    @Override
    public Login setOauthToken(java.lang.String oauthToken) {
      return (Login) super.setOauthToken(oauthToken);
    }

    @Override
    public Login setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Login) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Login setQuotaUser(java.lang.String quotaUser) {
      return (Login) super.setQuotaUser(quotaUser);
    }

    @Override
    public Login setUserIp(java.lang.String userIp) {
      return (Login) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String rLoginType;

    /**

     */
    public java.lang.String getRLoginType() {
      return rLoginType;
    }

    public Login setRLoginType(java.lang.String rLoginType) {
      this.rLoginType = rLoginType;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public Login setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public Login setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String rThirdPartyID;

    /**

     */
    public java.lang.String getRThirdPartyID() {
      return rThirdPartyID;
    }

    public Login setRThirdPartyID(java.lang.String rThirdPartyID) {
      this.rThirdPartyID = rThirdPartyID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean ios;

    /**

     */
    public java.lang.Boolean getIos() {
      return ios;
    }

    public Login setIos(java.lang.Boolean ios) {
      this.ios = ios;
      return this;
    }

    @com.google.api.client.util.Key("STDCode")
    private java.lang.String sTDCode;

    /**

     */
    public java.lang.String getSTDCode() {
      return sTDCode;
    }

    public Login setSTDCode(java.lang.String sTDCode) {
      this.sTDCode = sTDCode;
      return this;
    }

    @com.google.api.client.util.Key("FCMKey")
    private java.lang.String fCMKey;

    /**

     */
    public java.lang.String getFCMKey() {
      return fCMKey;
    }

    public Login setFCMKey(java.lang.String fCMKey) {
      this.fCMKey = fCMKey;
      return this;
    }

    @com.google.api.client.util.Key("OSType")
    private java.lang.String oSType;

    /**

     */
    public java.lang.String getOSType() {
      return oSType;
    }

    public Login setOSType(java.lang.String oSType) {
      this.oSType = oSType;
      return this;
    }

    @Override
    public Login set(String parameterName, Object value) {
      return (Login) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "logout".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link Logout#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public Logout logout(java.lang.Long id) throws java.io.IOException {
    Logout result = new Logout(id);
    initialize(result);
    return result;
  }

  public class Logout extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.UserLogoutResponse> {

    private static final String REST_PATH = "logout/{id}";

    /**
     * Create a request for the method "logout".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link Logout#execute()} method to invoke the remote operation.
     * <p> {@link
     * Logout#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected Logout(java.lang.Long id) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.UserLogoutResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public Logout setAlt(java.lang.String alt) {
      return (Logout) super.setAlt(alt);
    }

    @Override
    public Logout setFields(java.lang.String fields) {
      return (Logout) super.setFields(fields);
    }

    @Override
    public Logout setKey(java.lang.String key) {
      return (Logout) super.setKey(key);
    }

    @Override
    public Logout setOauthToken(java.lang.String oauthToken) {
      return (Logout) super.setOauthToken(oauthToken);
    }

    @Override
    public Logout setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Logout) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Logout setQuotaUser(java.lang.String quotaUser) {
      return (Logout) super.setQuotaUser(quotaUser);
    }

    @Override
    public Logout setUserIp(java.lang.String userIp) {
      return (Logout) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public Logout setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public Logout set(String parameterName, Object value) {
      return (Logout) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "printDeviceLogsOnServer".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link PrintDeviceLogsOnServer#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.buy.housing.backend.userEndPoint.model.BonusResponse}
   * @return the request
   */
  public PrintDeviceLogsOnServer printDeviceLogsOnServer(com.buy.housing.backend.userEndPoint.model.BonusResponse content) throws java.io.IOException {
    PrintDeviceLogsOnServer result = new PrintDeviceLogsOnServer(content);
    initialize(result);
    return result;
  }

  public class PrintDeviceLogsOnServer extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "printDeviceLogsOnServer";

    /**
     * Create a request for the method "printDeviceLogsOnServer".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link PrintDeviceLogsOnServer#execute()} method to invoke the
     * remote operation. <p> {@link PrintDeviceLogsOnServer#initialize(com.google.api.client.googleapi
     * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.buy.housing.backend.userEndPoint.model.BonusResponse}
     * @since 1.13
     */
    protected PrintDeviceLogsOnServer(com.buy.housing.backend.userEndPoint.model.BonusResponse content) {
      super(UserEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
    }

    @Override
    public PrintDeviceLogsOnServer setAlt(java.lang.String alt) {
      return (PrintDeviceLogsOnServer) super.setAlt(alt);
    }

    @Override
    public PrintDeviceLogsOnServer setFields(java.lang.String fields) {
      return (PrintDeviceLogsOnServer) super.setFields(fields);
    }

    @Override
    public PrintDeviceLogsOnServer setKey(java.lang.String key) {
      return (PrintDeviceLogsOnServer) super.setKey(key);
    }

    @Override
    public PrintDeviceLogsOnServer setOauthToken(java.lang.String oauthToken) {
      return (PrintDeviceLogsOnServer) super.setOauthToken(oauthToken);
    }

    @Override
    public PrintDeviceLogsOnServer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (PrintDeviceLogsOnServer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public PrintDeviceLogsOnServer setQuotaUser(java.lang.String quotaUser) {
      return (PrintDeviceLogsOnServer) super.setQuotaUser(quotaUser);
    }

    @Override
    public PrintDeviceLogsOnServer setUserIp(java.lang.String userIp) {
      return (PrintDeviceLogsOnServer) super.setUserIp(userIp);
    }

    @Override
    public PrintDeviceLogsOnServer set(String parameterName, Object value) {
      return (PrintDeviceLogsOnServer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "rateAgent".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link RateAgent#execute()} method to invoke the remote operation.
   *
   * @param uId
   * @param agentId
   * @param rating
   * @return the request
   */
  public RateAgent rateAgent(java.lang.Long uId, java.lang.Long agentId, java.lang.Float rating) throws java.io.IOException {
    RateAgent result = new RateAgent(uId, agentId, rating);
    initialize(result);
    return result;
  }

  public class RateAgent extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "rateAgent/{uId}/{agentId}/{rating}";

    /**
     * Create a request for the method "rateAgent".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link RateAgent#execute()} method to invoke the remote
     * operation. <p> {@link
     * RateAgent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param uId
     * @param agentId
     * @param rating
     * @since 1.13
     */
    protected RateAgent(java.lang.Long uId, java.lang.Long agentId, java.lang.Float rating) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.uId = com.google.api.client.util.Preconditions.checkNotNull(uId, "Required parameter uId must be specified.");
      this.agentId = com.google.api.client.util.Preconditions.checkNotNull(agentId, "Required parameter agentId must be specified.");
      this.rating = com.google.api.client.util.Preconditions.checkNotNull(rating, "Required parameter rating must be specified.");
    }

    @Override
    public RateAgent setAlt(java.lang.String alt) {
      return (RateAgent) super.setAlt(alt);
    }

    @Override
    public RateAgent setFields(java.lang.String fields) {
      return (RateAgent) super.setFields(fields);
    }

    @Override
    public RateAgent setKey(java.lang.String key) {
      return (RateAgent) super.setKey(key);
    }

    @Override
    public RateAgent setOauthToken(java.lang.String oauthToken) {
      return (RateAgent) super.setOauthToken(oauthToken);
    }

    @Override
    public RateAgent setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RateAgent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RateAgent setQuotaUser(java.lang.String quotaUser) {
      return (RateAgent) super.setQuotaUser(quotaUser);
    }

    @Override
    public RateAgent setUserIp(java.lang.String userIp) {
      return (RateAgent) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long uId;

    /**

     */
    public java.lang.Long getUId() {
      return uId;
    }

    public RateAgent setUId(java.lang.Long uId) {
      this.uId = uId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long agentId;

    /**

     */
    public java.lang.Long getAgentId() {
      return agentId;
    }

    public RateAgent setAgentId(java.lang.Long agentId) {
      this.agentId = agentId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Float rating;

    /**

     */
    public java.lang.Float getRating() {
      return rating;
    }

    public RateAgent setRating(java.lang.Float rating) {
      this.rating = rating;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String comments;

    /**

     */
    public java.lang.String getComments() {
      return comments;
    }

    public RateAgent setComments(java.lang.String comments) {
      this.comments = comments;
      return this;
    }

    @Override
    public RateAgent set(String parameterName, Object value) {
      return (RateAgent) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "resendOTPRequest".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link ResendOTPRequest#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public ResendOTPRequest resendOTPRequest(java.lang.Long id) throws java.io.IOException {
    ResendOTPRequest result = new ResendOTPRequest(id);
    initialize(result);
    return result;
  }

  public class ResendOTPRequest extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "resendOTPRequest/{id}";

    /**
     * Create a request for the method "resendOTPRequest".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link ResendOTPRequest#execute()} method to invoke the remote
     * operation. <p> {@link ResendOTPRequest#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected ResendOTPRequest(java.lang.Long id) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public ResendOTPRequest setAlt(java.lang.String alt) {
      return (ResendOTPRequest) super.setAlt(alt);
    }

    @Override
    public ResendOTPRequest setFields(java.lang.String fields) {
      return (ResendOTPRequest) super.setFields(fields);
    }

    @Override
    public ResendOTPRequest setKey(java.lang.String key) {
      return (ResendOTPRequest) super.setKey(key);
    }

    @Override
    public ResendOTPRequest setOauthToken(java.lang.String oauthToken) {
      return (ResendOTPRequest) super.setOauthToken(oauthToken);
    }

    @Override
    public ResendOTPRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ResendOTPRequest) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ResendOTPRequest setQuotaUser(java.lang.String quotaUser) {
      return (ResendOTPRequest) super.setQuotaUser(quotaUser);
    }

    @Override
    public ResendOTPRequest setUserIp(java.lang.String userIp) {
      return (ResendOTPRequest) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public ResendOTPRequest setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public ResendOTPRequest set(String parameterName, Object value) {
      return (ResendOTPRequest) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "resetPasswordWithOTP".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link ResetPasswordWithOTP#execute()} method to invoke the remote
   * operation.
   *
   * @param phoneNumber
   * @param countrySTDCode
   * @param oTP
   * @param newPassword
   * @return the request
   */
  public ResetPasswordWithOTP resetPasswordWithOTP(java.lang.String phoneNumber, java.lang.String countrySTDCode, java.lang.String oTP, java.lang.String newPassword) throws java.io.IOException {
    ResetPasswordWithOTP result = new ResetPasswordWithOTP(phoneNumber, countrySTDCode, oTP, newPassword);
    initialize(result);
    return result;
  }

  public class ResetPasswordWithOTP extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "resetPasswordWithOTP/{phoneNumber}/{countrySTDCode}/{OTP}/{newPassword}";

    /**
     * Create a request for the method "resetPasswordWithOTP".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link ResetPasswordWithOTP#execute()} method to invoke the
     * remote operation. <p> {@link ResetPasswordWithOTP#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param phoneNumber
     * @param countrySTDCode
     * @param oTP
     * @param newPassword
     * @since 1.13
     */
    protected ResetPasswordWithOTP(java.lang.String phoneNumber, java.lang.String countrySTDCode, java.lang.String oTP, java.lang.String newPassword) {
      super(UserEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.phoneNumber = com.google.api.client.util.Preconditions.checkNotNull(phoneNumber, "Required parameter phoneNumber must be specified.");
      this.countrySTDCode = com.google.api.client.util.Preconditions.checkNotNull(countrySTDCode, "Required parameter countrySTDCode must be specified.");
      this.oTP = com.google.api.client.util.Preconditions.checkNotNull(oTP, "Required parameter oTP must be specified.");
      this.newPassword = com.google.api.client.util.Preconditions.checkNotNull(newPassword, "Required parameter newPassword must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ResetPasswordWithOTP setAlt(java.lang.String alt) {
      return (ResetPasswordWithOTP) super.setAlt(alt);
    }

    @Override
    public ResetPasswordWithOTP setFields(java.lang.String fields) {
      return (ResetPasswordWithOTP) super.setFields(fields);
    }

    @Override
    public ResetPasswordWithOTP setKey(java.lang.String key) {
      return (ResetPasswordWithOTP) super.setKey(key);
    }

    @Override
    public ResetPasswordWithOTP setOauthToken(java.lang.String oauthToken) {
      return (ResetPasswordWithOTP) super.setOauthToken(oauthToken);
    }

    @Override
    public ResetPasswordWithOTP setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ResetPasswordWithOTP) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ResetPasswordWithOTP setQuotaUser(java.lang.String quotaUser) {
      return (ResetPasswordWithOTP) super.setQuotaUser(quotaUser);
    }

    @Override
    public ResetPasswordWithOTP setUserIp(java.lang.String userIp) {
      return (ResetPasswordWithOTP) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String phoneNumber;

    /**

     */
    public java.lang.String getPhoneNumber() {
      return phoneNumber;
    }

    public ResetPasswordWithOTP setPhoneNumber(java.lang.String phoneNumber) {
      this.phoneNumber = phoneNumber;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String countrySTDCode;

    /**

     */
    public java.lang.String getCountrySTDCode() {
      return countrySTDCode;
    }

    public ResetPasswordWithOTP setCountrySTDCode(java.lang.String countrySTDCode) {
      this.countrySTDCode = countrySTDCode;
      return this;
    }

    @com.google.api.client.util.Key("OTP")
    private java.lang.String oTP;

    /**

     */
    public java.lang.String getOTP() {
      return oTP;
    }

    public ResetPasswordWithOTP setOTP(java.lang.String oTP) {
      this.oTP = oTP;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String newPassword;

    /**

     */
    public java.lang.String getNewPassword() {
      return newPassword;
    }

    public ResetPasswordWithOTP setNewPassword(java.lang.String newPassword) {
      this.newPassword = newPassword;
      return this;
    }

    @Override
    public ResetPasswordWithOTP set(String parameterName, Object value) {
      return (ResetPasswordWithOTP) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "sendOTPRequest".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link SendOTPRequest#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public SendOTPRequest sendOTPRequest(java.lang.Long id) throws java.io.IOException {
    SendOTPRequest result = new SendOTPRequest(id);
    initialize(result);
    return result;
  }

  public class SendOTPRequest extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "sendOTPRequest/{id}";

    /**
     * Create a request for the method "sendOTPRequest".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link SendOTPRequest#execute()} method to invoke the remote
     * operation. <p> {@link SendOTPRequest#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected SendOTPRequest(java.lang.Long id) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public SendOTPRequest setAlt(java.lang.String alt) {
      return (SendOTPRequest) super.setAlt(alt);
    }

    @Override
    public SendOTPRequest setFields(java.lang.String fields) {
      return (SendOTPRequest) super.setFields(fields);
    }

    @Override
    public SendOTPRequest setKey(java.lang.String key) {
      return (SendOTPRequest) super.setKey(key);
    }

    @Override
    public SendOTPRequest setOauthToken(java.lang.String oauthToken) {
      return (SendOTPRequest) super.setOauthToken(oauthToken);
    }

    @Override
    public SendOTPRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SendOTPRequest) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SendOTPRequest setQuotaUser(java.lang.String quotaUser) {
      return (SendOTPRequest) super.setQuotaUser(quotaUser);
    }

    @Override
    public SendOTPRequest setUserIp(java.lang.String userIp) {
      return (SendOTPRequest) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public SendOTPRequest setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phoneNumber;

    /**

     */
    public java.lang.String getPhoneNumber() {
      return phoneNumber;
    }

    public SendOTPRequest setPhoneNumber(java.lang.String phoneNumber) {
      this.phoneNumber = phoneNumber;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String countrySTDCode;

    /**

     */
    public java.lang.String getCountrySTDCode() {
      return countrySTDCode;
    }

    public SendOTPRequest setCountrySTDCode(java.lang.String countrySTDCode) {
      this.countrySTDCode = countrySTDCode;
      return this;
    }

    @Override
    public SendOTPRequest set(String parameterName, Object value) {
      return (SendOTPRequest) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "serviceRequest".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link ServiceRequest#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param bookingId
   * @return the request
   */
  public ServiceRequest serviceRequest(java.lang.Long id, java.lang.Long bookingId) throws java.io.IOException {
    ServiceRequest result = new ServiceRequest(id, bookingId);
    initialize(result);
    return result;
  }

  public class ServiceRequest extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "serviceRequest/{id}/{bookingId}";

    /**
     * Create a request for the method "serviceRequest".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link ServiceRequest#execute()} method to invoke the remote
     * operation. <p> {@link ServiceRequest#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @param bookingId
     * @since 1.13
     */
    protected ServiceRequest(java.lang.Long id, java.lang.Long bookingId) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.bookingId = com.google.api.client.util.Preconditions.checkNotNull(bookingId, "Required parameter bookingId must be specified.");
    }

    @Override
    public ServiceRequest setAlt(java.lang.String alt) {
      return (ServiceRequest) super.setAlt(alt);
    }

    @Override
    public ServiceRequest setFields(java.lang.String fields) {
      return (ServiceRequest) super.setFields(fields);
    }

    @Override
    public ServiceRequest setKey(java.lang.String key) {
      return (ServiceRequest) super.setKey(key);
    }

    @Override
    public ServiceRequest setOauthToken(java.lang.String oauthToken) {
      return (ServiceRequest) super.setOauthToken(oauthToken);
    }

    @Override
    public ServiceRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ServiceRequest) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ServiceRequest setQuotaUser(java.lang.String quotaUser) {
      return (ServiceRequest) super.setQuotaUser(quotaUser);
    }

    @Override
    public ServiceRequest setUserIp(java.lang.String userIp) {
      return (ServiceRequest) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public ServiceRequest setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long bookingId;

    /**

     */
    public java.lang.Long getBookingId() {
      return bookingId;
    }

    public ServiceRequest setBookingId(java.lang.Long bookingId) {
      this.bookingId = bookingId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String description;

    /**

     */
    public java.lang.String getDescription() {
      return description;
    }

    public ServiceRequest setDescription(java.lang.String description) {
      this.description = description;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String serviceRequestType;

    /**

     */
    public java.lang.String getServiceRequestType() {
      return serviceRequestType;
    }

    public ServiceRequest setServiceRequestType(java.lang.String serviceRequestType) {
      this.serviceRequestType = serviceRequestType;
      return this;
    }

    @Override
    public ServiceRequest set(String parameterName, Object value) {
      return (ServiceRequest) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "setNewPasswordFromToken".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link SetNewPasswordFromToken#execute()} method to invoke the remote
   * operation.
   *
   * @param passwordToken
   * @param newPassword
   * @return the request
   */
  public SetNewPasswordFromToken setNewPasswordFromToken(java.lang.String passwordToken, java.lang.String newPassword) throws java.io.IOException {
    SetNewPasswordFromToken result = new SetNewPasswordFromToken(passwordToken, newPassword);
    initialize(result);
    return result;
  }

  public class SetNewPasswordFromToken extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "setNewPasswordFromToken/{passwordToken}/{newPassword}";

    /**
     * Create a request for the method "setNewPasswordFromToken".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link SetNewPasswordFromToken#execute()} method to invoke the
     * remote operation. <p> {@link SetNewPasswordFromToken#initialize(com.google.api.client.googleapi
     * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param passwordToken
     * @param newPassword
     * @since 1.13
     */
    protected SetNewPasswordFromToken(java.lang.String passwordToken, java.lang.String newPassword) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.passwordToken = com.google.api.client.util.Preconditions.checkNotNull(passwordToken, "Required parameter passwordToken must be specified.");
      this.newPassword = com.google.api.client.util.Preconditions.checkNotNull(newPassword, "Required parameter newPassword must be specified.");
    }

    @Override
    public SetNewPasswordFromToken setAlt(java.lang.String alt) {
      return (SetNewPasswordFromToken) super.setAlt(alt);
    }

    @Override
    public SetNewPasswordFromToken setFields(java.lang.String fields) {
      return (SetNewPasswordFromToken) super.setFields(fields);
    }

    @Override
    public SetNewPasswordFromToken setKey(java.lang.String key) {
      return (SetNewPasswordFromToken) super.setKey(key);
    }

    @Override
    public SetNewPasswordFromToken setOauthToken(java.lang.String oauthToken) {
      return (SetNewPasswordFromToken) super.setOauthToken(oauthToken);
    }

    @Override
    public SetNewPasswordFromToken setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SetNewPasswordFromToken) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SetNewPasswordFromToken setQuotaUser(java.lang.String quotaUser) {
      return (SetNewPasswordFromToken) super.setQuotaUser(quotaUser);
    }

    @Override
    public SetNewPasswordFromToken setUserIp(java.lang.String userIp) {
      return (SetNewPasswordFromToken) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String passwordToken;

    /**

     */
    public java.lang.String getPasswordToken() {
      return passwordToken;
    }

    public SetNewPasswordFromToken setPasswordToken(java.lang.String passwordToken) {
      this.passwordToken = passwordToken;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String newPassword;

    /**

     */
    public java.lang.String getNewPassword() {
      return newPassword;
    }

    public SetNewPasswordFromToken setNewPassword(java.lang.String newPassword) {
      this.newPassword = newPassword;
      return this;
    }

    @Override
    public SetNewPasswordFromToken set(String parameterName, Object value) {
      return (SetNewPasswordFromToken) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "signUpUser".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link SignUpUser#execute()} method to invoke the remote operation.
   *
   * @param name
   * @param email
   * @param phone
   * @param gender
   * @param loginType
   * @return the request
   */
  public SignUpUser signUpUser(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String gender, java.lang.String loginType) throws java.io.IOException {
    SignUpUser result = new SignUpUser(name, email, phone, gender, loginType);
    initialize(result);
    return result;
  }

  public class SignUpUser extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "signUpUser/{name}/{email}/{phone}/{gender}/{loginType}";

    /**
     * Create a request for the method "signUpUser".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link SignUpUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * SignUpUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param name
     * @param email
     * @param phone
     * @param gender
     * @param loginType
     * @since 1.13
     */
    protected SignUpUser(java.lang.String name, java.lang.String email, java.lang.String phone, java.lang.String gender, java.lang.String loginType) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.phone = com.google.api.client.util.Preconditions.checkNotNull(phone, "Required parameter phone must be specified.");
      this.gender = com.google.api.client.util.Preconditions.checkNotNull(gender, "Required parameter gender must be specified.");
      this.loginType = com.google.api.client.util.Preconditions.checkNotNull(loginType, "Required parameter loginType must be specified.");
    }

    @Override
    public SignUpUser setAlt(java.lang.String alt) {
      return (SignUpUser) super.setAlt(alt);
    }

    @Override
    public SignUpUser setFields(java.lang.String fields) {
      return (SignUpUser) super.setFields(fields);
    }

    @Override
    public SignUpUser setKey(java.lang.String key) {
      return (SignUpUser) super.setKey(key);
    }

    @Override
    public SignUpUser setOauthToken(java.lang.String oauthToken) {
      return (SignUpUser) super.setOauthToken(oauthToken);
    }

    @Override
    public SignUpUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SignUpUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SignUpUser setQuotaUser(java.lang.String quotaUser) {
      return (SignUpUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public SignUpUser setUserIp(java.lang.String userIp) {
      return (SignUpUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public SignUpUser setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public SignUpUser setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public SignUpUser setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String gender;

    /**

     */
    public java.lang.String getGender() {
      return gender;
    }

    public SignUpUser setGender(java.lang.String gender) {
      this.gender = gender;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String loginType;

    /**

     */
    public java.lang.String getLoginType() {
      return loginType;
    }

    public SignUpUser setLoginType(java.lang.String loginType) {
      this.loginType = loginType;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String address;

    /**

     */
    public java.lang.String getAddress() {
      return address;
    }

    public SignUpUser setAddress(java.lang.String address) {
      this.address = address;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public SignUpUser setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String thirdPartyID;

    /**

     */
    public java.lang.String getThirdPartyID() {
      return thirdPartyID;
    }

    public SignUpUser setThirdPartyID(java.lang.String thirdPartyID) {
      this.thirdPartyID = thirdPartyID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String countryName;

    /**

     */
    public java.lang.String getCountryName() {
      return countryName;
    }

    public SignUpUser setCountryName(java.lang.String countryName) {
      this.countryName = countryName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String countrySTDCode;

    /**

     */
    public java.lang.String getCountrySTDCode() {
      return countrySTDCode;
    }

    public SignUpUser setCountrySTDCode(java.lang.String countrySTDCode) {
      this.countrySTDCode = countrySTDCode;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String imageURL;

    /**

     */
    public java.lang.String getImageURL() {
      return imageURL;
    }

    public SignUpUser setImageURL(java.lang.String imageURL) {
      this.imageURL = imageURL;
      return this;
    }

    @Override
    public SignUpUser set(String parameterName, Object value) {
      return (SignUpUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "speakToLoanExpert".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link SpeakToLoanExpert#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public SpeakToLoanExpert speakToLoanExpert() throws java.io.IOException {
    SpeakToLoanExpert result = new SpeakToLoanExpert();
    initialize(result);
    return result;
  }

  public class SpeakToLoanExpert extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "SpeakToLoanExpert";

    /**
     * Create a request for the method "speakToLoanExpert".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link SpeakToLoanExpert#execute()} method to invoke the remote
     * operation. <p> {@link SpeakToLoanExpert#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected SpeakToLoanExpert() {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
    }

    @Override
    public SpeakToLoanExpert setAlt(java.lang.String alt) {
      return (SpeakToLoanExpert) super.setAlt(alt);
    }

    @Override
    public SpeakToLoanExpert setFields(java.lang.String fields) {
      return (SpeakToLoanExpert) super.setFields(fields);
    }

    @Override
    public SpeakToLoanExpert setKey(java.lang.String key) {
      return (SpeakToLoanExpert) super.setKey(key);
    }

    @Override
    public SpeakToLoanExpert setOauthToken(java.lang.String oauthToken) {
      return (SpeakToLoanExpert) super.setOauthToken(oauthToken);
    }

    @Override
    public SpeakToLoanExpert setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SpeakToLoanExpert) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SpeakToLoanExpert setQuotaUser(java.lang.String quotaUser) {
      return (SpeakToLoanExpert) super.setQuotaUser(quotaUser);
    }

    @Override
    public SpeakToLoanExpert setUserIp(java.lang.String userIp) {
      return (SpeakToLoanExpert) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public SpeakToLoanExpert setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long projectId;

    /**

     */
    public java.lang.Long getProjectId() {
      return projectId;
    }

    public SpeakToLoanExpert setProjectId(java.lang.Long projectId) {
      this.projectId = projectId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public SpeakToLoanExpert setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public SpeakToLoanExpert setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long time;

    /**

     */
    public java.lang.Long getTime() {
      return time;
    }

    public SpeakToLoanExpert setTime(java.lang.Long time) {
      this.time = time;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public SpeakToLoanExpert setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long propertyId;

    /**

     */
    public java.lang.Long getPropertyId() {
      return propertyId;
    }

    public SpeakToLoanExpert setPropertyId(java.lang.Long propertyId) {
      this.propertyId = propertyId;
      return this;
    }

    @Override
    public SpeakToLoanExpert set(String parameterName, Object value) {
      return (SpeakToLoanExpert) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "subscribeToTopic".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link SubscribeToTopic#execute()} method to invoke the remote operation.
   *
   * @param token
   * @return the request
   */
  public SubscribeToTopic subscribeToTopic(java.lang.String token) throws java.io.IOException {
    SubscribeToTopic result = new SubscribeToTopic(token);
    initialize(result);
    return result;
  }

  public class SubscribeToTopic extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.NewsResponse> {

    private static final String REST_PATH = "subscribeToTopic/{token}";

    /**
     * Create a request for the method "subscribeToTopic".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link SubscribeToTopic#execute()} method to invoke the remote
     * operation. <p> {@link SubscribeToTopic#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param token
     * @since 1.13
     */
    protected SubscribeToTopic(java.lang.String token) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.NewsResponse.class);
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public SubscribeToTopic setAlt(java.lang.String alt) {
      return (SubscribeToTopic) super.setAlt(alt);
    }

    @Override
    public SubscribeToTopic setFields(java.lang.String fields) {
      return (SubscribeToTopic) super.setFields(fields);
    }

    @Override
    public SubscribeToTopic setKey(java.lang.String key) {
      return (SubscribeToTopic) super.setKey(key);
    }

    @Override
    public SubscribeToTopic setOauthToken(java.lang.String oauthToken) {
      return (SubscribeToTopic) super.setOauthToken(oauthToken);
    }

    @Override
    public SubscribeToTopic setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SubscribeToTopic) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SubscribeToTopic setQuotaUser(java.lang.String quotaUser) {
      return (SubscribeToTopic) super.setQuotaUser(quotaUser);
    }

    @Override
    public SubscribeToTopic setUserIp(java.lang.String userIp) {
      return (SubscribeToTopic) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public SubscribeToTopic setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @Override
    public SubscribeToTopic set(String parameterName, Object value) {
      return (SubscribeToTopic) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateEmail".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link UpdateEmail#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public UpdateEmail updateEmail(java.lang.Long id) throws java.io.IOException {
    UpdateEmail result = new UpdateEmail(id);
    initialize(result);
    return result;
  }

  public class UpdateEmail extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.UserLoginResponse> {

    private static final String REST_PATH = "userloginresponse/{Id}";

    /**
     * Create a request for the method "updateEmail".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateEmail#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateEmail#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected UpdateEmail(java.lang.Long id) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.UserLoginResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public UpdateEmail setAlt(java.lang.String alt) {
      return (UpdateEmail) super.setAlt(alt);
    }

    @Override
    public UpdateEmail setFields(java.lang.String fields) {
      return (UpdateEmail) super.setFields(fields);
    }

    @Override
    public UpdateEmail setKey(java.lang.String key) {
      return (UpdateEmail) super.setKey(key);
    }

    @Override
    public UpdateEmail setOauthToken(java.lang.String oauthToken) {
      return (UpdateEmail) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateEmail setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateEmail) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateEmail setQuotaUser(java.lang.String quotaUser) {
      return (UpdateEmail) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateEmail setUserIp(java.lang.String userIp) {
      return (UpdateEmail) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public UpdateEmail setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public UpdateEmail setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public UpdateEmail setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @Override
    public UpdateEmail set(String parameterName, Object value) {
      return (UpdateEmail) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateFCMKey".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link UpdateFCMKey#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param fCMKey
   * @return the request
   */
  public UpdateFCMKey updateFCMKey(java.lang.Long id, java.lang.String fCMKey) throws java.io.IOException {
    UpdateFCMKey result = new UpdateFCMKey(id, fCMKey);
    initialize(result);
    return result;
  }

  public class UpdateFCMKey extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "commonresponse/{Id}/{FCMKey}";

    /**
     * Create a request for the method "updateFCMKey".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateFCMKey#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateFCMKey#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param fCMKey
     * @since 1.13
     */
    protected UpdateFCMKey(java.lang.Long id, java.lang.String fCMKey) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.fCMKey = com.google.api.client.util.Preconditions.checkNotNull(fCMKey, "Required parameter fCMKey must be specified.");
    }

    @Override
    public UpdateFCMKey setAlt(java.lang.String alt) {
      return (UpdateFCMKey) super.setAlt(alt);
    }

    @Override
    public UpdateFCMKey setFields(java.lang.String fields) {
      return (UpdateFCMKey) super.setFields(fields);
    }

    @Override
    public UpdateFCMKey setKey(java.lang.String key) {
      return (UpdateFCMKey) super.setKey(key);
    }

    @Override
    public UpdateFCMKey setOauthToken(java.lang.String oauthToken) {
      return (UpdateFCMKey) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateFCMKey setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateFCMKey) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateFCMKey setQuotaUser(java.lang.String quotaUser) {
      return (UpdateFCMKey) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateFCMKey setUserIp(java.lang.String userIp) {
      return (UpdateFCMKey) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public UpdateFCMKey setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key("FCMKey")
    private java.lang.String fCMKey;

    /**

     */
    public java.lang.String getFCMKey() {
      return fCMKey;
    }

    public UpdateFCMKey setFCMKey(java.lang.String fCMKey) {
      this.fCMKey = fCMKey;
      return this;
    }

    @com.google.api.client.util.Key("OSType")
    private java.lang.String oSType;

    /**

     */
    public java.lang.String getOSType() {
      return oSType;
    }

    public UpdateFCMKey setOSType(java.lang.String oSType) {
      this.oSType = oSType;
      return this;
    }

    @Override
    public UpdateFCMKey set(String parameterName, Object value) {
      return (UpdateFCMKey) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateStat".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link UpdateStat#execute()} method to invoke the remote operation.
   *
   * @param source
   * @return the request
   */
  public UpdateStat updateStat(java.lang.String source) throws java.io.IOException {
    UpdateStat result = new UpdateStat(source);
    initialize(result);
    return result;
  }

  public class UpdateStat extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.UpdateUserStatResponse> {

    private static final String REST_PATH = "updateuserstatresponse/{source}";

    /**
     * Create a request for the method "updateStat".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateStat#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateStat#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param source
     * @since 1.13
     */
    protected UpdateStat(java.lang.String source) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.UpdateUserStatResponse.class);
      this.source = com.google.api.client.util.Preconditions.checkNotNull(source, "Required parameter source must be specified.");
    }

    @Override
    public UpdateStat setAlt(java.lang.String alt) {
      return (UpdateStat) super.setAlt(alt);
    }

    @Override
    public UpdateStat setFields(java.lang.String fields) {
      return (UpdateStat) super.setFields(fields);
    }

    @Override
    public UpdateStat setKey(java.lang.String key) {
      return (UpdateStat) super.setKey(key);
    }

    @Override
    public UpdateStat setOauthToken(java.lang.String oauthToken) {
      return (UpdateStat) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateStat setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateStat) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateStat setQuotaUser(java.lang.String quotaUser) {
      return (UpdateStat) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateStat setUserIp(java.lang.String userIp) {
      return (UpdateStat) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String source;

    /**

     */
    public java.lang.String getSource() {
      return source;
    }

    public UpdateStat setSource(java.lang.String source) {
      this.source = source;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long uId;

    /**

     */
    public java.lang.Long getUId() {
      return uId;
    }

    public UpdateStat setUId(java.lang.Long uId) {
      this.uId = uId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean call;

    /**

     */
    public java.lang.Boolean getCall() {
      return call;
    }

    public UpdateStat setCall(java.lang.Boolean call) {
      this.call = call;
      return this;
    }

    @Override
    public UpdateStat set(String parameterName, Object value) {
      return (UpdateStat) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateTask".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link UpdateTask#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param content the {@link com.buy.housing.backend.userEndPoint.model.Task}
   * @return the request
   */
  public UpdateTask updateTask(java.lang.Long id, com.buy.housing.backend.userEndPoint.model.Task content) throws java.io.IOException {
    UpdateTask result = new UpdateTask(id, content);
    initialize(result);
    return result;
  }

  public class UpdateTask extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "commonresponse/{Id}";

    /**
     * Create a request for the method "updateTask".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateTask#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateTask#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param content the {@link com.buy.housing.backend.userEndPoint.model.Task}
     * @since 1.13
     */
    protected UpdateTask(java.lang.Long id, com.buy.housing.backend.userEndPoint.model.Task content) {
      super(UserEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public UpdateTask setAlt(java.lang.String alt) {
      return (UpdateTask) super.setAlt(alt);
    }

    @Override
    public UpdateTask setFields(java.lang.String fields) {
      return (UpdateTask) super.setFields(fields);
    }

    @Override
    public UpdateTask setKey(java.lang.String key) {
      return (UpdateTask) super.setKey(key);
    }

    @Override
    public UpdateTask setOauthToken(java.lang.String oauthToken) {
      return (UpdateTask) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateTask setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateTask) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateTask setQuotaUser(java.lang.String quotaUser) {
      return (UpdateTask) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateTask setUserIp(java.lang.String userIp) {
      return (UpdateTask) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public UpdateTask setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public UpdateTask set(String parameterName, Object value) {
      return (UpdateTask) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateUser".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link UpdateUser#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param password
   * @return the request
   */
  public UpdateUser updateUser(java.lang.Long id, java.lang.String password) throws java.io.IOException {
    UpdateUser result = new UpdateUser(id, password);
    initialize(result);
    return result;
  }

  public class UpdateUser extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "commonresponse/{id}/{password}";

    /**
     * Create a request for the method "updateUser".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param password
     * @since 1.13
     */
    protected UpdateUser(java.lang.Long id, java.lang.String password) {
      super(UserEndPoint.this, "PUT", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
    }

    @Override
    public UpdateUser setAlt(java.lang.String alt) {
      return (UpdateUser) super.setAlt(alt);
    }

    @Override
    public UpdateUser setFields(java.lang.String fields) {
      return (UpdateUser) super.setFields(fields);
    }

    @Override
    public UpdateUser setKey(java.lang.String key) {
      return (UpdateUser) super.setKey(key);
    }

    @Override
    public UpdateUser setOauthToken(java.lang.String oauthToken) {
      return (UpdateUser) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateUser setQuotaUser(java.lang.String quotaUser) {
      return (UpdateUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateUser setUserIp(java.lang.String userIp) {
      return (UpdateUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public UpdateUser setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public UpdateUser setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public UpdateUser setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String address;

    /**

     */
    public java.lang.String getAddress() {
      return address;
    }

    public UpdateUser setAddress(java.lang.String address) {
      this.address = address;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String newPassword;

    /**

     */
    public java.lang.String getNewPassword() {
      return newPassword;
    }

    public UpdateUser setNewPassword(java.lang.String newPassword) {
      this.newPassword = newPassword;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public UpdateUser setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key("OTP")
    private java.lang.String oTP;

    /**

     */
    public java.lang.String getOTP() {
      return oTP;
    }

    public UpdateUser setOTP(java.lang.String oTP) {
      this.oTP = oTP;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phoneNumber;

    /**

     */
    public java.lang.String getPhoneNumber() {
      return phoneNumber;
    }

    public UpdateUser setPhoneNumber(java.lang.String phoneNumber) {
      this.phoneNumber = phoneNumber;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String countryName;

    /**

     */
    public java.lang.String getCountryName() {
      return countryName;
    }

    public UpdateUser setCountryName(java.lang.String countryName) {
      this.countryName = countryName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String countrySTDCode;

    /**

     */
    public java.lang.String getCountrySTDCode() {
      return countrySTDCode;
    }

    public UpdateUser setCountrySTDCode(java.lang.String countrySTDCode) {
      this.countrySTDCode = countrySTDCode;
      return this;
    }

    @Override
    public UpdateUser set(String parameterName, Object value) {
      return (UpdateUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateUserData".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link UpdateUserData#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.buy.housing.backend.userEndPoint.model.User}
   * @return the request
   */
  public UpdateUserData updateUserData(com.buy.housing.backend.userEndPoint.model.User content) throws java.io.IOException {
    UpdateUserData result = new UpdateUserData(content);
    initialize(result);
    return result;
  }

  public class UpdateUserData extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "commonresponse";

    /**
     * Create a request for the method "updateUserData".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateUserData#execute()} method to invoke the remote
     * operation. <p> {@link UpdateUserData#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.buy.housing.backend.userEndPoint.model.User}
     * @since 1.13
     */
    protected UpdateUserData(com.buy.housing.backend.userEndPoint.model.User content) {
      super(UserEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
    }

    @Override
    public UpdateUserData setAlt(java.lang.String alt) {
      return (UpdateUserData) super.setAlt(alt);
    }

    @Override
    public UpdateUserData setFields(java.lang.String fields) {
      return (UpdateUserData) super.setFields(fields);
    }

    @Override
    public UpdateUserData setKey(java.lang.String key) {
      return (UpdateUserData) super.setKey(key);
    }

    @Override
    public UpdateUserData setOauthToken(java.lang.String oauthToken) {
      return (UpdateUserData) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateUserData setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateUserData) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateUserData setQuotaUser(java.lang.String quotaUser) {
      return (UpdateUserData) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateUserData setUserIp(java.lang.String userIp) {
      return (UpdateUserData) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("OTP")
    private java.lang.String oTP;

    /**

     */
    public java.lang.String getOTP() {
      return oTP;
    }

    public UpdateUserData setOTP(java.lang.String oTP) {
      this.oTP = oTP;
      return this;
    }

    @Override
    public UpdateUserData set(String parameterName, Object value) {
      return (UpdateUserData) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateUserImage".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link UpdateUserImage#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param content the {@link com.buy.housing.backend.userEndPoint.model.BlobEntity}
   * @return the request
   */
  public UpdateUserImage updateUserImage(java.lang.Long id, com.buy.housing.backend.userEndPoint.model.BlobEntity content) throws java.io.IOException {
    UpdateUserImage result = new UpdateUserImage(id, content);
    initialize(result);
    return result;
  }

  public class UpdateUserImage extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.UserLoginResponse> {

    private static final String REST_PATH = "userloginresponse/{id}";

    /**
     * Create a request for the method "updateUserImage".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateUserImage#execute()} method to invoke the remote
     * operation. <p> {@link UpdateUserImage#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @param content the {@link com.buy.housing.backend.userEndPoint.model.BlobEntity}
     * @since 1.13
     */
    protected UpdateUserImage(java.lang.Long id, com.buy.housing.backend.userEndPoint.model.BlobEntity content) {
      super(UserEndPoint.this, "PUT", REST_PATH, content, com.buy.housing.backend.userEndPoint.model.UserLoginResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public UpdateUserImage setAlt(java.lang.String alt) {
      return (UpdateUserImage) super.setAlt(alt);
    }

    @Override
    public UpdateUserImage setFields(java.lang.String fields) {
      return (UpdateUserImage) super.setFields(fields);
    }

    @Override
    public UpdateUserImage setKey(java.lang.String key) {
      return (UpdateUserImage) super.setKey(key);
    }

    @Override
    public UpdateUserImage setOauthToken(java.lang.String oauthToken) {
      return (UpdateUserImage) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateUserImage setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateUserImage) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateUserImage setQuotaUser(java.lang.String quotaUser) {
      return (UpdateUserImage) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateUserImage setUserIp(java.lang.String userIp) {
      return (UpdateUserImage) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public UpdateUserImage setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public UpdateUserImage set(String parameterName, Object value) {
      return (UpdateUserImage) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "validatePasswordToken".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link ValidatePasswordToken#execute()} method to invoke the remote
   * operation.
   *
   * @param passwordToken
   * @return the request
   */
  public ValidatePasswordToken validatePasswordToken(java.lang.String passwordToken) throws java.io.IOException {
    ValidatePasswordToken result = new ValidatePasswordToken(passwordToken);
    initialize(result);
    return result;
  }

  public class ValidatePasswordToken extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "validatePasswordToken/{passwordToken}";

    /**
     * Create a request for the method "validatePasswordToken".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link ValidatePasswordToken#execute()} method to invoke the
     * remote operation. <p> {@link ValidatePasswordToken#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param passwordToken
     * @since 1.13
     */
    protected ValidatePasswordToken(java.lang.String passwordToken) {
      super(UserEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.passwordToken = com.google.api.client.util.Preconditions.checkNotNull(passwordToken, "Required parameter passwordToken must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ValidatePasswordToken setAlt(java.lang.String alt) {
      return (ValidatePasswordToken) super.setAlt(alt);
    }

    @Override
    public ValidatePasswordToken setFields(java.lang.String fields) {
      return (ValidatePasswordToken) super.setFields(fields);
    }

    @Override
    public ValidatePasswordToken setKey(java.lang.String key) {
      return (ValidatePasswordToken) super.setKey(key);
    }

    @Override
    public ValidatePasswordToken setOauthToken(java.lang.String oauthToken) {
      return (ValidatePasswordToken) super.setOauthToken(oauthToken);
    }

    @Override
    public ValidatePasswordToken setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ValidatePasswordToken) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ValidatePasswordToken setQuotaUser(java.lang.String quotaUser) {
      return (ValidatePasswordToken) super.setQuotaUser(quotaUser);
    }

    @Override
    public ValidatePasswordToken setUserIp(java.lang.String userIp) {
      return (ValidatePasswordToken) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String passwordToken;

    /**

     */
    public java.lang.String getPasswordToken() {
      return passwordToken;
    }

    public ValidatePasswordToken setPasswordToken(java.lang.String passwordToken) {
      this.passwordToken = passwordToken;
      return this;
    }

    @Override
    public ValidatePasswordToken set(String parameterName, Object value) {
      return (ValidatePasswordToken) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "verifyOTP".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link VerifyOTP#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param oTP
   * @return the request
   */
  public VerifyOTP verifyOTP(java.lang.Long id, java.lang.String oTP) throws java.io.IOException {
    VerifyOTP result = new VerifyOTP(id, oTP);
    initialize(result);
    return result;
  }

  public class VerifyOTP extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "verifyOTP/{id}/{OTP}";

    /**
     * Create a request for the method "verifyOTP".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link VerifyOTP#execute()} method to invoke the remote
     * operation. <p> {@link
     * VerifyOTP#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param oTP
     * @since 1.13
     */
    protected VerifyOTP(java.lang.Long id, java.lang.String oTP) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.oTP = com.google.api.client.util.Preconditions.checkNotNull(oTP, "Required parameter oTP must be specified.");
    }

    @Override
    public VerifyOTP setAlt(java.lang.String alt) {
      return (VerifyOTP) super.setAlt(alt);
    }

    @Override
    public VerifyOTP setFields(java.lang.String fields) {
      return (VerifyOTP) super.setFields(fields);
    }

    @Override
    public VerifyOTP setKey(java.lang.String key) {
      return (VerifyOTP) super.setKey(key);
    }

    @Override
    public VerifyOTP setOauthToken(java.lang.String oauthToken) {
      return (VerifyOTP) super.setOauthToken(oauthToken);
    }

    @Override
    public VerifyOTP setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (VerifyOTP) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public VerifyOTP setQuotaUser(java.lang.String quotaUser) {
      return (VerifyOTP) super.setQuotaUser(quotaUser);
    }

    @Override
    public VerifyOTP setUserIp(java.lang.String userIp) {
      return (VerifyOTP) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public VerifyOTP setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key("OTP")
    private java.lang.String oTP;

    /**

     */
    public java.lang.String getOTP() {
      return oTP;
    }

    public VerifyOTP setOTP(java.lang.String oTP) {
      this.oTP = oTP;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String source;

    /**

     */
    public java.lang.String getSource() {
      return source;
    }

    public VerifyOTP setSource(java.lang.String source) {
      this.source = source;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long virtualId;

    /**

     */
    public java.lang.Long getVirtualId() {
      return virtualId;
    }

    public VerifyOTP setVirtualId(java.lang.Long virtualId) {
      this.virtualId = virtualId;
      return this;
    }

    @Override
    public VerifyOTP set(String parameterName, Object value) {
      return (VerifyOTP) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "verifyPhoneNumber".
   *
   * This request holds the parameters needed by the userEndPoint server.  After setting any optional
   * parameters, call the {@link VerifyPhoneNumber#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public VerifyPhoneNumber verifyPhoneNumber(java.lang.Long id) throws java.io.IOException {
    VerifyPhoneNumber result = new VerifyPhoneNumber(id);
    initialize(result);
    return result;
  }

  public class VerifyPhoneNumber extends UserEndPointRequest<com.buy.housing.backend.userEndPoint.model.SendOTPToPhoneNumberResponse> {

    private static final String REST_PATH = "verifyPhoneNumber/{id}";

    /**
     * Create a request for the method "verifyPhoneNumber".
     *
     * This request holds the parameters needed by the the userEndPoint server.  After setting any
     * optional parameters, call the {@link VerifyPhoneNumber#execute()} method to invoke the remote
     * operation. <p> {@link VerifyPhoneNumber#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected VerifyPhoneNumber(java.lang.Long id) {
      super(UserEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.userEndPoint.model.SendOTPToPhoneNumberResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public VerifyPhoneNumber setAlt(java.lang.String alt) {
      return (VerifyPhoneNumber) super.setAlt(alt);
    }

    @Override
    public VerifyPhoneNumber setFields(java.lang.String fields) {
      return (VerifyPhoneNumber) super.setFields(fields);
    }

    @Override
    public VerifyPhoneNumber setKey(java.lang.String key) {
      return (VerifyPhoneNumber) super.setKey(key);
    }

    @Override
    public VerifyPhoneNumber setOauthToken(java.lang.String oauthToken) {
      return (VerifyPhoneNumber) super.setOauthToken(oauthToken);
    }

    @Override
    public VerifyPhoneNumber setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (VerifyPhoneNumber) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public VerifyPhoneNumber setQuotaUser(java.lang.String quotaUser) {
      return (VerifyPhoneNumber) super.setQuotaUser(quotaUser);
    }

    @Override
    public VerifyPhoneNumber setUserIp(java.lang.String userIp) {
      return (VerifyPhoneNumber) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String phoneNumber;

    /**

     */
    public java.lang.String getPhoneNumber() {
      return phoneNumber;
    }

    public VerifyPhoneNumber setPhoneNumber(java.lang.String phoneNumber) {
      this.phoneNumber = phoneNumber;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public VerifyPhoneNumber setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String countryName;

    /**

     */
    public java.lang.String getCountryName() {
      return countryName;
    }

    public VerifyPhoneNumber setCountryName(java.lang.String countryName) {
      this.countryName = countryName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String countrySTDCode;

    /**

     */
    public java.lang.String getCountrySTDCode() {
      return countrySTDCode;
    }

    public VerifyPhoneNumber setCountrySTDCode(java.lang.String countrySTDCode) {
      this.countrySTDCode = countrySTDCode;
      return this;
    }

    @Override
    public VerifyPhoneNumber set(String parameterName, Object value) {
      return (VerifyPhoneNumber) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link UserEndPoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link UserEndPoint}. */
    @Override
    public UserEndPoint build() {
      return new UserEndPoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link UserEndPointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setUserEndPointRequestInitializer(
        UserEndPointRequestInitializer userendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(userendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
