/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2017-09-05 21:06:36 UTC)
 * on 2017-09-18 at 08:15:41 UTC 
 * Modify at your own risk.
 */

package com.buy.housing.backend.blogEndPoint;

/**
 * Service definition for BlogEndPoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link BlogEndPointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class BlogEndPoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the blogEndPoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://housing-master-server.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "blogEndPoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public BlogEndPoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  BlogEndPoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addBlog".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link AddBlog#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param content the {@link com.buy.housing.backend.blogEndPoint.model.Blog}
   * @return the request
   */
  public AddBlog addBlog(java.lang.Long id, java.lang.String token, com.buy.housing.backend.blogEndPoint.model.Blog content) throws java.io.IOException {
    AddBlog result = new AddBlog(id, token, content);
    initialize(result);
    return result;
  }

  public class AddBlog extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "addBlog/{Id}/{token}";

    /**
     * Create a request for the method "addBlog".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link AddBlog#execute()} method to invoke the remote operation.
     * <p> {@link
     * AddBlog#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param content the {@link com.buy.housing.backend.blogEndPoint.model.Blog}
     * @since 1.13
     */
    protected AddBlog(java.lang.Long id, java.lang.String token, com.buy.housing.backend.blogEndPoint.model.Blog content) {
      super(BlogEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.blogEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public AddBlog setAlt(java.lang.String alt) {
      return (AddBlog) super.setAlt(alt);
    }

    @Override
    public AddBlog setFields(java.lang.String fields) {
      return (AddBlog) super.setFields(fields);
    }

    @Override
    public AddBlog setKey(java.lang.String key) {
      return (AddBlog) super.setKey(key);
    }

    @Override
    public AddBlog setOauthToken(java.lang.String oauthToken) {
      return (AddBlog) super.setOauthToken(oauthToken);
    }

    @Override
    public AddBlog setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddBlog) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddBlog setQuotaUser(java.lang.String quotaUser) {
      return (AddBlog) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddBlog setUserIp(java.lang.String userIp) {
      return (AddBlog) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public AddBlog setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public AddBlog setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @Override
    public AddBlog set(String parameterName, Object value) {
      return (AddBlog) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addBlogAuthor".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link AddBlogAuthor#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param content the {@link com.buy.housing.backend.blogEndPoint.model.BlogAuthor}
   * @return the request
   */
  public AddBlogAuthor addBlogAuthor(java.lang.Long id, java.lang.String token, com.buy.housing.backend.blogEndPoint.model.BlogAuthor content) throws java.io.IOException {
    AddBlogAuthor result = new AddBlogAuthor(id, token, content);
    initialize(result);
    return result;
  }

  public class AddBlogAuthor extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "addBlogAuthor/{Id}/{token}";

    /**
     * Create a request for the method "addBlogAuthor".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link AddBlogAuthor#execute()} method to invoke the remote
     * operation. <p> {@link AddBlogAuthor#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @param token
     * @param content the {@link com.buy.housing.backend.blogEndPoint.model.BlogAuthor}
     * @since 1.13
     */
    protected AddBlogAuthor(java.lang.Long id, java.lang.String token, com.buy.housing.backend.blogEndPoint.model.BlogAuthor content) {
      super(BlogEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.blogEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public AddBlogAuthor setAlt(java.lang.String alt) {
      return (AddBlogAuthor) super.setAlt(alt);
    }

    @Override
    public AddBlogAuthor setFields(java.lang.String fields) {
      return (AddBlogAuthor) super.setFields(fields);
    }

    @Override
    public AddBlogAuthor setKey(java.lang.String key) {
      return (AddBlogAuthor) super.setKey(key);
    }

    @Override
    public AddBlogAuthor setOauthToken(java.lang.String oauthToken) {
      return (AddBlogAuthor) super.setOauthToken(oauthToken);
    }

    @Override
    public AddBlogAuthor setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddBlogAuthor) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddBlogAuthor setQuotaUser(java.lang.String quotaUser) {
      return (AddBlogAuthor) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddBlogAuthor setUserIp(java.lang.String userIp) {
      return (AddBlogAuthor) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public AddBlogAuthor setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public AddBlogAuthor setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @Override
    public AddBlogAuthor set(String parameterName, Object value) {
      return (AddBlogAuthor) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addBlogCategory".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link AddBlogCategory#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param content the {@link com.buy.housing.backend.blogEndPoint.model.BlogCategory}
   * @return the request
   */
  public AddBlogCategory addBlogCategory(java.lang.Long id, java.lang.String token, com.buy.housing.backend.blogEndPoint.model.BlogCategory content) throws java.io.IOException {
    AddBlogCategory result = new AddBlogCategory(id, token, content);
    initialize(result);
    return result;
  }

  public class AddBlogCategory extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "addBlogCategory/{Id}/{token}";

    /**
     * Create a request for the method "addBlogCategory".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link AddBlogCategory#execute()} method to invoke the remote
     * operation. <p> {@link AddBlogCategory#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @param token
     * @param content the {@link com.buy.housing.backend.blogEndPoint.model.BlogCategory}
     * @since 1.13
     */
    protected AddBlogCategory(java.lang.Long id, java.lang.String token, com.buy.housing.backend.blogEndPoint.model.BlogCategory content) {
      super(BlogEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.blogEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public AddBlogCategory setAlt(java.lang.String alt) {
      return (AddBlogCategory) super.setAlt(alt);
    }

    @Override
    public AddBlogCategory setFields(java.lang.String fields) {
      return (AddBlogCategory) super.setFields(fields);
    }

    @Override
    public AddBlogCategory setKey(java.lang.String key) {
      return (AddBlogCategory) super.setKey(key);
    }

    @Override
    public AddBlogCategory setOauthToken(java.lang.String oauthToken) {
      return (AddBlogCategory) super.setOauthToken(oauthToken);
    }

    @Override
    public AddBlogCategory setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddBlogCategory) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddBlogCategory setQuotaUser(java.lang.String quotaUser) {
      return (AddBlogCategory) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddBlogCategory setUserIp(java.lang.String userIp) {
      return (AddBlogCategory) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public AddBlogCategory setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public AddBlogCategory setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @Override
    public AddBlogCategory set(String parameterName, Object value) {
      return (AddBlogCategory) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addBlogSubCategory".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link AddBlogSubCategory#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param content the {@link com.buy.housing.backend.blogEndPoint.model.BlogSubCategory}
   * @return the request
   */
  public AddBlogSubCategory addBlogSubCategory(java.lang.Long id, java.lang.String token, com.buy.housing.backend.blogEndPoint.model.BlogSubCategory content) throws java.io.IOException {
    AddBlogSubCategory result = new AddBlogSubCategory(id, token, content);
    initialize(result);
    return result;
  }

  public class AddBlogSubCategory extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "addBlogSubCategory/{Id}/{token}";

    /**
     * Create a request for the method "addBlogSubCategory".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link AddBlogSubCategory#execute()} method to invoke the remote
     * operation. <p> {@link AddBlogSubCategory#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param content the {@link com.buy.housing.backend.blogEndPoint.model.BlogSubCategory}
     * @since 1.13
     */
    protected AddBlogSubCategory(java.lang.Long id, java.lang.String token, com.buy.housing.backend.blogEndPoint.model.BlogSubCategory content) {
      super(BlogEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.blogEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public AddBlogSubCategory setAlt(java.lang.String alt) {
      return (AddBlogSubCategory) super.setAlt(alt);
    }

    @Override
    public AddBlogSubCategory setFields(java.lang.String fields) {
      return (AddBlogSubCategory) super.setFields(fields);
    }

    @Override
    public AddBlogSubCategory setKey(java.lang.String key) {
      return (AddBlogSubCategory) super.setKey(key);
    }

    @Override
    public AddBlogSubCategory setOauthToken(java.lang.String oauthToken) {
      return (AddBlogSubCategory) super.setOauthToken(oauthToken);
    }

    @Override
    public AddBlogSubCategory setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddBlogSubCategory) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddBlogSubCategory setQuotaUser(java.lang.String quotaUser) {
      return (AddBlogSubCategory) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddBlogSubCategory setUserIp(java.lang.String userIp) {
      return (AddBlogSubCategory) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public AddBlogSubCategory setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public AddBlogSubCategory setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @Override
    public AddBlogSubCategory set(String parameterName, Object value) {
      return (AddBlogSubCategory) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addBlogTag".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link AddBlogTag#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param content the {@link com.buy.housing.backend.blogEndPoint.model.BlogTag}
   * @return the request
   */
  public AddBlogTag addBlogTag(java.lang.Long id, java.lang.String token, com.buy.housing.backend.blogEndPoint.model.BlogTag content) throws java.io.IOException {
    AddBlogTag result = new AddBlogTag(id, token, content);
    initialize(result);
    return result;
  }

  public class AddBlogTag extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "addBlogTag/{Id}/{token}";

    /**
     * Create a request for the method "addBlogTag".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link AddBlogTag#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddBlogTag#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param content the {@link com.buy.housing.backend.blogEndPoint.model.BlogTag}
     * @since 1.13
     */
    protected AddBlogTag(java.lang.Long id, java.lang.String token, com.buy.housing.backend.blogEndPoint.model.BlogTag content) {
      super(BlogEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.blogEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public AddBlogTag setAlt(java.lang.String alt) {
      return (AddBlogTag) super.setAlt(alt);
    }

    @Override
    public AddBlogTag setFields(java.lang.String fields) {
      return (AddBlogTag) super.setFields(fields);
    }

    @Override
    public AddBlogTag setKey(java.lang.String key) {
      return (AddBlogTag) super.setKey(key);
    }

    @Override
    public AddBlogTag setOauthToken(java.lang.String oauthToken) {
      return (AddBlogTag) super.setOauthToken(oauthToken);
    }

    @Override
    public AddBlogTag setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddBlogTag) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddBlogTag setQuotaUser(java.lang.String quotaUser) {
      return (AddBlogTag) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddBlogTag setUserIp(java.lang.String userIp) {
      return (AddBlogTag) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public AddBlogTag setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public AddBlogTag setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @Override
    public AddBlogTag set(String parameterName, Object value) {
      return (AddBlogTag) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "editBlog".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link EditBlog#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param blogName
   * @param content the {@link com.buy.housing.backend.blogEndPoint.model.Blog}
   * @return the request
   */
  public EditBlog editBlog(java.lang.Long id, java.lang.String token, java.lang.String blogName, com.buy.housing.backend.blogEndPoint.model.Blog content) throws java.io.IOException {
    EditBlog result = new EditBlog(id, token, blogName, content);
    initialize(result);
    return result;
  }

  public class EditBlog extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "editBlog/{Id}/{token}/{blogName}";

    /**
     * Create a request for the method "editBlog".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link EditBlog#execute()} method to invoke the remote operation.
     * <p> {@link
     * EditBlog#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param blogName
     * @param content the {@link com.buy.housing.backend.blogEndPoint.model.Blog}
     * @since 1.13
     */
    protected EditBlog(java.lang.Long id, java.lang.String token, java.lang.String blogName, com.buy.housing.backend.blogEndPoint.model.Blog content) {
      super(BlogEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.blogEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
      this.blogName = com.google.api.client.util.Preconditions.checkNotNull(blogName, "Required parameter blogName must be specified.");
    }

    @Override
    public EditBlog setAlt(java.lang.String alt) {
      return (EditBlog) super.setAlt(alt);
    }

    @Override
    public EditBlog setFields(java.lang.String fields) {
      return (EditBlog) super.setFields(fields);
    }

    @Override
    public EditBlog setKey(java.lang.String key) {
      return (EditBlog) super.setKey(key);
    }

    @Override
    public EditBlog setOauthToken(java.lang.String oauthToken) {
      return (EditBlog) super.setOauthToken(oauthToken);
    }

    @Override
    public EditBlog setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (EditBlog) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public EditBlog setQuotaUser(java.lang.String quotaUser) {
      return (EditBlog) super.setQuotaUser(quotaUser);
    }

    @Override
    public EditBlog setUserIp(java.lang.String userIp) {
      return (EditBlog) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public EditBlog setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public EditBlog setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String blogName;

    /**

     */
    public java.lang.String getBlogName() {
      return blogName;
    }

    public EditBlog setBlogName(java.lang.String blogName) {
      this.blogName = blogName;
      return this;
    }

    @Override
    public EditBlog set(String parameterName, Object value) {
      return (EditBlog) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getBlog".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link GetBlog#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param blogName
   * @param preview
   * @return the request
   */
  public GetBlog getBlog(java.lang.Long id, java.lang.String token, java.lang.String blogName, java.lang.Boolean preview) throws java.io.IOException {
    GetBlog result = new GetBlog(id, token, blogName, preview);
    initialize(result);
    return result;
  }

  public class GetBlog extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.BlogResponse> {

    private static final String REST_PATH = "blogresponse/{Id}/{token}/{blogName}/{preview}";

    /**
     * Create a request for the method "getBlog".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link GetBlog#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetBlog#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param blogName
     * @param preview
     * @since 1.13
     */
    protected GetBlog(java.lang.Long id, java.lang.String token, java.lang.String blogName, java.lang.Boolean preview) {
      super(BlogEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.blogEndPoint.model.BlogResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
      this.blogName = com.google.api.client.util.Preconditions.checkNotNull(blogName, "Required parameter blogName must be specified.");
      this.preview = com.google.api.client.util.Preconditions.checkNotNull(preview, "Required parameter preview must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetBlog setAlt(java.lang.String alt) {
      return (GetBlog) super.setAlt(alt);
    }

    @Override
    public GetBlog setFields(java.lang.String fields) {
      return (GetBlog) super.setFields(fields);
    }

    @Override
    public GetBlog setKey(java.lang.String key) {
      return (GetBlog) super.setKey(key);
    }

    @Override
    public GetBlog setOauthToken(java.lang.String oauthToken) {
      return (GetBlog) super.setOauthToken(oauthToken);
    }

    @Override
    public GetBlog setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetBlog) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetBlog setQuotaUser(java.lang.String quotaUser) {
      return (GetBlog) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetBlog setUserIp(java.lang.String userIp) {
      return (GetBlog) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetBlog setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public GetBlog setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String blogName;

    /**

     */
    public java.lang.String getBlogName() {
      return blogName;
    }

    public GetBlog setBlogName(java.lang.String blogName) {
      this.blogName = blogName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean preview;

    /**

     */
    public java.lang.Boolean getPreview() {
      return preview;
    }

    public GetBlog setPreview(java.lang.Boolean preview) {
      this.preview = preview;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean next;

    /**

     */
    public java.lang.Boolean getNext() {
      return next;
    }

    public GetBlog setNext(java.lang.Boolean next) {
      this.next = next;
      return this;
    }

    @Override
    public GetBlog set(String parameterName, Object value) {
      return (GetBlog) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getBlogAuthor".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link GetBlogAuthor#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param author
   * @return the request
   */
  public GetBlogAuthor getBlogAuthor(java.lang.Long id, java.lang.String token, java.lang.String author) throws java.io.IOException {
    GetBlogAuthor result = new GetBlogAuthor(id, token, author);
    initialize(result);
    return result;
  }

  public class GetBlogAuthor extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.BlogAuthorCollection> {

    private static final String REST_PATH = "blogauthorcollection/{Id}/{token}/{author}";

    /**
     * Create a request for the method "getBlogAuthor".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link GetBlogAuthor#execute()} method to invoke the remote
     * operation. <p> {@link GetBlogAuthor#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @param token
     * @param author
     * @since 1.13
     */
    protected GetBlogAuthor(java.lang.Long id, java.lang.String token, java.lang.String author) {
      super(BlogEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.blogEndPoint.model.BlogAuthorCollection.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
      this.author = com.google.api.client.util.Preconditions.checkNotNull(author, "Required parameter author must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetBlogAuthor setAlt(java.lang.String alt) {
      return (GetBlogAuthor) super.setAlt(alt);
    }

    @Override
    public GetBlogAuthor setFields(java.lang.String fields) {
      return (GetBlogAuthor) super.setFields(fields);
    }

    @Override
    public GetBlogAuthor setKey(java.lang.String key) {
      return (GetBlogAuthor) super.setKey(key);
    }

    @Override
    public GetBlogAuthor setOauthToken(java.lang.String oauthToken) {
      return (GetBlogAuthor) super.setOauthToken(oauthToken);
    }

    @Override
    public GetBlogAuthor setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetBlogAuthor) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetBlogAuthor setQuotaUser(java.lang.String quotaUser) {
      return (GetBlogAuthor) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetBlogAuthor setUserIp(java.lang.String userIp) {
      return (GetBlogAuthor) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetBlogAuthor setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public GetBlogAuthor setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String author;

    /**

     */
    public java.lang.String getAuthor() {
      return author;
    }

    public GetBlogAuthor setAuthor(java.lang.String author) {
      this.author = author;
      return this;
    }

    @Override
    public GetBlogAuthor set(String parameterName, Object value) {
      return (GetBlogAuthor) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getBlogCategories".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link GetBlogCategories#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @return the request
   */
  public GetBlogCategories getBlogCategories(java.lang.Long id, java.lang.String token) throws java.io.IOException {
    GetBlogCategories result = new GetBlogCategories(id, token);
    initialize(result);
    return result;
  }

  public class GetBlogCategories extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.BlogCategoryCollection> {

    private static final String REST_PATH = "blogcategorycollection/{Id}/{token}";

    /**
     * Create a request for the method "getBlogCategories".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link GetBlogCategories#execute()} method to invoke the remote
     * operation. <p> {@link GetBlogCategories#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @since 1.13
     */
    protected GetBlogCategories(java.lang.Long id, java.lang.String token) {
      super(BlogEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.blogEndPoint.model.BlogCategoryCollection.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetBlogCategories setAlt(java.lang.String alt) {
      return (GetBlogCategories) super.setAlt(alt);
    }

    @Override
    public GetBlogCategories setFields(java.lang.String fields) {
      return (GetBlogCategories) super.setFields(fields);
    }

    @Override
    public GetBlogCategories setKey(java.lang.String key) {
      return (GetBlogCategories) super.setKey(key);
    }

    @Override
    public GetBlogCategories setOauthToken(java.lang.String oauthToken) {
      return (GetBlogCategories) super.setOauthToken(oauthToken);
    }

    @Override
    public GetBlogCategories setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetBlogCategories) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetBlogCategories setQuotaUser(java.lang.String quotaUser) {
      return (GetBlogCategories) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetBlogCategories setUserIp(java.lang.String userIp) {
      return (GetBlogCategories) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetBlogCategories setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public GetBlogCategories setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @Override
    public GetBlogCategories set(String parameterName, Object value) {
      return (GetBlogCategories) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getBlogImages".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link GetBlogImages#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param path
   * @return the request
   */
  public GetBlogImages getBlogImages(java.lang.Long id, java.lang.String token, java.lang.String path) throws java.io.IOException {
    GetBlogImages result = new GetBlogImages(id, token, path);
    initialize(result);
    return result;
  }

  public class GetBlogImages extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.BlogImageResponse> {

    private static final String REST_PATH = "blogimageresponse/{Id}/{token}/{path}";

    /**
     * Create a request for the method "getBlogImages".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link GetBlogImages#execute()} method to invoke the remote
     * operation. <p> {@link GetBlogImages#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @param token
     * @param path
     * @since 1.13
     */
    protected GetBlogImages(java.lang.Long id, java.lang.String token, java.lang.String path) {
      super(BlogEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.blogEndPoint.model.BlogImageResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
      this.path = com.google.api.client.util.Preconditions.checkNotNull(path, "Required parameter path must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetBlogImages setAlt(java.lang.String alt) {
      return (GetBlogImages) super.setAlt(alt);
    }

    @Override
    public GetBlogImages setFields(java.lang.String fields) {
      return (GetBlogImages) super.setFields(fields);
    }

    @Override
    public GetBlogImages setKey(java.lang.String key) {
      return (GetBlogImages) super.setKey(key);
    }

    @Override
    public GetBlogImages setOauthToken(java.lang.String oauthToken) {
      return (GetBlogImages) super.setOauthToken(oauthToken);
    }

    @Override
    public GetBlogImages setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetBlogImages) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetBlogImages setQuotaUser(java.lang.String quotaUser) {
      return (GetBlogImages) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetBlogImages setUserIp(java.lang.String userIp) {
      return (GetBlogImages) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetBlogImages setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public GetBlogImages setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String path;

    /**

     */
    public java.lang.String getPath() {
      return path;
    }

    public GetBlogImages setPath(java.lang.String path) {
      this.path = path;
      return this;
    }

    @Override
    public GetBlogImages set(String parameterName, Object value) {
      return (GetBlogImages) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getBlogSubCategories".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link GetBlogSubCategories#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @param token
   * @return the request
   */
  public GetBlogSubCategories getBlogSubCategories(java.lang.Long id, java.lang.String token) throws java.io.IOException {
    GetBlogSubCategories result = new GetBlogSubCategories(id, token);
    initialize(result);
    return result;
  }

  public class GetBlogSubCategories extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.BlogSubCategoryCollection> {

    private static final String REST_PATH = "blogsubcategorycollection/{Id}/{token}";

    /**
     * Create a request for the method "getBlogSubCategories".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link GetBlogSubCategories#execute()} method to invoke the
     * remote operation. <p> {@link GetBlogSubCategories#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @since 1.13
     */
    protected GetBlogSubCategories(java.lang.Long id, java.lang.String token) {
      super(BlogEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.blogEndPoint.model.BlogSubCategoryCollection.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetBlogSubCategories setAlt(java.lang.String alt) {
      return (GetBlogSubCategories) super.setAlt(alt);
    }

    @Override
    public GetBlogSubCategories setFields(java.lang.String fields) {
      return (GetBlogSubCategories) super.setFields(fields);
    }

    @Override
    public GetBlogSubCategories setKey(java.lang.String key) {
      return (GetBlogSubCategories) super.setKey(key);
    }

    @Override
    public GetBlogSubCategories setOauthToken(java.lang.String oauthToken) {
      return (GetBlogSubCategories) super.setOauthToken(oauthToken);
    }

    @Override
    public GetBlogSubCategories setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetBlogSubCategories) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetBlogSubCategories setQuotaUser(java.lang.String quotaUser) {
      return (GetBlogSubCategories) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetBlogSubCategories setUserIp(java.lang.String userIp) {
      return (GetBlogSubCategories) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetBlogSubCategories setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public GetBlogSubCategories setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @Override
    public GetBlogSubCategories set(String parameterName, Object value) {
      return (GetBlogSubCategories) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getBlogTags".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link GetBlogTags#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @return the request
   */
  public GetBlogTags getBlogTags(java.lang.Long id, java.lang.String token) throws java.io.IOException {
    GetBlogTags result = new GetBlogTags(id, token);
    initialize(result);
    return result;
  }

  public class GetBlogTags extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.BlogTagCollection> {

    private static final String REST_PATH = "blogtagcollection/{Id}/{token}";

    /**
     * Create a request for the method "getBlogTags".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link GetBlogTags#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetBlogTags#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @since 1.13
     */
    protected GetBlogTags(java.lang.Long id, java.lang.String token) {
      super(BlogEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.blogEndPoint.model.BlogTagCollection.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetBlogTags setAlt(java.lang.String alt) {
      return (GetBlogTags) super.setAlt(alt);
    }

    @Override
    public GetBlogTags setFields(java.lang.String fields) {
      return (GetBlogTags) super.setFields(fields);
    }

    @Override
    public GetBlogTags setKey(java.lang.String key) {
      return (GetBlogTags) super.setKey(key);
    }

    @Override
    public GetBlogTags setOauthToken(java.lang.String oauthToken) {
      return (GetBlogTags) super.setOauthToken(oauthToken);
    }

    @Override
    public GetBlogTags setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetBlogTags) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetBlogTags setQuotaUser(java.lang.String quotaUser) {
      return (GetBlogTags) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetBlogTags setUserIp(java.lang.String userIp) {
      return (GetBlogTags) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetBlogTags setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public GetBlogTags setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @Override
    public GetBlogTags set(String parameterName, Object value) {
      return (GetBlogTags) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getBlogs".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link GetBlogs#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param offset
   * @param limit
   * @return the request
   */
  public GetBlogs getBlogs(java.lang.Long id, java.lang.String token, java.lang.Integer offset, java.lang.Integer limit) throws java.io.IOException {
    GetBlogs result = new GetBlogs(id, token, offset, limit);
    initialize(result);
    return result;
  }

  public class GetBlogs extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.BlogListResponse> {

    private static final String REST_PATH = "bloglistresponse/{Id}/{token}/{offset}/{limit}";

    /**
     * Create a request for the method "getBlogs".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link GetBlogs#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetBlogs#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param offset
     * @param limit
     * @since 1.13
     */
    protected GetBlogs(java.lang.Long id, java.lang.String token, java.lang.Integer offset, java.lang.Integer limit) {
      super(BlogEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.blogEndPoint.model.BlogListResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
      this.offset = com.google.api.client.util.Preconditions.checkNotNull(offset, "Required parameter offset must be specified.");
      this.limit = com.google.api.client.util.Preconditions.checkNotNull(limit, "Required parameter limit must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetBlogs setAlt(java.lang.String alt) {
      return (GetBlogs) super.setAlt(alt);
    }

    @Override
    public GetBlogs setFields(java.lang.String fields) {
      return (GetBlogs) super.setFields(fields);
    }

    @Override
    public GetBlogs setKey(java.lang.String key) {
      return (GetBlogs) super.setKey(key);
    }

    @Override
    public GetBlogs setOauthToken(java.lang.String oauthToken) {
      return (GetBlogs) super.setOauthToken(oauthToken);
    }

    @Override
    public GetBlogs setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetBlogs) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetBlogs setQuotaUser(java.lang.String quotaUser) {
      return (GetBlogs) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetBlogs setUserIp(java.lang.String userIp) {
      return (GetBlogs) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetBlogs setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public GetBlogs setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer offset;

    /**

     */
    public java.lang.Integer getOffset() {
      return offset;
    }

    public GetBlogs setOffset(java.lang.Integer offset) {
      this.offset = offset;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public GetBlogs setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String blogStatus;

    /**

     */
    public java.lang.String getBlogStatus() {
      return blogStatus;
    }

    public GetBlogs setBlogStatus(java.lang.String blogStatus) {
      this.blogStatus = blogStatus;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String blogTag;

    /**

     */
    public java.lang.String getBlogTag() {
      return blogTag;
    }

    public GetBlogs setBlogTag(java.lang.String blogTag) {
      this.blogTag = blogTag;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String blogCategory;

    /**

     */
    public java.lang.String getBlogCategory() {
      return blogCategory;
    }

    public GetBlogs setBlogCategory(java.lang.String blogCategory) {
      this.blogCategory = blogCategory;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String blogSubCategory;

    /**

     */
    public java.lang.String getBlogSubCategory() {
      return blogSubCategory;
    }

    public GetBlogs setBlogSubCategory(java.lang.String blogSubCategory) {
      this.blogSubCategory = blogSubCategory;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean summary;

    /**

     */
    public java.lang.Boolean getSummary() {
      return summary;
    }

    public GetBlogs setSummary(java.lang.Boolean summary) {
      this.summary = summary;
      return this;
    }

    @Override
    public GetBlogs set(String parameterName, Object value) {
      return (GetBlogs) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getNews".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link GetNews#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetNews getNews() throws java.io.IOException {
    GetNews result = new GetNews();
    initialize(result);
    return result;
  }

  public class GetNews extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.GetNewsResponse> {

    private static final String REST_PATH = "getnewsresponse";

    /**
     * Create a request for the method "getNews".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link GetNews#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetNews#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetNews() {
      super(BlogEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.blogEndPoint.model.GetNewsResponse.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetNews setAlt(java.lang.String alt) {
      return (GetNews) super.setAlt(alt);
    }

    @Override
    public GetNews setFields(java.lang.String fields) {
      return (GetNews) super.setFields(fields);
    }

    @Override
    public GetNews setKey(java.lang.String key) {
      return (GetNews) super.setKey(key);
    }

    @Override
    public GetNews setOauthToken(java.lang.String oauthToken) {
      return (GetNews) super.setOauthToken(oauthToken);
    }

    @Override
    public GetNews setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetNews) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetNews setQuotaUser(java.lang.String quotaUser) {
      return (GetNews) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetNews setUserIp(java.lang.String userIp) {
      return (GetNews) super.setUserIp(userIp);
    }

    @Override
    public GetNews set(String parameterName, Object value) {
      return (GetNews) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getPopularBlogs".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link GetPopularBlogs#execute()} method to invoke the remote operation.
   *
   * @param offset
   * @param limit
   * @return the request
   */
  public GetPopularBlogs getPopularBlogs(java.lang.Integer offset, java.lang.Integer limit) throws java.io.IOException {
    GetPopularBlogs result = new GetPopularBlogs(offset, limit);
    initialize(result);
    return result;
  }

  public class GetPopularBlogs extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.BlogListResponse> {

    private static final String REST_PATH = "bloglistresponse/{offset}/{limit}";

    /**
     * Create a request for the method "getPopularBlogs".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link GetPopularBlogs#execute()} method to invoke the remote
     * operation. <p> {@link GetPopularBlogs#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param offset
     * @param limit
     * @since 1.13
     */
    protected GetPopularBlogs(java.lang.Integer offset, java.lang.Integer limit) {
      super(BlogEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.blogEndPoint.model.BlogListResponse.class);
      this.offset = com.google.api.client.util.Preconditions.checkNotNull(offset, "Required parameter offset must be specified.");
      this.limit = com.google.api.client.util.Preconditions.checkNotNull(limit, "Required parameter limit must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetPopularBlogs setAlt(java.lang.String alt) {
      return (GetPopularBlogs) super.setAlt(alt);
    }

    @Override
    public GetPopularBlogs setFields(java.lang.String fields) {
      return (GetPopularBlogs) super.setFields(fields);
    }

    @Override
    public GetPopularBlogs setKey(java.lang.String key) {
      return (GetPopularBlogs) super.setKey(key);
    }

    @Override
    public GetPopularBlogs setOauthToken(java.lang.String oauthToken) {
      return (GetPopularBlogs) super.setOauthToken(oauthToken);
    }

    @Override
    public GetPopularBlogs setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetPopularBlogs) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetPopularBlogs setQuotaUser(java.lang.String quotaUser) {
      return (GetPopularBlogs) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetPopularBlogs setUserIp(java.lang.String userIp) {
      return (GetPopularBlogs) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer offset;

    /**

     */
    public java.lang.Integer getOffset() {
      return offset;
    }

    public GetPopularBlogs setOffset(java.lang.Integer offset) {
      this.offset = offset;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public GetPopularBlogs setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public GetPopularBlogs set(String parameterName, Object value) {
      return (GetPopularBlogs) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "publishBlog".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link PublishBlog#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param blogName
   * @param blogStatus
   * @return the request
   */
  public PublishBlog publishBlog(java.lang.Long id, java.lang.String token, java.lang.String blogName, java.lang.String blogStatus) throws java.io.IOException {
    PublishBlog result = new PublishBlog(id, token, blogName, blogStatus);
    initialize(result);
    return result;
  }

  public class PublishBlog extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "publishBlog/{Id}/{token}/{blogName}/{blogStatus}";

    /**
     * Create a request for the method "publishBlog".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link PublishBlog#execute()} method to invoke the remote
     * operation. <p> {@link
     * PublishBlog#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param blogName
     * @param blogStatus
     * @since 1.13
     */
    protected PublishBlog(java.lang.Long id, java.lang.String token, java.lang.String blogName, java.lang.String blogStatus) {
      super(BlogEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.blogEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
      this.blogName = com.google.api.client.util.Preconditions.checkNotNull(blogName, "Required parameter blogName must be specified.");
      this.blogStatus = com.google.api.client.util.Preconditions.checkNotNull(blogStatus, "Required parameter blogStatus must be specified.");
    }

    @Override
    public PublishBlog setAlt(java.lang.String alt) {
      return (PublishBlog) super.setAlt(alt);
    }

    @Override
    public PublishBlog setFields(java.lang.String fields) {
      return (PublishBlog) super.setFields(fields);
    }

    @Override
    public PublishBlog setKey(java.lang.String key) {
      return (PublishBlog) super.setKey(key);
    }

    @Override
    public PublishBlog setOauthToken(java.lang.String oauthToken) {
      return (PublishBlog) super.setOauthToken(oauthToken);
    }

    @Override
    public PublishBlog setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (PublishBlog) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public PublishBlog setQuotaUser(java.lang.String quotaUser) {
      return (PublishBlog) super.setQuotaUser(quotaUser);
    }

    @Override
    public PublishBlog setUserIp(java.lang.String userIp) {
      return (PublishBlog) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public PublishBlog setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public PublishBlog setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String blogName;

    /**

     */
    public java.lang.String getBlogName() {
      return blogName;
    }

    public PublishBlog setBlogName(java.lang.String blogName) {
      this.blogName = blogName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String blogStatus;

    /**

     */
    public java.lang.String getBlogStatus() {
      return blogStatus;
    }

    public PublishBlog setBlogStatus(java.lang.String blogStatus) {
      this.blogStatus = blogStatus;
      return this;
    }

    @Override
    public PublishBlog set(String parameterName, Object value) {
      return (PublishBlog) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "subscribe".
   *
   * This request holds the parameters needed by the blogEndPoint server.  After setting any optional
   * parameters, call the {@link Subscribe#execute()} method to invoke the remote operation.
   *
   * @param subscribeType
   * @return the request
   */
  public Subscribe subscribe(java.lang.String subscribeType) throws java.io.IOException {
    Subscribe result = new Subscribe(subscribeType);
    initialize(result);
    return result;
  }

  public class Subscribe extends BlogEndPointRequest<com.buy.housing.backend.blogEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "subscribe/{subscribeType}";

    /**
     * Create a request for the method "subscribe".
     *
     * This request holds the parameters needed by the the blogEndPoint server.  After setting any
     * optional parameters, call the {@link Subscribe#execute()} method to invoke the remote
     * operation. <p> {@link
     * Subscribe#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param subscribeType
     * @since 1.13
     */
    protected Subscribe(java.lang.String subscribeType) {
      super(BlogEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.blogEndPoint.model.CommonResponse.class);
      this.subscribeType = com.google.api.client.util.Preconditions.checkNotNull(subscribeType, "Required parameter subscribeType must be specified.");
    }

    @Override
    public Subscribe setAlt(java.lang.String alt) {
      return (Subscribe) super.setAlt(alt);
    }

    @Override
    public Subscribe setFields(java.lang.String fields) {
      return (Subscribe) super.setFields(fields);
    }

    @Override
    public Subscribe setKey(java.lang.String key) {
      return (Subscribe) super.setKey(key);
    }

    @Override
    public Subscribe setOauthToken(java.lang.String oauthToken) {
      return (Subscribe) super.setOauthToken(oauthToken);
    }

    @Override
    public Subscribe setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Subscribe) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Subscribe setQuotaUser(java.lang.String quotaUser) {
      return (Subscribe) super.setQuotaUser(quotaUser);
    }

    @Override
    public Subscribe setUserIp(java.lang.String userIp) {
      return (Subscribe) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String subscribeType;

    /**

     */
    public java.lang.String getSubscribeType() {
      return subscribeType;
    }

    public Subscribe setSubscribeType(java.lang.String subscribeType) {
      this.subscribeType = subscribeType;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public Subscribe setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String phone;

    /**

     */
    public java.lang.String getPhone() {
      return phone;
    }

    public Subscribe setPhone(java.lang.String phone) {
      this.phone = phone;
      return this;
    }

    @Override
    public Subscribe set(String parameterName, Object value) {
      return (Subscribe) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link BlogEndPoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link BlogEndPoint}. */
    @Override
    public BlogEndPoint build() {
      return new BlogEndPoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link BlogEndPointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setBlogEndPointRequestInitializer(
        BlogEndPointRequestInitializer blogendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(blogendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
