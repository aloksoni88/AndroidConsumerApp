/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2017-09-05 21:06:36 UTC)
 * on 2017-09-25 at 11:50:49 UTC 
 * Modify at your own risk.
 */

package com.buy.housing.backend.taskEndPoint;

/**
 * Service definition for TaskEndPoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link TaskEndPointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class TaskEndPoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the taskEndPoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://housingtestserver.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "taskEndPoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public TaskEndPoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  TaskEndPoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addComment".
   *
   * This request holds the parameters needed by the taskEndPoint server.  After setting any optional
   * parameters, call the {@link AddComment#execute()} method to invoke the remote operation.
   *
   * @param taskId
   * @param content the {@link com.buy.housing.backend.taskEndPoint.model.Comment}
   * @return the request
   */
  public AddComment addComment(java.lang.String taskId, com.buy.housing.backend.taskEndPoint.model.Comment content) throws java.io.IOException {
    AddComment result = new AddComment(taskId, content);
    initialize(result);
    return result;
  }

  public class AddComment extends TaskEndPointRequest<com.buy.housing.backend.taskEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "addComment/{taskId}";

    /**
     * Create a request for the method "addComment".
     *
     * This request holds the parameters needed by the the taskEndPoint server.  After setting any
     * optional parameters, call the {@link AddComment#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddComment#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param taskId
     * @param content the {@link com.buy.housing.backend.taskEndPoint.model.Comment}
     * @since 1.13
     */
    protected AddComment(java.lang.String taskId, com.buy.housing.backend.taskEndPoint.model.Comment content) {
      super(TaskEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.taskEndPoint.model.CommonResponse.class);
      this.taskId = com.google.api.client.util.Preconditions.checkNotNull(taskId, "Required parameter taskId must be specified.");
    }

    @Override
    public AddComment setAlt(java.lang.String alt) {
      return (AddComment) super.setAlt(alt);
    }

    @Override
    public AddComment setFields(java.lang.String fields) {
      return (AddComment) super.setFields(fields);
    }

    @Override
    public AddComment setKey(java.lang.String key) {
      return (AddComment) super.setKey(key);
    }

    @Override
    public AddComment setOauthToken(java.lang.String oauthToken) {
      return (AddComment) super.setOauthToken(oauthToken);
    }

    @Override
    public AddComment setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddComment) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddComment setQuotaUser(java.lang.String quotaUser) {
      return (AddComment) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddComment setUserIp(java.lang.String userIp) {
      return (AddComment) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String taskId;

    /**

     */
    public java.lang.String getTaskId() {
      return taskId;
    }

    public AddComment setTaskId(java.lang.String taskId) {
      this.taskId = taskId;
      return this;
    }

    @Override
    public AddComment set(String parameterName, Object value) {
      return (AddComment) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addTask".
   *
   * This request holds the parameters needed by the taskEndPoint server.  After setting any optional
   * parameters, call the {@link AddTask#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.buy.housing.backend.taskEndPoint.model.Task}
   * @return the request
   */
  public AddTask addTask(com.buy.housing.backend.taskEndPoint.model.Task content) throws java.io.IOException {
    AddTask result = new AddTask(content);
    initialize(result);
    return result;
  }

  public class AddTask extends TaskEndPointRequest<com.buy.housing.backend.taskEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "addTask";

    /**
     * Create a request for the method "addTask".
     *
     * This request holds the parameters needed by the the taskEndPoint server.  After setting any
     * optional parameters, call the {@link AddTask#execute()} method to invoke the remote operation.
     * <p> {@link
     * AddTask#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.buy.housing.backend.taskEndPoint.model.Task}
     * @since 1.13
     */
    protected AddTask(com.buy.housing.backend.taskEndPoint.model.Task content) {
      super(TaskEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.taskEndPoint.model.CommonResponse.class);
    }

    @Override
    public AddTask setAlt(java.lang.String alt) {
      return (AddTask) super.setAlt(alt);
    }

    @Override
    public AddTask setFields(java.lang.String fields) {
      return (AddTask) super.setFields(fields);
    }

    @Override
    public AddTask setKey(java.lang.String key) {
      return (AddTask) super.setKey(key);
    }

    @Override
    public AddTask setOauthToken(java.lang.String oauthToken) {
      return (AddTask) super.setOauthToken(oauthToken);
    }

    @Override
    public AddTask setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddTask) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddTask setQuotaUser(java.lang.String quotaUser) {
      return (AddTask) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddTask setUserIp(java.lang.String userIp) {
      return (AddTask) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public AddTask setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long agentId;

    /**

     */
    public java.lang.Long getAgentId() {
      return agentId;
    }

    public AddTask setAgentId(java.lang.Long agentId) {
      this.agentId = agentId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String osTyp;

    /**

     */
    public java.lang.String getOsTyp() {
      return osTyp;
    }

    public AddTask setOsTyp(java.lang.String osTyp) {
      this.osTyp = osTyp;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long customerId;

    /**

     */
    public java.lang.Long getCustomerId() {
      return customerId;
    }

    public AddTask setCustomerId(java.lang.Long customerId) {
      this.customerId = customerId;
      return this;
    }

    @Override
    public AddTask set(String parameterName, Object value) {
      return (AddTask) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "assignTaskToConcierge".
   *
   * This request holds the parameters needed by the taskEndPoint server.  After setting any optional
   * parameters, call the {@link AssignTaskToConcierge#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.buy.housing.backend.taskEndPoint.model.Task}
   * @return the request
   */
  public AssignTaskToConcierge assignTaskToConcierge(com.buy.housing.backend.taskEndPoint.model.Task content) throws java.io.IOException {
    AssignTaskToConcierge result = new AssignTaskToConcierge(content);
    initialize(result);
    return result;
  }

  public class AssignTaskToConcierge extends TaskEndPointRequest<com.buy.housing.backend.taskEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "assignTaskToConcierge";

    /**
     * Create a request for the method "assignTaskToConcierge".
     *
     * This request holds the parameters needed by the the taskEndPoint server.  After setting any
     * optional parameters, call the {@link AssignTaskToConcierge#execute()} method to invoke the
     * remote operation. <p> {@link AssignTaskToConcierge#initialize(com.google.api.client.googleapis.
     * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.buy.housing.backend.taskEndPoint.model.Task}
     * @since 1.13
     */
    protected AssignTaskToConcierge(com.buy.housing.backend.taskEndPoint.model.Task content) {
      super(TaskEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.taskEndPoint.model.CommonResponse.class);
    }

    @Override
    public AssignTaskToConcierge setAlt(java.lang.String alt) {
      return (AssignTaskToConcierge) super.setAlt(alt);
    }

    @Override
    public AssignTaskToConcierge setFields(java.lang.String fields) {
      return (AssignTaskToConcierge) super.setFields(fields);
    }

    @Override
    public AssignTaskToConcierge setKey(java.lang.String key) {
      return (AssignTaskToConcierge) super.setKey(key);
    }

    @Override
    public AssignTaskToConcierge setOauthToken(java.lang.String oauthToken) {
      return (AssignTaskToConcierge) super.setOauthToken(oauthToken);
    }

    @Override
    public AssignTaskToConcierge setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AssignTaskToConcierge) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AssignTaskToConcierge setQuotaUser(java.lang.String quotaUser) {
      return (AssignTaskToConcierge) super.setQuotaUser(quotaUser);
    }

    @Override
    public AssignTaskToConcierge setUserIp(java.lang.String userIp) {
      return (AssignTaskToConcierge) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public AssignTaskToConcierge setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public AssignTaskToConcierge setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public AssignTaskToConcierge set(String parameterName, Object value) {
      return (AssignTaskToConcierge) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTaskById".
   *
   * This request holds the parameters needed by the taskEndPoint server.  After setting any optional
   * parameters, call the {@link GetTaskById#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetTaskById getTaskById(java.lang.String id) throws java.io.IOException {
    GetTaskById result = new GetTaskById(id);
    initialize(result);
    return result;
  }

  public class GetTaskById extends TaskEndPointRequest<com.buy.housing.backend.taskEndPoint.model.Task> {

    private static final String REST_PATH = "task/{id}";

    /**
     * Create a request for the method "getTaskById".
     *
     * This request holds the parameters needed by the the taskEndPoint server.  After setting any
     * optional parameters, call the {@link GetTaskById#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetTaskById#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetTaskById(java.lang.String id) {
      super(TaskEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.taskEndPoint.model.Task.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public GetTaskById setAlt(java.lang.String alt) {
      return (GetTaskById) super.setAlt(alt);
    }

    @Override
    public GetTaskById setFields(java.lang.String fields) {
      return (GetTaskById) super.setFields(fields);
    }

    @Override
    public GetTaskById setKey(java.lang.String key) {
      return (GetTaskById) super.setKey(key);
    }

    @Override
    public GetTaskById setOauthToken(java.lang.String oauthToken) {
      return (GetTaskById) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTaskById setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTaskById) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTaskById setQuotaUser(java.lang.String quotaUser) {
      return (GetTaskById) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTaskById setUserIp(java.lang.String userIp) {
      return (GetTaskById) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public GetTaskById setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public GetTaskById set(String parameterName, Object value) {
      return (GetTaskById) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTaskDetail".
   *
   * This request holds the parameters needed by the taskEndPoint server.  After setting any optional
   * parameters, call the {@link GetTaskDetail#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetTaskDetail getTaskDetail(java.lang.String id) throws java.io.IOException {
    GetTaskDetail result = new GetTaskDetail(id);
    initialize(result);
    return result;
  }

  public class GetTaskDetail extends TaskEndPointRequest<com.buy.housing.backend.taskEndPoint.model.GetTaskDetailResponse> {

    private static final String REST_PATH = "gettaskdetailresponse/{id}";

    /**
     * Create a request for the method "getTaskDetail".
     *
     * This request holds the parameters needed by the the taskEndPoint server.  After setting any
     * optional parameters, call the {@link GetTaskDetail#execute()} method to invoke the remote
     * operation. <p> {@link GetTaskDetail#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetTaskDetail(java.lang.String id) {
      super(TaskEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.taskEndPoint.model.GetTaskDetailResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public GetTaskDetail setAlt(java.lang.String alt) {
      return (GetTaskDetail) super.setAlt(alt);
    }

    @Override
    public GetTaskDetail setFields(java.lang.String fields) {
      return (GetTaskDetail) super.setFields(fields);
    }

    @Override
    public GetTaskDetail setKey(java.lang.String key) {
      return (GetTaskDetail) super.setKey(key);
    }

    @Override
    public GetTaskDetail setOauthToken(java.lang.String oauthToken) {
      return (GetTaskDetail) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTaskDetail setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTaskDetail) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTaskDetail setQuotaUser(java.lang.String quotaUser) {
      return (GetTaskDetail) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTaskDetail setUserIp(java.lang.String userIp) {
      return (GetTaskDetail) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public GetTaskDetail setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public GetTaskDetail set(String parameterName, Object value) {
      return (GetTaskDetail) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTaskList".
   *
   * This request holds the parameters needed by the taskEndPoint server.  After setting any optional
   * parameters, call the {@link GetTaskList#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetTaskList getTaskList(java.lang.Long id) throws java.io.IOException {
    GetTaskList result = new GetTaskList(id);
    initialize(result);
    return result;
  }

  public class GetTaskList extends TaskEndPointRequest<com.buy.housing.backend.taskEndPoint.model.TaskCollection> {

    private static final String REST_PATH = "taskcollection/{id}";

    /**
     * Create a request for the method "getTaskList".
     *
     * This request holds the parameters needed by the the taskEndPoint server.  After setting any
     * optional parameters, call the {@link GetTaskList#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetTaskList#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetTaskList(java.lang.Long id) {
      super(TaskEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.taskEndPoint.model.TaskCollection.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetTaskList setAlt(java.lang.String alt) {
      return (GetTaskList) super.setAlt(alt);
    }

    @Override
    public GetTaskList setFields(java.lang.String fields) {
      return (GetTaskList) super.setFields(fields);
    }

    @Override
    public GetTaskList setKey(java.lang.String key) {
      return (GetTaskList) super.setKey(key);
    }

    @Override
    public GetTaskList setOauthToken(java.lang.String oauthToken) {
      return (GetTaskList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTaskList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTaskList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTaskList setQuotaUser(java.lang.String quotaUser) {
      return (GetTaskList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTaskList setUserIp(java.lang.String userIp) {
      return (GetTaskList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetTaskList setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long startTime;

    /**

     */
    public java.lang.Long getStartTime() {
      return startTime;
    }

    public GetTaskList setStartTime(java.lang.Long startTime) {
      this.startTime = startTime;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long endTime;

    /**

     */
    public java.lang.Long getEndTime() {
      return endTime;
    }

    public GetTaskList setEndTime(java.lang.Long endTime) {
      this.endTime = endTime;
      return this;
    }

    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> taskStatus;

    /**

     */
    public java.util.List<java.lang.String> getTaskStatus() {
      return taskStatus;
    }

    public GetTaskList setTaskStatus(java.util.List<java.lang.String> taskStatus) {
      this.taskStatus = taskStatus;
      return this;
    }

    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> priority;

    /**

     */
    public java.util.List<java.lang.String> getPriority() {
      return priority;
    }

    public GetTaskList setPriority(java.util.List<java.lang.String> priority) {
      this.priority = priority;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String taskCategory;

    /**

     */
    public java.lang.String getTaskCategory() {
      return taskCategory;
    }

    public GetTaskList setTaskCategory(java.lang.String taskCategory) {
      this.taskCategory = taskCategory;
      return this;
    }

    @Override
    public GetTaskList set(String parameterName, Object value) {
      return (GetTaskList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTaskListOfMonth".
   *
   * This request holds the parameters needed by the taskEndPoint server.  After setting any optional
   * parameters, call the {@link GetTaskListOfMonth#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param startTime
   * @param endTime
   * @return the request
   */
  public GetTaskListOfMonth getTaskListOfMonth(java.lang.Long id, java.lang.Long startTime, java.lang.Long endTime) throws java.io.IOException {
    GetTaskListOfMonth result = new GetTaskListOfMonth(id, startTime, endTime);
    initialize(result);
    return result;
  }

  public class GetTaskListOfMonth extends TaskEndPointRequest<com.buy.housing.backend.taskEndPoint.model.TaskCollection> {

    private static final String REST_PATH = "taskcollection/{id}/{startTime}/{endTime}";

    /**
     * Create a request for the method "getTaskListOfMonth".
     *
     * This request holds the parameters needed by the the taskEndPoint server.  After setting any
     * optional parameters, call the {@link GetTaskListOfMonth#execute()} method to invoke the remote
     * operation. <p> {@link GetTaskListOfMonth#initialize(com.google.api.client.googleapis.services.A
     * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param id
     * @param startTime
     * @param endTime
     * @since 1.13
     */
    protected GetTaskListOfMonth(java.lang.Long id, java.lang.Long startTime, java.lang.Long endTime) {
      super(TaskEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.taskEndPoint.model.TaskCollection.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.startTime = com.google.api.client.util.Preconditions.checkNotNull(startTime, "Required parameter startTime must be specified.");
      this.endTime = com.google.api.client.util.Preconditions.checkNotNull(endTime, "Required parameter endTime must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetTaskListOfMonth setAlt(java.lang.String alt) {
      return (GetTaskListOfMonth) super.setAlt(alt);
    }

    @Override
    public GetTaskListOfMonth setFields(java.lang.String fields) {
      return (GetTaskListOfMonth) super.setFields(fields);
    }

    @Override
    public GetTaskListOfMonth setKey(java.lang.String key) {
      return (GetTaskListOfMonth) super.setKey(key);
    }

    @Override
    public GetTaskListOfMonth setOauthToken(java.lang.String oauthToken) {
      return (GetTaskListOfMonth) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTaskListOfMonth setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTaskListOfMonth) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTaskListOfMonth setQuotaUser(java.lang.String quotaUser) {
      return (GetTaskListOfMonth) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTaskListOfMonth setUserIp(java.lang.String userIp) {
      return (GetTaskListOfMonth) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetTaskListOfMonth setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long startTime;

    /**

     */
    public java.lang.Long getStartTime() {
      return startTime;
    }

    public GetTaskListOfMonth setStartTime(java.lang.Long startTime) {
      this.startTime = startTime;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long endTime;

    /**

     */
    public java.lang.Long getEndTime() {
      return endTime;
    }

    public GetTaskListOfMonth setEndTime(java.lang.Long endTime) {
      this.endTime = endTime;
      return this;
    }

    @Override
    public GetTaskListOfMonth set(String parameterName, Object value) {
      return (GetTaskListOfMonth) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTaskListProjectWise".
   *
   * This request holds the parameters needed by the taskEndPoint server.  After setting any optional
   * parameters, call the {@link GetTaskListProjectWise#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @param token
   * @param projectId
   * @return the request
   */
  public GetTaskListProjectWise getTaskListProjectWise(java.lang.Long id, java.lang.String token, java.lang.Long projectId) throws java.io.IOException {
    GetTaskListProjectWise result = new GetTaskListProjectWise(id, token, projectId);
    initialize(result);
    return result;
  }

  public class GetTaskListProjectWise extends TaskEndPointRequest<com.buy.housing.backend.taskEndPoint.model.TaskListResponse> {

    private static final String REST_PATH = "tasklistresponse/{id}/{token}/{projectId}";

    /**
     * Create a request for the method "getTaskListProjectWise".
     *
     * This request holds the parameters needed by the the taskEndPoint server.  After setting any
     * optional parameters, call the {@link GetTaskListProjectWise#execute()} method to invoke the
     * remote operation. <p> {@link GetTaskListProjectWise#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param projectId
     * @since 1.13
     */
    protected GetTaskListProjectWise(java.lang.Long id, java.lang.String token, java.lang.Long projectId) {
      super(TaskEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.taskEndPoint.model.TaskListResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
      this.projectId = com.google.api.client.util.Preconditions.checkNotNull(projectId, "Required parameter projectId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetTaskListProjectWise setAlt(java.lang.String alt) {
      return (GetTaskListProjectWise) super.setAlt(alt);
    }

    @Override
    public GetTaskListProjectWise setFields(java.lang.String fields) {
      return (GetTaskListProjectWise) super.setFields(fields);
    }

    @Override
    public GetTaskListProjectWise setKey(java.lang.String key) {
      return (GetTaskListProjectWise) super.setKey(key);
    }

    @Override
    public GetTaskListProjectWise setOauthToken(java.lang.String oauthToken) {
      return (GetTaskListProjectWise) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTaskListProjectWise setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTaskListProjectWise) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTaskListProjectWise setQuotaUser(java.lang.String quotaUser) {
      return (GetTaskListProjectWise) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTaskListProjectWise setUserIp(java.lang.String userIp) {
      return (GetTaskListProjectWise) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetTaskListProjectWise setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public GetTaskListProjectWise setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long projectId;

    /**

     */
    public java.lang.Long getProjectId() {
      return projectId;
    }

    public GetTaskListProjectWise setProjectId(java.lang.Long projectId) {
      this.projectId = projectId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String taskCategory;

    /**

     */
    public java.lang.String getTaskCategory() {
      return taskCategory;
    }

    public GetTaskListProjectWise setTaskCategory(java.lang.String taskCategory) {
      this.taskCategory = taskCategory;
      return this;
    }

    @Override
    public GetTaskListProjectWise set(String parameterName, Object value) {
      return (GetTaskListProjectWise) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateTask".
   *
   * This request holds the parameters needed by the taskEndPoint server.  After setting any optional
   * parameters, call the {@link UpdateTask#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.buy.housing.backend.taskEndPoint.model.Task}
   * @return the request
   */
  public UpdateTask updateTask(com.buy.housing.backend.taskEndPoint.model.Task content) throws java.io.IOException {
    UpdateTask result = new UpdateTask(content);
    initialize(result);
    return result;
  }

  public class UpdateTask extends TaskEndPointRequest<com.buy.housing.backend.taskEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "commonresponse";

    /**
     * Create a request for the method "updateTask".
     *
     * This request holds the parameters needed by the the taskEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateTask#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateTask#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.buy.housing.backend.taskEndPoint.model.Task}
     * @since 1.13
     */
    protected UpdateTask(com.buy.housing.backend.taskEndPoint.model.Task content) {
      super(TaskEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.taskEndPoint.model.CommonResponse.class);
    }

    @Override
    public UpdateTask setAlt(java.lang.String alt) {
      return (UpdateTask) super.setAlt(alt);
    }

    @Override
    public UpdateTask setFields(java.lang.String fields) {
      return (UpdateTask) super.setFields(fields);
    }

    @Override
    public UpdateTask setKey(java.lang.String key) {
      return (UpdateTask) super.setKey(key);
    }

    @Override
    public UpdateTask setOauthToken(java.lang.String oauthToken) {
      return (UpdateTask) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateTask setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateTask) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateTask setQuotaUser(java.lang.String quotaUser) {
      return (UpdateTask) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateTask setUserIp(java.lang.String userIp) {
      return (UpdateTask) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public UpdateTask setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public UpdateTask setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public UpdateTask set(String parameterName, Object value) {
      return (UpdateTask) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateTaskList".
   *
   * This request holds the parameters needed by the taskEndPoint server.  After setting any optional
   * parameters, call the {@link UpdateTaskList#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param content the {@link com.buy.housing.backend.taskEndPoint.model.UpdateTaskListRequest}
   * @return the request
   */
  public UpdateTaskList updateTaskList(java.lang.Long id, java.lang.String token, com.buy.housing.backend.taskEndPoint.model.UpdateTaskListRequest content) throws java.io.IOException {
    UpdateTaskList result = new UpdateTaskList(id, token, content);
    initialize(result);
    return result;
  }

  public class UpdateTaskList extends TaskEndPointRequest<com.buy.housing.backend.taskEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "commonresponse/{Id}/{token}";

    /**
     * Create a request for the method "updateTaskList".
     *
     * This request holds the parameters needed by the the taskEndPoint server.  After setting any
     * optional parameters, call the {@link UpdateTaskList#execute()} method to invoke the remote
     * operation. <p> {@link UpdateTaskList#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @param token
     * @param content the {@link com.buy.housing.backend.taskEndPoint.model.UpdateTaskListRequest}
     * @since 1.13
     */
    protected UpdateTaskList(java.lang.Long id, java.lang.String token, com.buy.housing.backend.taskEndPoint.model.UpdateTaskListRequest content) {
      super(TaskEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.taskEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public UpdateTaskList setAlt(java.lang.String alt) {
      return (UpdateTaskList) super.setAlt(alt);
    }

    @Override
    public UpdateTaskList setFields(java.lang.String fields) {
      return (UpdateTaskList) super.setFields(fields);
    }

    @Override
    public UpdateTaskList setKey(java.lang.String key) {
      return (UpdateTaskList) super.setKey(key);
    }

    @Override
    public UpdateTaskList setOauthToken(java.lang.String oauthToken) {
      return (UpdateTaskList) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateTaskList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateTaskList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateTaskList setQuotaUser(java.lang.String quotaUser) {
      return (UpdateTaskList) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateTaskList setUserIp(java.lang.String userIp) {
      return (UpdateTaskList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public UpdateTaskList setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public UpdateTaskList setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @Override
    public UpdateTaskList set(String parameterName, Object value) {
      return (UpdateTaskList) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link TaskEndPoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link TaskEndPoint}. */
    @Override
    public TaskEndPoint build() {
      return new TaskEndPoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link TaskEndPointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setTaskEndPointRequestInitializer(
        TaskEndPointRequestInitializer taskendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(taskendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
