/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2018-02-26 17:53:51 UTC)
 * on 2018-03-14 at 11:50:18 UTC 
 * Modify at your own risk.
 */

package com.buy.housing.backend.decorEndPoint;

/**
 * Service definition for DecorEndPoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link DecorEndPointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class DecorEndPoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.23.0 of the decorEndPoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://housingtestserver.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "decorEndPoint/v1/";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public DecorEndPoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  DecorEndPoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addDecor".
   *
   * This request holds the parameters needed by the decorEndPoint server.  After setting any optional
   * parameters, call the {@link AddDecor#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param content the {@link com.buy.housing.backend.decorEndPoint.model.Decor}
   * @return the request
   */
  public AddDecor addDecor(java.lang.Long id, java.lang.String token, com.buy.housing.backend.decorEndPoint.model.Decor content) throws java.io.IOException {
    AddDecor result = new AddDecor(id, token, content);
    initialize(result);
    return result;
  }

  public class AddDecor extends DecorEndPointRequest<com.buy.housing.backend.decorEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "addDecor/{Id}/{token}";

    /**
     * Create a request for the method "addDecor".
     *
     * This request holds the parameters needed by the the decorEndPoint server.  After setting any
     * optional parameters, call the {@link AddDecor#execute()} method to invoke the remote operation.
     * <p> {@link
     * AddDecor#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param content the {@link com.buy.housing.backend.decorEndPoint.model.Decor}
     * @since 1.13
     */
    protected AddDecor(java.lang.Long id, java.lang.String token, com.buy.housing.backend.decorEndPoint.model.Decor content) {
      super(DecorEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.decorEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public AddDecor setAlt(java.lang.String alt) {
      return (AddDecor) super.setAlt(alt);
    }

    @Override
    public AddDecor setFields(java.lang.String fields) {
      return (AddDecor) super.setFields(fields);
    }

    @Override
    public AddDecor setKey(java.lang.String key) {
      return (AddDecor) super.setKey(key);
    }

    @Override
    public AddDecor setOauthToken(java.lang.String oauthToken) {
      return (AddDecor) super.setOauthToken(oauthToken);
    }

    @Override
    public AddDecor setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddDecor) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddDecor setQuotaUser(java.lang.String quotaUser) {
      return (AddDecor) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddDecor setUserIp(java.lang.String userIp) {
      return (AddDecor) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public AddDecor setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public AddDecor setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @Override
    public AddDecor set(String parameterName, Object value) {
      return (AddDecor) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addDecorTag".
   *
   * This request holds the parameters needed by the decorEndPoint server.  After setting any optional
   * parameters, call the {@link AddDecorTag#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param content the {@link com.buy.housing.backend.decorEndPoint.model.DecorTag}
   * @return the request
   */
  public AddDecorTag addDecorTag(java.lang.Long id, java.lang.String token, com.buy.housing.backend.decorEndPoint.model.DecorTag content) throws java.io.IOException {
    AddDecorTag result = new AddDecorTag(id, token, content);
    initialize(result);
    return result;
  }

  public class AddDecorTag extends DecorEndPointRequest<com.buy.housing.backend.decorEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "addDecorTag/{Id}/{token}";

    /**
     * Create a request for the method "addDecorTag".
     *
     * This request holds the parameters needed by the the decorEndPoint server.  After setting any
     * optional parameters, call the {@link AddDecorTag#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddDecorTag#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param content the {@link com.buy.housing.backend.decorEndPoint.model.DecorTag}
     * @since 1.13
     */
    protected AddDecorTag(java.lang.Long id, java.lang.String token, com.buy.housing.backend.decorEndPoint.model.DecorTag content) {
      super(DecorEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.decorEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public AddDecorTag setAlt(java.lang.String alt) {
      return (AddDecorTag) super.setAlt(alt);
    }

    @Override
    public AddDecorTag setFields(java.lang.String fields) {
      return (AddDecorTag) super.setFields(fields);
    }

    @Override
    public AddDecorTag setKey(java.lang.String key) {
      return (AddDecorTag) super.setKey(key);
    }

    @Override
    public AddDecorTag setOauthToken(java.lang.String oauthToken) {
      return (AddDecorTag) super.setOauthToken(oauthToken);
    }

    @Override
    public AddDecorTag setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddDecorTag) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddDecorTag setQuotaUser(java.lang.String quotaUser) {
      return (AddDecorTag) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddDecorTag setUserIp(java.lang.String userIp) {
      return (AddDecorTag) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public AddDecorTag setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public AddDecorTag setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @Override
    public AddDecorTag set(String parameterName, Object value) {
      return (AddDecorTag) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "editDecor".
   *
   * This request holds the parameters needed by the decorEndPoint server.  After setting any optional
   * parameters, call the {@link EditDecor#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param decorName
   * @param content the {@link com.buy.housing.backend.decorEndPoint.model.Decor}
   * @return the request
   */
  public EditDecor editDecor(java.lang.Long id, java.lang.String token, java.lang.String decorName, com.buy.housing.backend.decorEndPoint.model.Decor content) throws java.io.IOException {
    EditDecor result = new EditDecor(id, token, decorName, content);
    initialize(result);
    return result;
  }

  public class EditDecor extends DecorEndPointRequest<com.buy.housing.backend.decorEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "editDecor/{Id}/{token}/{decorName}";

    /**
     * Create a request for the method "editDecor".
     *
     * This request holds the parameters needed by the the decorEndPoint server.  After setting any
     * optional parameters, call the {@link EditDecor#execute()} method to invoke the remote
     * operation. <p> {@link
     * EditDecor#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param decorName
     * @param content the {@link com.buy.housing.backend.decorEndPoint.model.Decor}
     * @since 1.13
     */
    protected EditDecor(java.lang.Long id, java.lang.String token, java.lang.String decorName, com.buy.housing.backend.decorEndPoint.model.Decor content) {
      super(DecorEndPoint.this, "POST", REST_PATH, content, com.buy.housing.backend.decorEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
      this.decorName = com.google.api.client.util.Preconditions.checkNotNull(decorName, "Required parameter decorName must be specified.");
    }

    @Override
    public EditDecor setAlt(java.lang.String alt) {
      return (EditDecor) super.setAlt(alt);
    }

    @Override
    public EditDecor setFields(java.lang.String fields) {
      return (EditDecor) super.setFields(fields);
    }

    @Override
    public EditDecor setKey(java.lang.String key) {
      return (EditDecor) super.setKey(key);
    }

    @Override
    public EditDecor setOauthToken(java.lang.String oauthToken) {
      return (EditDecor) super.setOauthToken(oauthToken);
    }

    @Override
    public EditDecor setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (EditDecor) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public EditDecor setQuotaUser(java.lang.String quotaUser) {
      return (EditDecor) super.setQuotaUser(quotaUser);
    }

    @Override
    public EditDecor setUserIp(java.lang.String userIp) {
      return (EditDecor) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public EditDecor setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public EditDecor setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String decorName;

    /**

     */
    public java.lang.String getDecorName() {
      return decorName;
    }

    public EditDecor setDecorName(java.lang.String decorName) {
      this.decorName = decorName;
      return this;
    }

    @Override
    public EditDecor set(String parameterName, Object value) {
      return (EditDecor) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDecor".
   *
   * This request holds the parameters needed by the decorEndPoint server.  After setting any optional
   * parameters, call the {@link GetDecor#execute()} method to invoke the remote operation.
   *
   * @param decorName
   * @return the request
   */
  public GetDecor getDecor(java.lang.String decorName) throws java.io.IOException {
    GetDecor result = new GetDecor(decorName);
    initialize(result);
    return result;
  }

  public class GetDecor extends DecorEndPointRequest<com.buy.housing.backend.decorEndPoint.model.DecorResponse> {

    private static final String REST_PATH = "decorresponse/{decorName}";

    /**
     * Create a request for the method "getDecor".
     *
     * This request holds the parameters needed by the the decorEndPoint server.  After setting any
     * optional parameters, call the {@link GetDecor#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetDecor#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param decorName
     * @since 1.13
     */
    protected GetDecor(java.lang.String decorName) {
      super(DecorEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.decorEndPoint.model.DecorResponse.class);
      this.decorName = com.google.api.client.util.Preconditions.checkNotNull(decorName, "Required parameter decorName must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDecor setAlt(java.lang.String alt) {
      return (GetDecor) super.setAlt(alt);
    }

    @Override
    public GetDecor setFields(java.lang.String fields) {
      return (GetDecor) super.setFields(fields);
    }

    @Override
    public GetDecor setKey(java.lang.String key) {
      return (GetDecor) super.setKey(key);
    }

    @Override
    public GetDecor setOauthToken(java.lang.String oauthToken) {
      return (GetDecor) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDecor setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDecor) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDecor setQuotaUser(java.lang.String quotaUser) {
      return (GetDecor) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDecor setUserIp(java.lang.String userIp) {
      return (GetDecor) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String decorName;

    /**

     */
    public java.lang.String getDecorName() {
      return decorName;
    }

    public GetDecor setDecorName(java.lang.String decorName) {
      this.decorName = decorName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean next;

    /**

     */
    public java.lang.Boolean getNext() {
      return next;
    }

    public GetDecor setNext(java.lang.Boolean next) {
      this.next = next;
      return this;
    }

    @Override
    public GetDecor set(String parameterName, Object value) {
      return (GetDecor) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDecorList".
   *
   * This request holds the parameters needed by the decorEndPoint server.  After setting any optional
   * parameters, call the {@link GetDecorList#execute()} method to invoke the remote operation.
   *
   * @param offset
   * @param limit
   * @return the request
   */
  public GetDecorList getDecorList(java.lang.Integer offset, java.lang.Integer limit) throws java.io.IOException {
    GetDecorList result = new GetDecorList(offset, limit);
    initialize(result);
    return result;
  }

  public class GetDecorList extends DecorEndPointRequest<com.buy.housing.backend.decorEndPoint.model.DecorListResponse> {

    private static final String REST_PATH = "decorlistresponse/{offset}/{limit}";

    /**
     * Create a request for the method "getDecorList".
     *
     * This request holds the parameters needed by the the decorEndPoint server.  After setting any
     * optional parameters, call the {@link GetDecorList#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetDecorList#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param offset
     * @param limit
     * @since 1.13
     */
    protected GetDecorList(java.lang.Integer offset, java.lang.Integer limit) {
      super(DecorEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.decorEndPoint.model.DecorListResponse.class);
      this.offset = com.google.api.client.util.Preconditions.checkNotNull(offset, "Required parameter offset must be specified.");
      this.limit = com.google.api.client.util.Preconditions.checkNotNull(limit, "Required parameter limit must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDecorList setAlt(java.lang.String alt) {
      return (GetDecorList) super.setAlt(alt);
    }

    @Override
    public GetDecorList setFields(java.lang.String fields) {
      return (GetDecorList) super.setFields(fields);
    }

    @Override
    public GetDecorList setKey(java.lang.String key) {
      return (GetDecorList) super.setKey(key);
    }

    @Override
    public GetDecorList setOauthToken(java.lang.String oauthToken) {
      return (GetDecorList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDecorList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDecorList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDecorList setQuotaUser(java.lang.String quotaUser) {
      return (GetDecorList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDecorList setUserIp(java.lang.String userIp) {
      return (GetDecorList) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer offset;

    /**

     */
    public java.lang.Integer getOffset() {
      return offset;
    }

    public GetDecorList setOffset(java.lang.Integer offset) {
      this.offset = offset;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public GetDecorList setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String decorStatus;

    /**

     */
    public java.lang.String getDecorStatus() {
      return decorStatus;
    }

    public GetDecorList setDecorStatus(java.lang.String decorStatus) {
      this.decorStatus = decorStatus;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String decorTag;

    /**

     */
    public java.lang.String getDecorTag() {
      return decorTag;
    }

    public GetDecorList setDecorTag(java.lang.String decorTag) {
      this.decorTag = decorTag;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean summary;

    /**

     */
    public java.lang.Boolean getSummary() {
      return summary;
    }

    public GetDecorList setSummary(java.lang.Boolean summary) {
      this.summary = summary;
      return this;
    }

    @Override
    public GetDecorList set(String parameterName, Object value) {
      return (GetDecorList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDecorTags".
   *
   * This request holds the parameters needed by the decorEndPoint server.  After setting any optional
   * parameters, call the {@link GetDecorTags#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @return the request
   */
  public GetDecorTags getDecorTags(java.lang.Long id, java.lang.String token) throws java.io.IOException {
    GetDecorTags result = new GetDecorTags(id, token);
    initialize(result);
    return result;
  }

  public class GetDecorTags extends DecorEndPointRequest<com.buy.housing.backend.decorEndPoint.model.DecorTagCollection> {

    private static final String REST_PATH = "decortagcollection/{Id}/{token}";

    /**
     * Create a request for the method "getDecorTags".
     *
     * This request holds the parameters needed by the the decorEndPoint server.  After setting any
     * optional parameters, call the {@link GetDecorTags#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetDecorTags#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @since 1.13
     */
    protected GetDecorTags(java.lang.Long id, java.lang.String token) {
      super(DecorEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.decorEndPoint.model.DecorTagCollection.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDecorTags setAlt(java.lang.String alt) {
      return (GetDecorTags) super.setAlt(alt);
    }

    @Override
    public GetDecorTags setFields(java.lang.String fields) {
      return (GetDecorTags) super.setFields(fields);
    }

    @Override
    public GetDecorTags setKey(java.lang.String key) {
      return (GetDecorTags) super.setKey(key);
    }

    @Override
    public GetDecorTags setOauthToken(java.lang.String oauthToken) {
      return (GetDecorTags) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDecorTags setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDecorTags) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDecorTags setQuotaUser(java.lang.String quotaUser) {
      return (GetDecorTags) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDecorTags setUserIp(java.lang.String userIp) {
      return (GetDecorTags) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetDecorTags setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public GetDecorTags setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @Override
    public GetDecorTags set(String parameterName, Object value) {
      return (GetDecorTags) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getNewsBlogDecorList".
   *
   * This request holds the parameters needed by the decorEndPoint server.  After setting any optional
   * parameters, call the {@link GetNewsBlogDecorList#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetNewsBlogDecorList getNewsBlogDecorList() throws java.io.IOException {
    GetNewsBlogDecorList result = new GetNewsBlogDecorList();
    initialize(result);
    return result;
  }

  public class GetNewsBlogDecorList extends DecorEndPointRequest<com.buy.housing.backend.decorEndPoint.model.NewsBlogDecorResponse> {

    private static final String REST_PATH = "newsblogdecorresponse";

    /**
     * Create a request for the method "getNewsBlogDecorList".
     *
     * This request holds the parameters needed by the the decorEndPoint server.  After setting any
     * optional parameters, call the {@link GetNewsBlogDecorList#execute()} method to invoke the
     * remote operation. <p> {@link GetNewsBlogDecorList#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetNewsBlogDecorList() {
      super(DecorEndPoint.this, "GET", REST_PATH, null, com.buy.housing.backend.decorEndPoint.model.NewsBlogDecorResponse.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetNewsBlogDecorList setAlt(java.lang.String alt) {
      return (GetNewsBlogDecorList) super.setAlt(alt);
    }

    @Override
    public GetNewsBlogDecorList setFields(java.lang.String fields) {
      return (GetNewsBlogDecorList) super.setFields(fields);
    }

    @Override
    public GetNewsBlogDecorList setKey(java.lang.String key) {
      return (GetNewsBlogDecorList) super.setKey(key);
    }

    @Override
    public GetNewsBlogDecorList setOauthToken(java.lang.String oauthToken) {
      return (GetNewsBlogDecorList) super.setOauthToken(oauthToken);
    }

    @Override
    public GetNewsBlogDecorList setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetNewsBlogDecorList) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetNewsBlogDecorList setQuotaUser(java.lang.String quotaUser) {
      return (GetNewsBlogDecorList) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetNewsBlogDecorList setUserIp(java.lang.String userIp) {
      return (GetNewsBlogDecorList) super.setUserIp(userIp);
    }

    @Override
    public GetNewsBlogDecorList set(String parameterName, Object value) {
      return (GetNewsBlogDecorList) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "publishDecor".
   *
   * This request holds the parameters needed by the decorEndPoint server.  After setting any optional
   * parameters, call the {@link PublishDecor#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param token
   * @param decorName
   * @param decorStatus
   * @return the request
   */
  public PublishDecor publishDecor(java.lang.Long id, java.lang.String token, java.lang.String decorName, java.lang.String decorStatus) throws java.io.IOException {
    PublishDecor result = new PublishDecor(id, token, decorName, decorStatus);
    initialize(result);
    return result;
  }

  public class PublishDecor extends DecorEndPointRequest<com.buy.housing.backend.decorEndPoint.model.CommonResponse> {

    private static final String REST_PATH = "publishDecor/{Id}/{token}/{decorName}/{decorStatus}";

    /**
     * Create a request for the method "publishDecor".
     *
     * This request holds the parameters needed by the the decorEndPoint server.  After setting any
     * optional parameters, call the {@link PublishDecor#execute()} method to invoke the remote
     * operation. <p> {@link
     * PublishDecor#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param token
     * @param decorName
     * @param decorStatus
     * @since 1.13
     */
    protected PublishDecor(java.lang.Long id, java.lang.String token, java.lang.String decorName, java.lang.String decorStatus) {
      super(DecorEndPoint.this, "POST", REST_PATH, null, com.buy.housing.backend.decorEndPoint.model.CommonResponse.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.token = com.google.api.client.util.Preconditions.checkNotNull(token, "Required parameter token must be specified.");
      this.decorName = com.google.api.client.util.Preconditions.checkNotNull(decorName, "Required parameter decorName must be specified.");
      this.decorStatus = com.google.api.client.util.Preconditions.checkNotNull(decorStatus, "Required parameter decorStatus must be specified.");
    }

    @Override
    public PublishDecor setAlt(java.lang.String alt) {
      return (PublishDecor) super.setAlt(alt);
    }

    @Override
    public PublishDecor setFields(java.lang.String fields) {
      return (PublishDecor) super.setFields(fields);
    }

    @Override
    public PublishDecor setKey(java.lang.String key) {
      return (PublishDecor) super.setKey(key);
    }

    @Override
    public PublishDecor setOauthToken(java.lang.String oauthToken) {
      return (PublishDecor) super.setOauthToken(oauthToken);
    }

    @Override
    public PublishDecor setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (PublishDecor) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public PublishDecor setQuotaUser(java.lang.String quotaUser) {
      return (PublishDecor) super.setQuotaUser(quotaUser);
    }

    @Override
    public PublishDecor setUserIp(java.lang.String userIp) {
      return (PublishDecor) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("Id")
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public PublishDecor setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String token;

    /**

     */
    public java.lang.String getToken() {
      return token;
    }

    public PublishDecor setToken(java.lang.String token) {
      this.token = token;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String decorName;

    /**

     */
    public java.lang.String getDecorName() {
      return decorName;
    }

    public PublishDecor setDecorName(java.lang.String decorName) {
      this.decorName = decorName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String decorStatus;

    /**

     */
    public java.lang.String getDecorStatus() {
      return decorStatus;
    }

    public PublishDecor setDecorStatus(java.lang.String decorStatus) {
      this.decorStatus = decorStatus;
      return this;
    }

    @Override
    public PublishDecor set(String parameterName, Object value) {
      return (PublishDecor) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link DecorEndPoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link DecorEndPoint}. */
    @Override
    public DecorEndPoint build() {
      return new DecorEndPoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link DecorEndPointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDecorEndPointRequestInitializer(
        DecorEndPointRequestInitializer decorendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(decorendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
