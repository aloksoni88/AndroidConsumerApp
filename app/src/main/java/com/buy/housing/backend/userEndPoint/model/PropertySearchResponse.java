/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2018-10-08 17:45:39 UTC)
 * on 2019-04-23 at 05:46:42 UTC 
 * Modify at your own risk.
 */

package com.buy.housing.backend.userEndPoint.model;

/**
 * Model definition for PropertySearchResponse.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the userEndPoint. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PropertySearchResponse extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Blog> blogList;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Builder builder;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CitySummary citySummary;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer count;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer errorId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String errorMessage;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<News> newsList;

  static {
    // hack to force ProGuard to consider News used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(News.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ProjectScore> ourPickScore;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<PlaceInfo> placeInfoList;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<SearchProperty> popularProperties;

  static {
    // hack to force ProGuard to consider SearchProperty used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(SearchProperty.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Project> projectList;

  static {
    // hack to force ProGuard to consider Project used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Project.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long requestId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<SearchProperty> searchProperties;

  static {
    // hack to force ProGuard to consider SearchProperty used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(SearchProperty.class);
  }

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean status;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Project> topCityProjectList;

  static {
    // hack to force ProGuard to consider Project used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Project.class);
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Blog> getBlogList() {
    return blogList;
  }

  /**
   * @param blogList blogList or {@code null} for none
   */
  public PropertySearchResponse setBlogList(java.util.List<Blog> blogList) {
    this.blogList = blogList;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Builder getBuilder() {
    return builder;
  }

  /**
   * @param builder builder or {@code null} for none
   */
  public PropertySearchResponse setBuilder(Builder builder) {
    this.builder = builder;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public CitySummary getCitySummary() {
    return citySummary;
  }

  /**
   * @param citySummary citySummary or {@code null} for none
   */
  public PropertySearchResponse setCitySummary(CitySummary citySummary) {
    this.citySummary = citySummary;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCount() {
    return count;
  }

  /**
   * @param count count or {@code null} for none
   */
  public PropertySearchResponse setCount(java.lang.Integer count) {
    this.count = count;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getErrorId() {
    return errorId;
  }

  /**
   * @param errorId errorId or {@code null} for none
   */
  public PropertySearchResponse setErrorId(java.lang.Integer errorId) {
    this.errorId = errorId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getErrorMessage() {
    return errorMessage;
  }

  /**
   * @param errorMessage errorMessage or {@code null} for none
   */
  public PropertySearchResponse setErrorMessage(java.lang.String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public PropertySearchResponse setId(java.lang.Long id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<News> getNewsList() {
    return newsList;
  }

  /**
   * @param newsList newsList or {@code null} for none
   */
  public PropertySearchResponse setNewsList(java.util.List<News> newsList) {
    this.newsList = newsList;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<ProjectScore> getOurPickScore() {
    return ourPickScore;
  }

  /**
   * @param ourPickScore ourPickScore or {@code null} for none
   */
  public PropertySearchResponse setOurPickScore(java.util.List<ProjectScore> ourPickScore) {
    this.ourPickScore = ourPickScore;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<PlaceInfo> getPlaceInfoList() {
    return placeInfoList;
  }

  /**
   * @param placeInfoList placeInfoList or {@code null} for none
   */
  public PropertySearchResponse setPlaceInfoList(java.util.List<PlaceInfo> placeInfoList) {
    this.placeInfoList = placeInfoList;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<SearchProperty> getPopularProperties() {
    return popularProperties;
  }

  /**
   * @param popularProperties popularProperties or {@code null} for none
   */
  public PropertySearchResponse setPopularProperties(java.util.List<SearchProperty> popularProperties) {
    this.popularProperties = popularProperties;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Project> getProjectList() {
    return projectList;
  }

  /**
   * @param projectList projectList or {@code null} for none
   */
  public PropertySearchResponse setProjectList(java.util.List<Project> projectList) {
    this.projectList = projectList;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getRequestId() {
    return requestId;
  }

  /**
   * @param requestId requestId or {@code null} for none
   */
  public PropertySearchResponse setRequestId(java.lang.Long requestId) {
    this.requestId = requestId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<SearchProperty> getSearchProperties() {
    return searchProperties;
  }

  /**
   * @param searchProperties searchProperties or {@code null} for none
   */
  public PropertySearchResponse setSearchProperties(java.util.List<SearchProperty> searchProperties) {
    this.searchProperties = searchProperties;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getStatus() {
    return status;
  }

  /**
   * @param status status or {@code null} for none
   */
  public PropertySearchResponse setStatus(java.lang.Boolean status) {
    this.status = status;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Project> getTopCityProjectList() {
    return topCityProjectList;
  }

  /**
   * @param topCityProjectList topCityProjectList or {@code null} for none
   */
  public PropertySearchResponse setTopCityProjectList(java.util.List<Project> topCityProjectList) {
    this.topCityProjectList = topCityProjectList;
    return this;
  }

  @Override
  public PropertySearchResponse set(String fieldName, Object value) {
    return (PropertySearchResponse) super.set(fieldName, value);
  }

  @Override
  public PropertySearchResponse clone() {
    return (PropertySearchResponse) super.clone();
  }

}
